<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="12:ModuleTestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ab9c5aea940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ab9c5bc0848"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2ab9c5bc0848"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2ab9c5bcee20"/></to>
    </wire>
    <wire loc="13:ModuleTestAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2ab9c5aeb0e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dac350"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dac350"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dfe310"/></to>
    </wire>
    <wire loc="14:ModuleTestAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x2ab9c5aff528"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a28530"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a28530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a50c08"/></to>
    </wire>
    <wire loc="15:ModuleTestAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2ab9c5b012b8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2ab9c6a52a48"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2ab9c6a52a48"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2ab9c6a87c08"/></to>
    </wire>
    <wire loc="16:ModuleTestAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c5af6330"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5d79e00"/></to>
    </wire>
    <wire loc="18:ModuleTestAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c5b58278"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6a30438"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c6a30438"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c76b6498"/></to>
    </wire>
    <wire loc="19:ModuleTestAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c5b557d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6a24398"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="20:ModuleTestAppC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c5b752b8"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6a1ca70"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6a1ca70"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6a8c2c8"/></to>
    </wire>
    <wire loc="21:ModuleTestAppC.nc">
      <from><interface-ref name="timerOne" scoped="" ref="0x2ab9c5b7bde8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c70fe620"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c70fe620"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="22:ModuleTestAppC.nc">
      <from><interface-ref name="timerTwo" scoped="" ref="0x2ab9c5b86020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c70f8aa0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c70f8aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:ModuleTestAppC.nc">
      <from><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c5b8bd48"/></from>
      <to><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6a55510"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6a55510"/></from>
      <to><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6a86698"/></to>
    </wire>
    <wire loc="24:ModuleTestAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c5b8e408"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68aaa08"/></to>
    </wire>
    <wire loc="105:ModuleTestC.nc">
      <from><interface-ref name="sendMessage" scoped="" ref="0x2ab9c5ba44d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c78528f8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c77ecc68"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c77fe8a8"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c6f15020"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c6c00160"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c7098c98"/></to>
    </wire>
    <wire loc="276:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c6cd5d50"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c694bc28"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c68b6628"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c68d4080"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c68ab198"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c673d080"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c664f020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c6562b80"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c5f5e3c0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c7523620"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c6332438"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c5ebc020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ab9c5d6e490"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ab9c59f0be8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2ab9c59f0be8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2ab9c5aadc00"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ab9c5d6ee68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c5bbcb10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c5bbcb10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c5bd64f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5d6c560"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bcc9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c60e6190"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab9c5bc8b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab9c5d457e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2ab9c5bd5398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c5d451b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ab9c5bd6b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c5d9c2d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2ab9c5bd6b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ab9c5bd8a08"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2ab9c5bd8a08"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2ab9c5bdf428"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bd0108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bcc9a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2ab9c5bea5f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2ab9c5bf21a0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2ab9c5bf21a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c77430"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bde7f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bd0108"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2ab9c5c1ac78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c5cf7970"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2ab9c5bfe7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c9d020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c9d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7270100"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2ab9c5c177e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab9c5ca1d60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab9c5ca1d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72db100"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2ab9c5c1f4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab9c5cbb5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab9c5cbb5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7352100"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2ab9c5bf04d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c75740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c75740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7184c38"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2ab9c5c0f1a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab9c5cbd2a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab9c5cbd2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7358100"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2ab9c5bee7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c81930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c81930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7200180"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2ab9c5bf4968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c83740"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c83740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7267100"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2ab9c5c0dc78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c9a430"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c9a430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72d2100"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2ab9c5c13c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab9c5cb1120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab9c5cb1120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7340100"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2ab9c5be4c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c66020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c66020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7193c38"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2ab9c5bebc78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c7ed60"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c7ed60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c71f6100"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2ab9c5c03e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c94bd8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c94bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c725e100"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2ab9c5c091a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c978c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c978c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72c9100"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2ab9c5c1c968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab9c5cb7a50"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab9c5cb7a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7348100"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2ab9c5c287e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c5d14020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2ab9c5c074d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab9c5ca3a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab9c5ca3a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72e2100"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c77430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c718ac38"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2ab9c5bf9348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c79120"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c79120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c71ed100"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2ab9c5c184d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c5d08ab0"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2ab9c5bf6658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c86500"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c86500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7203180"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2ab9c5bfd968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c9c120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c9c120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c726d100"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2ab9c5c16968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab9c5cb4e18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab9c5cb4e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7346100"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2ab9c5c1e658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab9c5cb9740"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab9c5cb9740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c734e100"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2ab9c5bef658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c738c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c738c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7181c38"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2ab9c5bed968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c80a50"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c80a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c71fd100"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2ab9c5c05af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c968c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c968c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7264100"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2ab9c5c0ce00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c995b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c995b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72cf100"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2ab9c5c12e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab9c5caf2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab9c5caf2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c733d100"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2ab9c5be3e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c65120"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c65120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7190c38"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2ab9c5bfce00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c7ce18"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c7ce18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c71f3100"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2ab9c5c01020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c93d60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c93d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c725b100"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2ab9c5c1baf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab9c5cb6bd8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab9c5cb6bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c73b5100"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2ab9c5bff348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c9fe40"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c9fe40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7273180"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2ab9c5c06658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab9c5ca2bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab9c5ca2bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72df100"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2ab9c5c20348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab9c5cbc430"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab9c5cbc430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7355100"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2ab9c5c27968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c5d0f180"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2ab9c5bf1348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c765b8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c765b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7187c38"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2ab9c5bf74d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c8c2a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c8c2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c71ea100"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2ab9c5c10020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab9c5cbe1e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab9c5cbe1e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c735b180"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2ab9c5bf57e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c845b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c845b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c726b100"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2ab9c5c0eaf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c9b2a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c9b2a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72d5100"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2ab9c5c15af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab9c5cb2020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab9c5cb2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7343100"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2ab9c5c1d7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab9c5cb88c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab9c5cb88c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c734b100"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2ab9c5be1ab0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c68dc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c68dc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7197ca0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2ab9c5becaf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c7fbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c7fbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c71f9100"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2ab9c5c04c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c95a50"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c95a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7261100"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2ab9c5c0a020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c98740"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c98740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72cc100"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2ab9c5c29658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c5d03c38"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2ab9c5c08348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2ab9c5ca4930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2ab9c5ca4930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c72e5180"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2ab9c5c001a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c92e18"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c92e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c7258100"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2ab9c5bf3020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c782a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c782a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c718dc38"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2ab9c5bfa100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c7a020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c7a020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2ab9c71f0100"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c5aacb08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2ab9c5aa9020"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2ab9c59fadc8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab9c5acd7b8"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab9c5fd4790"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c5d9c2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c5d79838"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ab9c5d75540"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2ab9c5d77d70"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2ab9c5d77d70"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2ab9c5be3e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ab9c5d747d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2ab9c5d9e020"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2ab9c5d9e020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2ab9c5be4c78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ab9c5d8a958"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2ab9c5d9d1b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2ab9c5d9d1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2ab9c5be1ab0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dfe310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e223a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c5db8788"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c5dfc2b0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c5dfc2b0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c69a1980"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ab9c5da9498"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ab9c5df9020"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ab9c5df9020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ab9c699e628"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5df8bd8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c5df8bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c699c2a8"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c5dc8020"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c66bf130"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c66bf130"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c66b1060"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5deb848"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5e06ac0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5e06ac0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5e314a0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c5daa928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c5dfa3c8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c5dfa3c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c69a0ab0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5dcb0d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5df67e0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5df67e0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5e324d0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5df9610"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5df9610"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c699ec18"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ab9c5ddce48"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ab9c66bb020"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ab9c66bb020"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ab9c66ad020"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e223a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c6940dc8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c5e18b48"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c699a020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2ab9c5e25658"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2ab9c699b400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c5e09888"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c5e33678"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c5e33678"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5e314a0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c6940318"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5e324d0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ab9c66c13b8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ab9c5e0fa98"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ab9c5e30020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ab9c5e30020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ab9c69742d0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c5e057b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c5e32e30"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c5e32e30"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c66c06b0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x2ab9c6992698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c5e204f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c6998020"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c5e34340"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c5e34340"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c6918db8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6998cc8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c5e33060"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c5e33060"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c6917ae8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ab9c69948d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ab9c65002b8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c6997368"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66b42e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c6996188"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66b3b60"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c6996ab0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c5ea9af8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c5ea9af8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c5ebb328"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ab9c69936a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c5e2b678"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c5e2b678"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c5e41948"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c69912a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ab9c6940dc8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2ab9c6985d28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c66c06b0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c66b2630"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2ab9c69742d0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2ab9c6972540"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c6918db8"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c690d490"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c6940318"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c6981170"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2ab9c5e1ce58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6918748"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6918748"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x2ab9c690edc8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c66c13b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ab9c66b3210"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c5e204f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c68bbe20"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c68bbe20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c690f428"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2ab9c5e1c1a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6919a40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c6919a40"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2ab9c690e118"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ab9c5e35518"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ab9c69161a8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x2ab9c69161a8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x2ab9c690c808"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c6917ae8"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c690c188"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ab9c6985d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e2f6a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e2f6a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e42140"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c6915670"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6897d08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c6897d08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c68d5438"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c6894a40"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c69775c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c69775c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ab9c6973020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c6973020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6941080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c6941080"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ab9c6986838"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c6986838"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c5e2c2d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c5e2c2d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c5e42be0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6915020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6941c80"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6941c80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6985668"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6985668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c68bd750"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c68bd750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c68b9958"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c68ba560"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c5e2b020"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c5e2b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c66182f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c66182f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c664e7a0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c5e40798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c5e9de00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c5e9de00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c5ebc650"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ab9c5e38a78"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ab9c5e988b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x2ab9c5e988b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x2ab9c5eb9080"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ab9c5e3ece8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6518c48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2ab9c5e3ece8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6619080"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ab9c6619080"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c664f660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ab9c6518c48"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6561310"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ab9c5e4b4b8"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x2ab9c654e480"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x2ab9c654e480"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6561b70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x2ab9c5e37208"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c654d140"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c654d140"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c6560948"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c5e4ade0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c5e48020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c5e36020"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x2ab9c5e59540"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c68b2338"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ab9c68b2338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c6308790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c5e367b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x2ab9c5e55b80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x2ab9c5e56cf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x2ab9c5e58e68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x2ab9c5ec0d28"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x2ab9c5eb84d0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x2ab9c5eb5060"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ab9c5f5ed38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x2ab9c5f5ed38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab9c5f779e8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ab9c5ec8020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ab9c61b8de0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ab9c61b8de0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ab9c5bee7e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ab9c5ec71b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2ab9c61b4338"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2ab9c61b4338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2ab9c5bf04d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ab9c5ec6378"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x2ab9c61b2648"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x2ab9c61b2648"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x2ab9c5bf1348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ab9c5edeb78"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x2ab9c61d0958"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x2ab9c61d0958"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ab9c6260cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ab9c5eeb3b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c6496280"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c6496280"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c62a2808"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ab9c5eea518"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x2ab9c6494a50"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ab9c6494a50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c5eeabf0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c6492cd0"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c6492cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c5eecca0"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c6495de8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c6495de8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c5eec3c0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c6491368"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c6491368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c5ed4120"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c64bf838"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c64bf838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c5ed4990"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c64bd7c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c64bd7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c5ed3230"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c64bb020"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c64bb020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c5ed3ab8"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c64c4dd8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c64c4dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c5eef3d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c64c25c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c64c25c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ab9c5ee0a60"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x2ab9c64b77c0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ab9c64b77c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c5ee0128"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c64b7020"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c64b7020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c5eefc48"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c64c0c90"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c64c0c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ab9c5eee530"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x2ab9c64c2d60"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ab9c64c2d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c5eeeda0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c64c1cc8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c64c1cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x2ab9c5ee8e50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c64dca48"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c64dca48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c62a2808"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x2ab9c5ee8140"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c64ee1a8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c64ee1a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c62a2808"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ab9c5ed91b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ab9c65002b8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ab9c5eb47f0"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ab9c6502d10"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x2ab9c5efb3f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x2ab9c5efc598"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c5f5e3c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c61bc928"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c61bc928"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c619aa58"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab9c5f779e8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab9c7436de8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab9c7436de8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab9c74a82f0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x2ab9c74a2688"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab9c742e528"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab9c742e528"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab9c7498750"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab9c74a4410"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab9c612dd70"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab9c612dd70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab9c61650e0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2ab9c74959c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c5f81020"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c5f81020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6022490"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2ab9c7490a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ab9c5f9f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5f930c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c6040568"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2ab9c5fa3b68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ab9c603fca0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ab9c5f9f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2ab9c603a540"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ab9c5f9f020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2ab9c60368e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ab9c5f9f020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2ab9c6033b88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x2ab9c6051020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5fc9950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5fc9950"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5fd9558"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ab9c5fbf470"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ab9c5fd2020"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ab9c5fad980"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ab9c5fd7670"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c5fb6d90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c5fbc400"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c60e68b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c5f81020"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2ab9c61622b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab9c612bad0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab9c612bad0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab9c6123a98"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6138b78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c5f81020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ab9c61b6020"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2ab9c5bf74d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ab9c61b5198"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x2ab9c5c13c78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ab9c5f5fc88"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2ab9c5c0a020"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ab9c61b34b0"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2ab9c5c0dc78"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ab9c61ccd68"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ab9c61caa38"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ab9c61cf588"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x2ab9c61dc2c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x2ab9c61c9700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2ab9c5fa3b68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ab9c61dcd78"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x2ab9c61ebb38"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x2ab9c61ebb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c6243cd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x2ab9c625d8e0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ab9c5f5fc88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x2ab9c61f0c88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c622dcf8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x2ab9c61edb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c624a180"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x2ab9c61eab38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c623e9d8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x2ab9c61efb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c62537e8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x2ab9c61ecb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c6246020"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x2ab9c61f3db0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c6219258"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x2ab9c61eeb38"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x2ab9c624f3e0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c622f060"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x2ab9c620d850"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c622bb10"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x2ab9c620f020"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c62525f8"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x2ab9c620f758"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c624e2e8"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x2ab9c620e020"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6249020"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x2ab9c620e758"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6246de0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x2ab9c620b020"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6242b10"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x2ab9c620b758"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6269908"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x2ab9c620a020"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x2ab9c625a278"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ab9c6494438"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c64be7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ab9c64bd020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c64b27c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ab9c64b47c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c64926b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c64b57c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ab9c64b9020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6496e78"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c629f4c8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c629f4c8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c62974e8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c6490020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ab9c6490638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c6490d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c64b4020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c64c1528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c64b2020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ab9c64b3020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ab9c64b97c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c64b5020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c64bb7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c64b1020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ab9c64957d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ab9c64c4638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c64c04f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c64be020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c64c53a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ab9c64c4020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c6491980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c64b87c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ab9c64b37c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c64b8020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ab9c64920a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ab9c64ba7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c64ba020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ab9c64c59b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c64b00a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c62c04d0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c62bf680"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c62be3c8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c62a2808"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c6296300"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c62bd1c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x2ab9c62bb0e0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c630d978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ab9c630d978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c6308790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ab9c62bd8e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c6482020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c6482020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c645f870"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ab9c62b9470"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6482c18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6482c18"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6345a20"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c62b1860"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c64812a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c64812a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c633ccc0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c62bbe50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x2ab9c62aeb80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ab9c6308790"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c6331020"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c633ccc0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c6337020"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6345a20"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6339d80"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c6483960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c6345400"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c6345400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c63397a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x2ab9c645c700"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c63419f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2ab9c648f4a8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ab9c5bee7e0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2ab9c633c1f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2ab9c6338428"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c63419f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c6337c88"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2ab9c6379208"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c6468200"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c6468200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c7521a28"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab9c63755d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab9c6467760"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab9c6467760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab9c75a8020"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2ab9c6364020"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2ab9c63bb020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2ab9c63bb020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2ab9c63b8dc0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2ab9c6375d78"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ab9c5ace240"/></to>
    </wire>
    <wire loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2ab9c6386b58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2ab9c63dc350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2ab9c5ace240"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2ab9c63aec70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2ab9c5bee7e0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2ab9c63b2de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2ab9c5bed968"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2ab9c63ad020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2ab9c5becaf0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2ab9c63dd190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2ab9c5bebc78"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2ab9c6467020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2ab9c7520820"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab9c75a88c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab9c6465020"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ab9c75a70a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ab9c7523bf8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2ab9c75a7b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c64cf7c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ab9c64d9cd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c64d27c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c64cc2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ab9c64cca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c64f62e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ab9c64f92e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c64d7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c64fa2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ab9c64d17c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c64d07c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ab9c64c9a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c64cb2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c64da740"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c629f4c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c64d6900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ab9c64d5020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c64d5738"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c64faa88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c64d7c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c64d0020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c64d1020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c64d96b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c64f8a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ab9c64f9a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ab9c64c82e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c64fba88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c64ca2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c64f6a88"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ab9c64d90a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ab9c64d2020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c64cf020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c64cba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c64cd2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ab9c64d8368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c64cda88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c64d5d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ab9c64d39b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ab9c64fb2e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c64c6a88"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c64d62e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c64c62e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ab9c64f82e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c64c8a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ab9c64d8980"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ab9c64c92e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c64d7638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c64caa88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ab9c64d33a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c64f4020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c64e2c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ab9c64ec3a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c64e6dd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c65167c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ab9c6515020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c650a7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ab9c650d7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c64eb638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c650e7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ab9c64e5d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c64e3cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ab9c6511020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c65157c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c64eeda0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c629f4c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c64e8020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ab9c64e8638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c64e8d50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c650d020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c64e92e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c64e3528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c64e55c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c64edd60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c650a020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ab9c650b020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ab9c65117c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c650e020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c65147c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c6509020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ab9c64ed748"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ab9c64e6638"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c64e24f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c6514020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c64e1838"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ab9c64ec9b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c6516020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c64e73a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ab9c64e6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ab9c650f7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c650f020"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c64e9900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c65107c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ab9c650b7c0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c6510020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ab9c64eb020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ab9c65127c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c64ebc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c6512020"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ab9c64e79b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c65080a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x2ab9c654ccb8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x2ab9c655f8c0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x2ab9c654b458"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x2ab9c655e060"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x2ab9c655e9d8"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x2ab9c5f5ed38"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x2ab9c65538b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x2ab9c5f5fc88"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ab9c6552c98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ab9c61b8de0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x2ab9c6584e20"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x2ab9c61b34b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x2ab9c6583d60"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x2ab9c61ccd68"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ab9c6581020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c66087d0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c66087d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c62a2808"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6581cb0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6607430"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6607430"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c629f4c8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ab9c657e670"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ab9c6607d58"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ab9c6607d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ab9c657ed40"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x2ab9c6604638"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ab9c6604638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c657d478"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c6604c50"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c6604c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c657db68"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c6602638"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c6602638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c657fda8"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c65fc470"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c65fc470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c6580720"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c66255f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c66255f8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c657f538"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c662bc10"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c662bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c657c3d0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c65fec10"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c65fec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c657b558"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c66335f8"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c66335f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c657bde0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c6633d98"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c6633d98"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ab9c657ce30"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x2ab9c65ff020"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ab9c65ff020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c65786f0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c6628470"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c6628470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ab9c657a650"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ab9c662ac10"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ab9c662ac10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ab9c657ae80"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ab9c6629470"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ab9c6629470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ab9c6573750"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ab9c6619868"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x2ab9c6619868"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x2ab9c664fe48"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c655a9a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c65597f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ab9c6558460"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c66bf130"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ab9c65831d8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ab9c66b9ac8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ab9c66b9ac8"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ab9c66e7ac8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c65760c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c65fb470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ab9c66059b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c65fe470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ab9c66325c0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c6628c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ab9c65fd470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ab9c662f470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c6632d60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ab9c6602c50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c66013a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c662a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c6603900"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c65fdc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c66053a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ab9c662fc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c662b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c6631cc8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c6626470"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ab9c65ffc50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c65fcc10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c6631528"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c65fbe10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ab9c6604020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c66019b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ab9c65ff638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ab9c662cc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c662c470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c6602020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c662ec10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ab9c6629c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c662e470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ab9c6630c90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c66032e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c66304f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x2ab9c6618a48"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x2ab9c664d020"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c663aba0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x2ab9c664d6b8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x2ab9c61b8de0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x2ab9c664c998"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x2ab9c61b6020"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x2ab9c664bb28"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x2ab9c61b5198"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ab9c664ad40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ab9c61cf588"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2ab9c6649900"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c6865db8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2ab9c6865db8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2ab9c62a2808"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c66486a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c684ac10"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c684ac10"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c6647c10"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c685f638"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c685f638"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ab9c6647520"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x2ab9c685e2e8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x2ab9c685e2e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66453a8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c6644350"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ab9c6642d08"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c66bf130"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c6644cb8"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c5ea9af8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c663d020"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c6857c10"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c6857c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c663d8a8"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c6856470"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c6856470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c663f8e0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c685d060"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c685d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c663b208"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c684a470"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c684a470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ab9c663c130"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x2ab9c684d470"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x2ab9c684d470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ab9c663c960"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x2ab9c684dc10"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x2ab9c684dc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c663ba70"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c684ec10"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c684ec10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ab9c663a398"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x2ab9c6863470"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x2ab9c6863470"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x2ab9c6669020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab9c6710720"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab9c612dd70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x2ab9c66e28b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ab9c6711528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ab9c66e4b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ab9c6736020"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2ab9c6736020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2ab9c6843c38"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c673dd78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c680e0c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c673d080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c6734618"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c6734618"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c67c37d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2ab9c68085a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c67d6290"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab9c67d1648"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab9c6731020"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab9c6731020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab9c67c2020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab9c6841e48"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2ab9c672d338"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2ab9c672d338"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab9c67be128"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2ab9c67be128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2ab9c7666020"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c67c37d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c75ef600"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2ab9c67c2020"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2ab9c75efda8"/></to>
    </wire>
    <wire loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c7663168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c5fb6d90"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c765e020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5fc9950"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2ab9c765d020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2ab9c5fad980"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2ab9c76590a0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2ab9c5fbf470"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2ab9c67cd5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2ab9c6845618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c683a420"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c673dd78"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c6858a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x2ab9c6862100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c685ca88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x2ab9c6856c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c68613a0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c684e470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x2ab9c685ba88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c6859a88"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x2ab9c6852c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c6855470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6864a18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c629f4c8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c685fc50"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c685ea00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c685f020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c68592e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c685b2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c6863a88"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c684bc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x2ab9c6851470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c684fc10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c6854470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x2ab9c685c2e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c68582e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c6855c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c6857470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x2ab9c6862718"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x2ab9c685dc90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x2ab9c684f470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c6850c10"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c6850470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x2ab9c684b470"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c6851c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x2ab9c6862d30"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x2ab9c6852470"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c68619b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c6854c10"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x2ab9c685d678"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c688c020"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2ab9c68aeb10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2ab9c68ab9f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2ab9c686cdb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2ab9c68ab198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c68d4750"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ab9c6894a40"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ab9c68d3428"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c68d6978"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ab9c68d6978"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c6308790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c68d22a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c68d2a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x2ab9c68bde18"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x2ab9c68b6060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c68b6d30"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ab9c68ba560"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c68b53c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c690b528"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2ab9c6915670"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c690a358"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6915020"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c690a970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c69097a8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2ab9c69081c0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2ab9c694a2a8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x2ab9c6923ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x2ab9c6987928"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c6983d50"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x2ab9c6983d50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x2ab9c6308790"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c696f3c8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5e324d0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c7100020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c76b5080"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c76b5080"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c6a215f8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c76b6498"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6a251c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6a215f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c6a427a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6a51410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x2ab9c76b0da8"/></to>
    </wire>
    <wire loc="154:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2ab9c6a87c08"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2ab9c6f19700"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2ab9c6a63bd8"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2ab9c6a41498"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x2ab9c6a41498"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x2ab9c6bfde20"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x2ab9c6a21020"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x2ab9c6a421c8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x2ab9c6a421c8"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x2ab9c6bfeb58"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6a427a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c6bfd268"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ab9c6a22020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ab9c6a43668"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2ab9c6a43668"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ab9c6bfe480"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c6a251c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6a46938"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c6a46938"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6bff020"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6a56568"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6a8a748"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6a8a748"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6f18020"/></to>
    </wire>
    <wire loc="220:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6a86698"/></from>
      <to><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c7097268"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6a24398"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6a45b00"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6a45b00"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6bffd18"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6a522b8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6a87478"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6a87478"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6bf8020"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6a8c2c8"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6bfcb98"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a50c08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6c006f8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a50c08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6f17700"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a50c08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c6cd71a8"/></to>
    </wire>
    <wire loc="219:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a50c08"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x2ab9c7098578"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6a7d880"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6a51410"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6a7c020"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6a48640"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6a7f2b8"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6cd6be0"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MatrixInfo" scoped="" ref="0x2ab9c6a79528"/></from>
      <to><interface-ref name="MatrixInfo" scoped="" ref="0x2ab9c7099908"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6c30718"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6a7d880"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x2ab9c6c3ddd0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2ab9c6c48c28"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2ab9c6c48c28"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2ab9c77eb370"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x2ab9c6c39630"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2ab9c6c1db58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x2ab9c6c1db58"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x2ab9c77fd020"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x2ab9c6c41a08"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x2ab9c6c95478"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x2ab9c6c35020"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x2ab9c6c9cdb0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="Cache" scoped="" ref="0x2ab9c6c9cdb0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x2ab9c7850020"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6bf1020"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6cd6be0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x2ab9c6f15658"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6cd7978"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x2ab9c6f132a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6cd65c0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6f13840"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6cd6be0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x2ab9c6f63780"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x2ab9c6cd2020"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f12a10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2ab9c6f100a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dac350"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x2ab9c6f10c18"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6c99c60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6c99c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x2ab9c6f0bc68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6ce6128"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6ce6128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6f64470"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6a7c020"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6c2b3f0"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6a7c020"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6c325b8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6f18020"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6f63060"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6bf8020"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x2ab9c6bf7de0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6f59a60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6f59a60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c6f65d00"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c6c2cb98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2ab9c6bf87e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c6e01080"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c6e01080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c78a70e0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6c33940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6df61c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6df61c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c5daa928"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x2ab9c6c32020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6e451c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6e451c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2ab9c5da9498"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ab9c6bf0b50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c6e01c38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6e01c38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c78a7c98"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2ab9c6c31d20"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2ab9c6f19700"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x2ab9c6bf00e0"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x2ab9c6f1ab78"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2ab9c6c2a020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dac350"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c6bf73f0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ab9c6dfe020"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c6dfe020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ab9c78a4020"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6c2f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6e00888"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6e00888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c78a6888"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c6c2d578"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c6ccc328"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></to>
    </wire>
    <wire loc="199:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c6cd2678"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f4f7a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f4f7a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c7960b80"/></to>
    </wire>
    <wire loc="200:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6ccd668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6f49020"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6f49020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c5daa928"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="201:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2ab9c6cce968"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c6f4e3f0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6f4e3f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c795f888"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x2ab9c6cd1370"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f4d020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f4d020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c795e578"/></to>
    </wire>
    <wire loc="224:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2ab9c70dade0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></to>
    </wire>
    <wire loc="225:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c7097e80"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6f18020"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x2ab9c7090b10"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x2ab9c6f19700"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="ControlSend" scoped="" ref="0x2ab9c7094880"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f83390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f83390"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c79ad398"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="ControlReceive" scoped="" ref="0x2ab9c70935b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6f7ea98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6f7ea98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c5daa928"/>
      <arguments>
        <value cst="I:240">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x2ab9c70955b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f79e00"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f79e00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c7983020"/></to>
    </wire>
    <wire loc="231:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x2ab9c70942a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c6f73510"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2ab9c6f73510"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2ab9c5daa928"/>
      <arguments>
        <value cst="I:241">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="233:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c7090268"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5dcb0d0"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7093b50"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="235:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x2ab9c708f430"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dac350"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="TrickleTimerOne" scoped="" ref="0x2ab9c708e0e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6f44550"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6f44550"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="238:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="TrickleTimerTwo" scoped="" ref="0x2ab9c70ee168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6f3da60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6f3da60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="239:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x2ab9c70e9540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6f36020"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6f36020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="240:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x2ab9c70df6e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6f905e8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6f905e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="241:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UpdateTimer" scoped="" ref="0x2ab9c70e45a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2ab9c6f8ab48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2ab9c6f8ab48"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="243:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2ab9c70da6c0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6c2aa50"/></from>
      <to><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c7097268"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MatrixInfo" scoped="" ref="0x2ab9c6c29700"/></from>
      <to><interface-ref name="MatrixInfo" scoped="" ref="0x2ab9c7099908"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c6ccdcb8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c5e057b0"/></to>
    </wire>
    <wire loc="701:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendBroadCastTask" scoped="" ref="0x2ab9c6c28470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2ab9c6c28c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c784f960"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6a8c2c8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c78a70e0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c789b120"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c78a7c98"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c78a6888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c78a4020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5dcb0d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c789bd38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6daa9a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c789a940"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c6daa9a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6e16b98"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c6e15a08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c5db8788"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6e14700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6e13d20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2ab9c6e12988"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2ab9c6e11160"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6df6760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6df43f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6e45760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6e443f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x2ab9c6f615c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="393:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x2ab9c6f63d98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c7960b80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c7952020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c795f888"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c795e578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c6f4c5b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ab9c795dbd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c795dbd8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5dcb0d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c7952c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6daa9a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7951888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6f495b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f48268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c79ad398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c79a0be0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6f82020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c79ac020"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c79ac020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f82bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c79acbd8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c79acbd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c6f802a8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ab9c79a92a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c79a92a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5dcb0d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c799f8e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6daa9a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c799e578"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6f7d060"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f7dc18"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2ab9c7983020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2ab9c7977958"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6f78a10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c7983bd8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c7983bd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f77700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7982888"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7982888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c6f76d60"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2ab9c7980020"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2ab9c7980020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5dcb0d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2ab9c79765d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2ab9c6daa9a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7974268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2ab9c6f73aa8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f72700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></to>
    </wire>
    <wire loc="373:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <from><interface-ref name="sendDistributionTask" scoped="" ref="0x2ab9c70d8c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="399:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x2ab9c70d8470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="346:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <from><interface-ref name="sendAggregationTask" scoped="" ref="0x2ab9c70d7470"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="331:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <from><interface-ref name="updateTemporaryTableTask" scoped="" ref="0x2ab9c70d7c10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="ModuleTestC" loc="1:ModuleTestC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.1.2/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.11 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.1.2/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="85(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="54(Counter32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x2ab9c5aa4020"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.2/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="83:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="40(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="39(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="39(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="39(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="39(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="39(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="39(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="39(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="39(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008-06-26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008-06-26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.2/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab9c6727110"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ModuleTestAppC.Sender" loc="43(ModuleTestAppC.Sender):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:240">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="ModuleTestAppC.Sender.CollectionSenderP" loc="34(ModuleTestAppC.Sender.CollectionSenderP):/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
            <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2ab9c6c1c2f8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2ab9c6a6e498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x2ab9c6a6e950"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2ab9c6c1c2f8"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2ab9c6a6e498"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x2ab9c6a6e950"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.TimerOne" loc="44(CtpP.TimerOne):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.TimerTwo" loc="44(CtpP.TimerTwo):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RetryTimer" loc="44(CtpP.RetryTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.TimertoSendBeacon" loc="44(CtpP.TimertoSendBeacon):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.UpdateTableTimer" loc="44(CtpP.UpdateTableTimer):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendMessageControl" loc="47(CtpP.SendMessageControl):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:240">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendMessageControl.SenderC" loc="47(CtpP.SendMessageControl.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendMessageControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendMessageControl.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveMessageControl" loc="43(CtpP.ReceiveMessageControl):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:240">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendMessageBeacon" loc="47(CtpP.SendMessageBeacon):/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:241">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendMessageBeacon.SenderC" loc="47(CtpP.SendMessageBeacon.SenderC):/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendMessageBeacon.SenderC.AMQueueEntryP" loc="43(CtpP.SendMessageBeacon.SenderC.AMQueueEntryP):/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveMessageBeacon" loc="43(CtpP.ReceiveMessageBeacon):/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:241">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Matrix" loc="33(CtpP.Matrix):/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <instance number="0">
        <component-ref qname="MatrixRoutingEngineP"/>
        <arguments>
          <value cst="I:20">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ModuleTestAppC.Sender.CollectionSenderP.CollectionIdP" loc="45(ModuleTestAppC.Sender.CollectionSenderP.CollectionIdP):/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ModuleTestAppC.timer1" loc="44(ModuleTestAppC.timer1):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ModuleTestAppC.timer2" loc="44(ModuleTestAppC.timer2):/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab9c5c23b98" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab9c5c32020" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab9c5c32368" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab9c5c3b608" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab9c5c3b970" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab9c5c3bcd8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ab9c5c37060" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2ab9c5cc3020" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2ab9c5cc3388" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2ab9c5cc36f0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ab9c5cc3a20" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="70:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:54 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ab9c60e51f8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab9c60e51f8"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2ab9c60e5548" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ab9c60c4a20" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ab9c60c4a20"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2ab9c60f7198" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab9c60f7198"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2ab9c60f7498" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2ab9c6125e28" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2ab9c6125e28"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2ab9c61225c8" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab9c61225c8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ab9c61566e8" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ab9c61566e8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ab9c6156e50" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ab9c6156e50"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ab9c6155240" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ab9c6155240"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ab9c61559b8" loc="58:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ab9c61559b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ab9c6155d60" loc="59:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2ab9c6154528" loc="60:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2ab9c6154528"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2ab9c615c4d8" loc="52:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2ab9c615c4d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2ab9c615cc40" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2ab9c615cc40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2ab9c6183068" loc="54:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2ab9c6183068"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2ab9c61837e0" loc="55:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2ab9c61837e0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2ab9c6183b88" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x2ab9c6218020" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x2ab9c6218388" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x2ab9c62186f0" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2ab9c6218a20" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.2/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-04-24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2ab9c63f7578" loc="83:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2ab9c641e510" loc="42:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c670f110" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c670f110"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ab9c6727110" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab9c6727110"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ab9c6727400" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2ab9c675d720" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2ab9c675d720"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2ab9c675da10" loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c67b9300" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c67b9300"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c67cb698" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c67cb698"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2ab9c67cb9a8" loc="46:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x2ab9c6a32bb8" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x2ab9c6a2da38" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x2ab9c6a2dd80" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2ab9c6c1c2f8" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2ab9c6c1c2f8"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x2ab9c6c1c648" loc="41:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x2ab9c6c674c0" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x2ab9c6c674c0"/></type-var>
        </typedef>
        <constant name="size" ref="0x2ab9c6c677e0" loc="53:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x2ab9c6c43b68" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x2ab9c6c43b68"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x2ab9c6c94020" loc="42:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x2ab9c6c78b28" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x2ab9c6c728b0" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ab9c6d76848" loc="47:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ab9c6dc4348" loc="47:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ab9c6dc0e20" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2ab9c6da6bc8" loc="45:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2ab9c6dfa060" loc="43:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2ab9c6e49020" loc="44:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x2ab9c6e38a48" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x2ab9c6e38db8" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x2ab9c6e37178" loc="107:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MatrixRoutingEngineP" loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc" abstract="">
      <parameters>
        <constant name="tableSize" ref="0x2ab9c6fc5020" loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
          <component-ref qname="MatrixRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
        <constant name="temporaryTableSize" ref="0x2ab9c6fc53c8" loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
          <component-ref qname="MatrixRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x2ab9c7107168" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x2ab9c5b012b8" loc="6:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2ab9c5b012b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2ab9c5b01608"/>
        <function-ref name="setRoot" scoped="" ref="0x2ab9c5b01790"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2ab9c5b01918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2ab9c5aea940" loc="3:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab9c5aea940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab9c5aeac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2ab9c5aeb0e0" loc="4:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2ab9c5aeb0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c5aeb430"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c5aeb5b8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5aeb740"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5aeb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ab9c5b58278" loc="9:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c5b58278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5b585c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5b58750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5b588d8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5b58a60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5b58be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ab9c5b8e408" loc="16:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c5b8e408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c5b8e758"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c5b8e8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MatrixUnicastNameFreeRouting" ref="0x2ab9c5b8bd48" loc="17:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c5b8bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x2ab9c5b900d8"/>
        <function-ref name="directionToSend" scoped="" ref="0x2ab9c5b90260"/>
        <function-ref name="nextHop" scoped="" ref="0x2ab9c5b903e8"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c5b90570"/>
        <function-ref name="nextHopTemporary" scoped="" ref="0x2ab9c5b906f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x2ab9c5aff528" loc="7:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x2ab9c5aff528"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c5aff878"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5affa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2ab9c5b557d0" loc="10:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c5b557d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5b55b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c5af6330" loc="5:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c5af6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c5af6680"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c5af6808"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c5af6990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c5af6b18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c5af6ca0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5af6e28"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c5ae9020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c5ae9640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ae91a8"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c5ae9330"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c5ae94b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMessage" ref="0x2ab9c5ba44d8" loc="105:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMessage" scoped="" ref="0x2ab9c5ba44d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c5ba4928"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c5ba4ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x2ab9c5b752b8" loc="11:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c5b752b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c5b75608"/>
        <function-ref name="option" scoped="" ref="0x2ab9c5b75790"/>
        <function-ref name="setIpOrigin" scoped="" ref="0x2ab9c5b75918"/>
        <function-ref name="setEtx" scoped="" ref="0x2ab9c5b75aa0"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c5b75c28"/>
        <function-ref name="clearOption" scoped="" ref="0x2ab9c5b75db0"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c5b5a020"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c5b5a1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c5b5a330"/>
        <function-ref name="setOption" scoped="" ref="0x2ab9c5b5a4b8"/>
        <function-ref name="getIpOrigin" scoped="" ref="0x2ab9c5b5a640"/>
        <function-ref name="getIp" scoped="" ref="0x2ab9c5b5a7c8"/>
        <function-ref name="getThl" scoped="" ref="0x2ab9c5b5a950"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c5b5abd8"/>
        <function-ref name="matchInstance" scoped="" ref="0x2ab9c5b5ad60"/>
        <function-ref name="matchPacket" scoped="" ref="0x2ab9c5b56020"/>
        <function-ref name="setIp" scoped="" ref="0x2ab9c5b561a8"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c5b56330"/>
        <function-ref name="setThl" scoped="" ref="0x2ab9c5b564b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerOne" ref="0x2ab9c5b7bde8" loc="13:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerOne" scoped="" ref="0x2ab9c5b7bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c5b880c0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c5b8a798"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c5b894d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c5b89088"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c5b88960"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c5b88510"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c5b8abe8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c5b739e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c5b89aa8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c5b73e80"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5b8a348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTwo" ref="0x2ab9c5b86020" loc="14:ModuleTestC.nc">
      <component-ref qname="ModuleTestC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTwo" scoped="" ref="0x2ab9c5b86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c5b832b8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c5b85978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c5b846c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c5b84278"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c5b83b58"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c5b83708"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c5b85dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c5b86b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c5b84c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c5b85088"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5b85528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ab9c5bbdc48" loc="58:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5bbdc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ab9c5bc0848" loc="57:/opt/tinyos-2.1.2/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab9c5bc0848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab9c5bc0b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab9c5bcc9a0" loc="52:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bcc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bcccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c5bbcb10" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c5bbcb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bbce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ab9c5bc8b98" loc="50:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab9c5bc8b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ab9c5bcc020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ab9c5bcc1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ab9c5bcc330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ab9c5bcc4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ab9c5bcc640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2ab9c5bd6b90" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2ab9c5bd6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bd5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c5bd64f0" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c5bd64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bd6840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2ab9c5bd5398" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2ab9c5bd5398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bd56e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab9c5bd0108" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bd0108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bd0458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ab9c5bd8a08" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab9c5bd8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bd8d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2ab9c5bde7f8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2ab9c5bde7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bdeb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2ab9c5bea5f8" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2ab9c5bea5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bea948"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5beaad0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5beac58"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5beade0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bde020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bde1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bde330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bde4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2ab9c5bdf428" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab9c5bdf428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5bdf778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2ab9c5c1ac78" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2ab9c5c1ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c195e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c19770"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c198f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c19a80"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c19c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c19d90"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c18020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c181a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2ab9c5bfe7e0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2ab9c5bfe7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bfeb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bfecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bfee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bfd020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bfd1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bfd330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bfd4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bfd640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2ab9c5c177e0" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2ab9c5c177e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c17b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c17cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c17e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c16020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c161a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c16330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c164b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c16640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2ab9c5c1f4d0" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2ab9c5c1f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c1f820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c1f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c1fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c1fcb8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c1fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c1e020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c1e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c1e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2ab9c5bf04d0" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2ab9c5bf04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf0820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf09a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf0b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf0cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf0e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bef020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bef1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2ab9c5c0f1a0" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2ab9c5c0f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c0f4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c0f678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c0f800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c0f988"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c0fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c0fc98"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c0fe20"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c20020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2ab9c5bee7e0" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2ab9c5bee7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5beeb30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5beecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5beee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bed020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bed1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bed330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bed4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bed640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2ab9c5bf4968" loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2ab9c5bf4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf4cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf4e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c05020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c051a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c05330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c054b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c05640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c057c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2ab9c5c0dc78" loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2ab9c5c0dc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c0c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c0c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c0c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c0c4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c0c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c0c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c0c950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c0cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2ab9c5c13c78" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2ab9c5c13c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c12020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c121a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c12330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c124b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c12640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c127c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c12950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c12ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2ab9c5be4c78" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2ab9c5be4c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5be3020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5be31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5be3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5be34b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5be3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5be37c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5be3950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5be3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2ab9c5bebc78" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2ab9c5bebc78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bfc020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bfc1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bfc330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bfc4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bfc640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bfc7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bfc950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bfcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2ab9c5c03e00" loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2ab9c5c03e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c021a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c02330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c024b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c02640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c027c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c02950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c02ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c02c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2ab9c5c091a0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2ab9c5c091a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c094f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c09678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c09800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c09988"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c09b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c09c98"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c09e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c08020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2ab9c5c1c968" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2ab9c5c1c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c1ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c1ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c1b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c1b1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c1b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c1b4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c1b640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c1b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2ab9c5c287e0" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2ab9c5c287e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c28b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c28cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c28e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c27020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c271a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c27330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c274b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c27640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2ab9c5c074d0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2ab9c5c074d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c07820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c079a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c07b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c07cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c07e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c06020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c061a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c06330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2ab9c5bf21a0" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2ab9c5bf21a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf24f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf2678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf2800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf2988"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bf2c98"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bf2e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2ab9c5bf9348" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2ab9c5bf9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf9698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf9820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf99a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf9b30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf9cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bf9e40"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bf7020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2ab9c5c184d0" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2ab9c5c184d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c18820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c189a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c18b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c18cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c18e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c29020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c291a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c29330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2ab9c5bf6658" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2ab9c5bf6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf69a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf6b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf6cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf6e40"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bf51a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bf5330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2ab9c5bfd968" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2ab9c5bfd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bfdcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bfde40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c0e020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c0e1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c0e330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c0e4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c0e640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c0e7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2ab9c5c16968" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2ab9c5c16968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c16cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c16e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c15020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c151a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c15330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c154b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c15640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2ab9c5c1e658" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2ab9c5c1e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c1e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c1eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c1ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c1ee40"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c1d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c1d1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c1d330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c1d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2ab9c5bef658" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2ab9c5bef658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bef9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5befb30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5befcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5befe40"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bee1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bee330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bee4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2ab9c5bed968" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2ab9c5bed968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bedcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bede40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bec020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bec1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bec330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bec4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bec640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2ab9c5c05af0" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2ab9c5c05af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c05e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c04020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c041a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c04330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c044b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c04640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c047c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c04950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2ab9c5c0ce00" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2ab9c5c0ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c0b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c0b330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c0b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c0b640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c0b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c0b950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c0bad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c0bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2ab9c5c12e00" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2ab9c5c12e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c111a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c11330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c114b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c11640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c117c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c11950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c11ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c11c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2ab9c5be3e00" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2ab9c5be3e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5be21a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5be2330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5be24b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5be2640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5be27c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5be2950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5be2ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5be2c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2ab9c5bfce00" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2ab9c5bfce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bfb2e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bfb470"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bfb5f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bfb780"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bfb908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bfba90"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bfbc18"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bfbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2ab9c5c01020" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2ab9c5c01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c01370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c014f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c01680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c01808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c01990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c01b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c01ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c01e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2ab9c5c1baf0" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2ab9c5c1baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c1be40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c1a020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c1a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c1a330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c1a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c1a640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c1a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c1a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2ab9c5bff348" loc="73:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2ab9c5bff348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bff898"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bffa20"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bffba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bffd30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bfe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bfe1a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bfe330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bfe4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2ab9c5c06658" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2ab9c5c06658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c069a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c06b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c06cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c06e40"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c17020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c171a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c17330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c174b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2ab9c5c20348" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2ab9c5c20348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c20698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c20820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c209a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c20b30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c20cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c20e40"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c1f020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c1f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2ab9c5c27968" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2ab9c5c27968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c27cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c27e40"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c26020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c261a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c26330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c264b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c26640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c267c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2ab9c5bf1348" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2ab9c5bf1348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf1698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf1820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf19a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf1b30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf1cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bf1e40"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bf0020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2ab9c5bf74d0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2ab9c5bf74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf7820"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf79a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf7b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf7cb8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf7e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bf6020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bf61a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2ab9c5c10020" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2ab9c5c10020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c10370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c104f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c10680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c10808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c10990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c10b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c10ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c10e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2ab9c5bf57e0" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2ab9c5bf57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf5b30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf5cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf5e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf4020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bf4330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bf44b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2ab9c5c0eaf0" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2ab9c5c0eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c0ee40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c0d020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c0d1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c0d330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c0d4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c0d640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c0d7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c0d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2ab9c5c15af0" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2ab9c5c15af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c15e40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c13020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c131a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c13330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c134b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c13640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c137c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c13950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2ab9c5c1d7e0" loc="96:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2ab9c5c1d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c1db30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c1dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c1de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c1c020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c1c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c1c330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c1c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c1c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2ab9c5be1ab0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2ab9c5be1ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5be1e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5be4020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5be41a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5be4330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5be44b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5be4640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5be47c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5be4950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2ab9c5becaf0" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2ab9c5becaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bece40"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5beb020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5beb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5beb330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5beb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5beb640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5beb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5beb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2ab9c5c04c78" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2ab9c5c04c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c03020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c031a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c03330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c034b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c03640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c037c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c03950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c03ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2ab9c5c0a020" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2ab9c5c0a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c0a370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c0a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c0a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c0a808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c0a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c0ab18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c0aca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c0ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2ab9c5c29658" loc="102:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2ab9c5c29658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c299a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c29b30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c29cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c29e40"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c28020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c281a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c28330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c284b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2ab9c5c08348" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2ab9c5c08348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c08698"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c08820"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c089a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c08b30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c08cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c08e40"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c07020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2ab9c5c001a0" loc="71:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2ab9c5c001a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c004f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c00678"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c00800"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c00988"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c00b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c00c98"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c00e20"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2ab9c5bf3020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2ab9c5bf3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bf3370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bf34f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bf3680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bf3808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bf3990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bf3b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bf3ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf3e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2ab9c5bfa100" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2ab9c5bfa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5bfa450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5bfa5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5bfa760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5bfa8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5bfaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5bfabf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5bfad80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5bf9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab9c5c65120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c65120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c65470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c655f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c65780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c65908"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c65a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c65c18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c65da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab9c5c765b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c765b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c76908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c76a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c76c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c76da0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c75020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c751a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c75330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c754b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab9c5c68dc0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c68dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c67170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c672f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c67480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c67608"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c67790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c67918"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c67aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c67c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab9c5c782a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c782a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c785f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c78780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c78908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c78a90"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c78c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c78da0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c77020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c771a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab9c5c75740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c75740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c75a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c75c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c75da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c73020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c731a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c73330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c734b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c73640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab9c5c66020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c66020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c66370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c664f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c66680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c66808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c66990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c66b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c66ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c66e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab9c5c77430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c77430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c77780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c77908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c77a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c77c18"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c77da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c76020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c761a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c76330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab9c5c738c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c738c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c73c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c73da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c72020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c721a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c72330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c724b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c72640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c727c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7197ca0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7197ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7195020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71951a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7195330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71954b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7195640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71957c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7195950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7195ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7193c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7193c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7192020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71921a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7192330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71924b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7192640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71927c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7192950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7192ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7190c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7190c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c718f020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c718f1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c718f330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c718f4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c718f640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c718f7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c718f950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c718fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c718dc38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c718dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c718c020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c718c1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c718c330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c718c4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c718c640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c718c7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c718c950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c718cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c718ac38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c718ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7189020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71891a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7189330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71894b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7189640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71897c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7189950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7189ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7187c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7187c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7186020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71861a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7186330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71864b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7186640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71867c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7186950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7186ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7184c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7184c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7183020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71831a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7183330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71834b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7183640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71837c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7183950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7183ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7181c38" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7181c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7180020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71801a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7180330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71804b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7180640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71807c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7180950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7180ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab9c5c7fbd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c7fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c7e020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c7e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c7e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c7e4b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c7e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c7e7c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c7e950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c7ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab9c5c7a020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c7a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c7a370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c7a4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c7a680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c7a808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c7a990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c7ab18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c7aca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c7ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab9c5c81930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c81930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c81c80"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c81e08"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c80020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c801a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c80330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c804b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c80640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c807c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab9c5c7ed60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c7ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c7c0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c7c260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c7c3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c7c570"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c7c6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c7c880"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c7ca08"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c7cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab9c5c79120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c79120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c79470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c795f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c79780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c79908"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c79a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c79c18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c79da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab9c5c80a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c80a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c80da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c7f020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c7f1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c7f330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c7f4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c7f640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c7f7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c7f950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab9c5c7ce18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c7ce18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c7b1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c7b330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c7b4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c7b640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c7b7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c7b950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c7bad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c7bc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab9c5c8c2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c8c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c8c5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c8c780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c8c908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c8ca90"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c8cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c8cda0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c8b020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c8b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7200180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7200180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72004d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c7200658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72007e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c7200968"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7200af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7200c78"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7200e00"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71ff020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c71fd100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c71fd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c71fd450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71fd5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c71fd760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71fd8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c71fda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71fdbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c71fdd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c71f9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c71f9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c71f9450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71f95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c71f9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71f98e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c71f9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71f9bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c71f9d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c71f6100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c71f6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c71f6450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71f65d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c71f6760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71f68e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c71f6a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71f6bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c71f6d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71f5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c71f3100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c71f3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c71f3450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71f35d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c71f3760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71f38e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c71f3a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71f3bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c71f3d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c71f0100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c71f0100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c71f0450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71f05d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c71f0760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71f08e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c71f0a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71f0bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c71f0d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c71ed100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c71ed100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c71ed450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71ed5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c71ed760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71ed8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c71eda70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71edbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c71edd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71ec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c71ea100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c71ea100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c71ea450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c71ea5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c71ea760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c71ea8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c71eaa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c71eabf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c71ead80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c71e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab9c5c83740" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c83740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c83a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c83c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c83da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c96020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c961a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c96330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c964b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c96640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab9c5c94bd8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c94bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c93020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c931a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c93330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c934b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c93640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c937c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c93950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c93ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab9c5c86500" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c86500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c86850"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c869d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c86b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c86ce8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c86e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c84020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c841a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c84330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab9c5c968c8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c968c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c96c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c96da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c95020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c951a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c95330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c954b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c95640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c957c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab9c5c93d60" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c93d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c920d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c92260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c923e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c92570"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c926f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c92880"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c92a08"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c92b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab9c5c845b8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c845b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c84908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c84a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c84c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c84da0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c83020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c831a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c83330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c834b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab9c5c95a50" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c95a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c95da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c94020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c941a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c94330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c944b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c94640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c947c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c94950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab9c5c92e18" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c92e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c911a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c91330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c914b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c91640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c917c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c91950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c91ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c91c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7203180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7203180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72034d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c7203658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72037e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c7203968"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7203af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7203c78"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7203e00"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7202020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c726b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c726b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c726b450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c726b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c726b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c726b8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c726ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c726bbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c726bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7269020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7267100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7267100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7267450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72675d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7267760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72678e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7267a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7267bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7267d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7266020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7264100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7264100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7264450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72645d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7264760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72648e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7264a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7264bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7264d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7263020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7261100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7261100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7261450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72615d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7261760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72618e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7261a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7261bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7261d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7260020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c725e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c725e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c725e450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c725e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c725e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c725e8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c725ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c725ebf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c725ed80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c725d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c725b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c725b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c725b450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c725b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c725b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c725b8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c725ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c725bbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c725bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c725a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7258100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7258100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7258450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72585d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7258760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72588e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7258a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7258bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7258d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7257020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab9c5c9c120" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab9c5c9c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c9c470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c9c5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c9c780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c9c908"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c9ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c9cc18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c9cda0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c9b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab9c5c995b8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab9c5c995b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c99908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c99a90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c99c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c99da0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c98020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c981a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c98330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c984b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab9c5c9fe40" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab9c5c9fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c9e1c0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c9e348"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c9e4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c9e658"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c9e7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c9e968"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c9eaf0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c9ec78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab9c5c9b2a8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab9c5c9b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c9b5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c9b780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c9b908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c9ba90"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c9bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c9bda0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c9a020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab9c5c98740" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab9c5c98740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c98a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c98c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c98da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c97020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c971a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c97330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c974b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c97640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab9c5c9d020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab9c5c9d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c9d370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c9d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c9d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c9d808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c9d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c9db18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c9dca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c9de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab9c5c9a430" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab9c5c9a430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c9a780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c9a908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5c9aa90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5c9ac18"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5c9ada0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5c99020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5c991a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5c99330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab9c5c978c8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab9c5c978c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5c97c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5c97da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5caa020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5caa1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5caa330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5caa4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5caa640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5caa7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7273180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7273180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72734d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c7273658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72737e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c7273968"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7273af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7273c78"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7273e00"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7272020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7270100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7270100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7270450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72705d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7270760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72708e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7270a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7270bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7270d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c726f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c726d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c726d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c726d450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c726d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c726d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c726d8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c726da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c726dbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c726dd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72d5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72d5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72d5450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72d55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72d5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72d58e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72d5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72d5bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72d5d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72d4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72d2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72d2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72d2450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72d25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72d2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72d28e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72d2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72d2bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72d2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72d1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72cf100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72cf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72cf450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72cf5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72cf760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72cf8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72cfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72cfbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72cfd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72cc100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72cc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72cc450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72cc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72cc760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72cc8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72cca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72ccbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72ccd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72c9100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72c9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72c9450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72c95d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72c9760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72c98e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72c9a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72c9bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72c9d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab9c5ca2bd8" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab9c5ca2bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ca1020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ca11a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ca1330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ca14b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ca1640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ca17c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ca1950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ca1ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab9c5cb2020" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab9c5cb2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb2370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb24f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb2680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb2808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb2990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb2b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb2ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab9c5ca4930" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab9c5ca4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ca4c80"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ca4e08"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ca3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ca31a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ca3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ca34b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ca3640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ca37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab9c5ca1d60" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab9c5ca1d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb40d8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb4260"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb43e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb4570"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb46f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb4880"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb4a08"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab9c5cb1120" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab9c5cb1120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb1470"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb15f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb1780"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb1908"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb1c18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb1da0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5caf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab9c5ca3a50" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab9c5ca3a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ca3da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ca2020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ca21a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ca2330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ca24b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ca2640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ca27c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ca2950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab9c5cb4e18" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab9c5cb4e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb31a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb3330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb34b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb3640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb37c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb3950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb3ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab9c5caf2a8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab9c5caf2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5caf5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5caf780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5caf908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cafa90"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cafc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cafda0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cae020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cae1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72e5180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72e5180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72e54d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72e5658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72e57e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72e5968"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72e5af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72e5c78"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72e5e00"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72e4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72e2100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72e2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72e2450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72e25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72e2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72e28e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72e2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72e2bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72e2d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72e1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72df100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72df100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72df450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72df5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72df760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72df8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72dfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72dfbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72dfd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c72db100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c72db100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c72db450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c72db5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c72db760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c72db8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c72dba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c72dbbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c72dbd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c72da020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7346100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7346100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7346450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73465d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7346760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73468e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7346a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7346bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7346d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7345020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7343100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7343100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7343450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73435d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7343760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73438e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7343a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7343bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7343d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7342020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7340100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7340100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7340450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73405d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7340760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73408e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7340a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7340bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7340d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c733f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c733d100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c733d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c733d450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c733d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c733d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c733d8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c733da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c733dbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c733dd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c733c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2ab9c5cbc430" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2ab9c5cbc430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cbc780"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cbc908"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cbca90"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cbcc18"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cbcda0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cbb020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cbb1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cbb330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2ab9c5cb88c8" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2ab9c5cb88c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb8c18"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb8da0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb7020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb71a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb7330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb74b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb7640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2ab9c5cbe1e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2ab9c5cbe1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cbe538"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cbe6c0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cbe848"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cbe9d0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cbeb58"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cbece0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cbee68"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cbd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2ab9c5cbb5b8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2ab9c5cbb5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cbb908"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cbba90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cbbc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cbbda0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb91a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb9330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2ab9c5cb7a50" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2ab9c5cb7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb7da0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb6020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb61a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb6330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb64b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb6640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb67c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2ab9c5cbd2a8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2ab9c5cbd2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cbd5f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cbd780"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cbd908"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cbda90"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cbdc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cbdda0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cbc020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cbc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2ab9c5cb9740" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2ab9c5cb9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb9a90"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb9c18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb8020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb81a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb8330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb84b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb8640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2ab9c5cb6bd8" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2ab9c5cb6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cb5020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cb51a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cb5330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cb54b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cb5640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cb57c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cb5950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cb5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c735b180" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c735b180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c735b4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c735b658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c735b7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c735b968"/>
        <function-ref name="get" scoped="" ref="0x2ab9c735baf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c735bc78"/>
        <function-ref name="set" scoped="" ref="0x2ab9c735be00"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c735a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7358100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7358100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7358450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73585d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7358760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73588e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7358a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7358bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7358d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7357020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7355100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7355100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7355450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73555d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7355760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73558e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7355a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7355bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7355d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7354020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7352100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7352100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7352450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73525d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7352760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73528e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7352a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7352bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7352d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7350020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c734e100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c734e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c734e450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c734e5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c734e760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c734e8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c734ea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c734ebf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c734ed80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c734d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c734b100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c734b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c734b450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c734b5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c734b760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c734b8e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c734ba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c734bbf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c734bd80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c734a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c7348100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c7348100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c7348450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73485d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c7348760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73488e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7348a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c7348bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7348d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c7347020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c73b5100" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c73b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c73b5450"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c73b55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c73b5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c73b58e8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c73b5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c73b5bf8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c73b5d80"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c73b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5cc5ac0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5cc5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cc5e10"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cdb020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cdb1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cdb330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cdb4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cdb640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cdb7c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cdb950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5cd7db8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5cd7db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cd6170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cd62f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cd6480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cd6608"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cd6790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cd6918"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cd6aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cd6c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5ce83e0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5ce83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ce8730"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ce88b8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ce8a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ce8bc8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ce8d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ce6020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ce61a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ce6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5ce37e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5ce37e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ce3b38"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ce3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ce3e48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ce2020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ce21a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ce2330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ce24b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ce2640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5cf4c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5cf4c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cf3020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cf31a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cf3330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cf34b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cf3640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cf37c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cf3950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cf3ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5cef020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5cef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cef370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cef4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cef680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cef808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cef990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cefb18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cefca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cefe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5d00480" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5d00480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d007d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d00958"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d00ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d00c68"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d00df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cff020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cff1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cff330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5cfb7e8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5cfb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cfbb38"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cfbcc0"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5cfbe48"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5cfa020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5cfa1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5cfa330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5cfa4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5cfa640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5cf7970" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5cf7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5cf7cc0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5cf7e48"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d0c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d0c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d0c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d0c4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d0c640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d0c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5d08ab0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5d08ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d08e00"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d07020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d071a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d07330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d074b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d07640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d077c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d07950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5d03c38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5d03c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d02020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d021a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d02330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d024b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d02640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d027c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d02950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d02ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5d14020" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5d14020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d14370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d144f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d14680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d14808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d14990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d14b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d14ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d14e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2ab9c5d0f180" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2ab9c5d0f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d0f4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d0f658"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d0f7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d0f968"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d0faf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d0fc78"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d0fe00"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d0e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c5d451b8" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c5d451b8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2ab9c59e96f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2ab9c59e96f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5d45508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2ab9c5d457e8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2ab9c5d457e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2ab9c5d45b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2ab9c5d45cc0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2ab9c5d45e48"/>
        <function-ref name="actualMicro" scoped="" ref="0x2ab9c5d44020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2ab9c5d441a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2ab9c5d6c560" loc="60:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2ab9c5d6c560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5d6c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2ab9c5bcee20" loc="57:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2ab9c5bcee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2ab9c5d6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2ab9c5d6ee68" loc="59:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2ab9c5d6ee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5d6c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2ab9c5d6e490" loc="58:/opt/tinyos-2.1.2/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab9c5d6e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5d6e7e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab9c5d6e968"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab9c5d6eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ab9c59f1728" loc="48:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c59f1728"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c59f1a78"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c59f1c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ab9c59f0be8" loc="47:/opt/tinyos-2.1.2/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab9c59f0be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c59e8020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab9c59e81a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab9c59e8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2ab9c5aacb08" loc="56:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2ab9c5aacb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c5aace58"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c5aaa020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2ab9c5aa9020" loc="57:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ab9c5aa9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ab9c5aa9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2ab9c5aadc00" loc="55:/opt/tinyos-2.1.2/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2ab9c5aadc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5aac020"/>
        <function-ref name="taskLoop" scoped="" ref="0x2ab9c5aac1a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2ab9c5aac330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2ab9c5acd7b8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab9c5acd7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ab9c5acdb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2ab9c59fadc8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2ab9c59fadc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2ab9c5ac3170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2ab9c5ace240" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ab9c5ace240"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ab9c5ace590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ab9c5bbe5f8" loc="46:/opt/tinyos-2.1.2/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c5bbe5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c5bbe948"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c5bbead0"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c5bbec58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c5bbede0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c5d7a020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d7a1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c5d7a330"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c5d7a950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d7a4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c5d7a640"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c5d7a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2ab9c5d75540" loc="50:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ab9c5d75540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d75890"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d75a18"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d75ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d75d28"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d74020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d741a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d74330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c5d79838" loc="46:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c5d79838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5d79b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2ab9c5d747d0" loc="51:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ab9c5d747d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d74b20"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d74ca8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d74e30"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d8a020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d8a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d8a330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d8a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d8a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2ab9c5d79e00" loc="47:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c5d79e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c5d761a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c5d76330"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c5d764b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c5d76640"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c5d767c8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d76950"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c5d76ad8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c5d751a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d76c60"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c5d76de8"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c5d75020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2ab9c5d8a958" loc="52:/opt/tinyos-2.1.2/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ab9c5d8a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d8aca8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d8ae30"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d89020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d891a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d89330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d894b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d89640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d897c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2ab9c5d77d70" loc="44:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2ab9c5d77d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d9f0f0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d9f278"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d9f400"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d9f588"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d9f710"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d9f898"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d9fa20"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d9fba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2ab9c5d9e020" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2ab9c5d9e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d9e370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d9e4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d9e680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d9e808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d9e990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d9eb18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d9eca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d9ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2ab9c5d9c2d8" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c5d9c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5d9c628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2ab9c5d9d1b0" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2ab9c5d9d1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5d9d500"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5d9d688"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5d9d810"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5d9d998"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5d9db20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5d9dca8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5d9de30"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5d9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ab9c5dac350" loc="55:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dac350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c5dac6a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c5dac828"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5dac9b0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5dacb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c5db8788" loc="57:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c5db8788"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5db8ad8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5db8c60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5db8de8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5daa020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5daa1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ab9c5da9498" loc="59:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ab9c5da9498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5da97e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c5dc78a0" loc="61:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c5dc78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c5dc7bf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c5dc7d78"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5dba020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5dba1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c5dba330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ab9c5dc8020" loc="64:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c5dc8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c5ddd478"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c5dddb58"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c5dc8d70"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ddc278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ab9c5deb848" loc="66:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5deb848"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ab9c5debb98"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ab9c5debd20"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ab9c5dd7020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ab9c5dd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c5daa928" loc="58:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c5daa928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5daac78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ab9c5dcb0d0" loc="63:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5dcb0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c5dcb420"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c5dcb5a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c5dcb730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c5dd10f0" loc="62:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5dd10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c5dd1440"/>
        <function-ref name="source" scoped="" ref="0x2ab9c5dd15c8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c5dd1750"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c5dd18d8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c5dd1a60"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c5dd1be8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c5dd1d70"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c5db7020"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c5db71a8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c5db7330"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c5db74b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ab9c5ddce48" loc="65:/opt/tinyos-2.1.2/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ab9c5ddce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c5dd9300"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c5dd99e0"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c5ddbbe8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5dd80f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ab9c5dfe310" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5dfe310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c5dfe660"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c5dfe7e8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5dfe970"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5dfeaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ab9c5e18b48" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c5e18b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c5e06020"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c5e061a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c5e06330"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c5e064b8"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c5e06640"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c5e067c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ab9c5e25658" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ab9c5e25658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ab9c5e25aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c5df8bd8" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c5df8bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c5df7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c5df71a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5df7330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5df74b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c5df7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c5dfc2b0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c5dfc2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5dfc600"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5dfc788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5dfc910"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5dfca98"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5dfcc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ab9c5df9020" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ab9c5df9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5df9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ab9c5e09888" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c5e09888"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c5e09bd8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c5e09d60"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c5df6020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c5df61a8"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c5df6330"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c5df64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ab9c5e06ac0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5e06ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ab9c5e06e10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ab9c5e04020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ab9c5e041a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ab9c5e04330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c5dfa3c8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c5dfa3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5dfa718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ab9c5df67e0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5df67e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c5df6b30"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c5df6cb8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c5df6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ab9c5e0fa98" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ab9c5e0fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ab9c5e0fde8"/>
        <function-ref name="setRetries" scoped="" ref="0x2ab9c5e16020"/>
        <function-ref name="getRetries" scoped="" ref="0x2ab9c5e161a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ab9c5e16330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ab9c5e164b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c5df9610" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c5df9610"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c5df9960"/>
        <function-ref name="source" scoped="" ref="0x2ab9c5df9ae8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c5df9c70"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c5df9df8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c5df8020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c5df81a8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c5df8330"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c5df84b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c5df8640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c5df87c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c5df8950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ab9c5e057b0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c5e057b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ab9c5e05b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ab9c5e223a0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e223a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c5e226f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c5e22878"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5e22a00"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5e22b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ab9c5e32e30" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c5e32e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ab9c5e311a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ab9c5e30020" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ab9c5e30020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ab9c5e30370"/>
        <function-ref name="setRetries" scoped="" ref="0x2ab9c5e304f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ab9c5e30680"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ab9c5e30808"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ab9c5e30990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ab9c5e33678" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c5e33678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c5e339c8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c5e33b50"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c5e33cd8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c5e33e60"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c5e32020"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c5e321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ab9c5e34340" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c5e34340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5e34690"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5e34818"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5e349a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5e34b28"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5e34cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ab9c5e314a0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c5e314a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ab9c5e317f0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ab9c5e31978"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ab9c5e31b00"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ab9c5e31c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ab9c5e1ce58" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2ab9c5e1ce58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5e351e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2ab9c5e324d0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c5e324d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c5e32820"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c5e329a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c5e32b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c5e204f8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c5e204f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c5e20848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c5e209d0"/>
        <function-ref name="request" scoped="" ref="0x2ab9c5e20b58"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c5e20ce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c5e20e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ab9c5e1c1a8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ab9c5e1c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5e1c4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5e1c680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5e1c808"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5e1c990"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5e1cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ab9c5e35518" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2ab9c5e35518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c5e35868"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c5e359f0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5e35b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5e35d00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c5e34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ab9c5e33060" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c5e33060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5e333b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ab9c5e2f6a0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e2f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c5e2f9f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c5e2fb78"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5e2fd00"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5e2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ab9c5e2b678" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c5e2b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c5e2b9c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c5e2bb50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c5e2bcd8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c5e2be60"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c5e2a020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c5e2a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c5e2c2d8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c5e2c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5e2c628"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5e2c7b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5e2c938"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5e2cac0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5e2cc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c5e2b020" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c5e2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c5e2b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ab9c5e42140" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ab9c5e42140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c5e42490"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c5e42618"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5e427a0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5e42928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ab9c5e41948" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c5e41948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c5e41c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c5e41e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c5e40020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c5e401a8"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c5e40330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c5e404b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ab9c5e37208" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2ab9c5e37208"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c5e37558"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c5e376e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c5e37868"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c5e379f0"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c5e37b78"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c5e37d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ab9c5e4ade0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c5e4ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c5e49170"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c5e492f8"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c5e49480"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c5e49608"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c5e49790"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c5e49918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x2ab9c5e4b4b8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ab9c5e4b4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5e4b808"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5e4b990"/>
        <function-ref name="modify" scoped="" ref="0x2ab9c5e4bb18"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5e4bca0"/>
        <function-ref name="resend" scoped="" ref="0x2ab9c5e4be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c5e42be0" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c5e42be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c5e41020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5e411a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c5e41330"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c5e414b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c5e41640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ab9c5e36020" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c5e36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c5e36370"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c5e364f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ab9c5e3ece8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ab9c5e3ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c5e3d0a0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5e3d228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ab9c5e48020" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c5e48020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c5e48370"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c5e484f8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c5e48680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x2ab9c5e38a78" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2ab9c5e38a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ab9c5e38dc8"/>
        <function-ref name="rfOff" scoped="" ref="0x2ab9c5e3e020"/>
        <function-ref name="rxOn" scoped="" ref="0x2ab9c5e3e1a8"/>
        <function-ref name="startVReg" scoped="" ref="0x2ab9c5e3e330"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ab9c5e3e4b8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ab9c5e3e640"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ab9c5e3e7c8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ab9c5e3e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c5e367b0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c5e367b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c5e36b00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c5e36c88"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c5e36e10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c5e4a020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c5e4a1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5e4a330"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c5e4a4b8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c5e4aad8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5e4a640"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c5e4a7c8"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c5e4a950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2ab9c5e40798" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c5e40798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c5e40ae8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c5e40c70"/>
        <function-ref name="request" scoped="" ref="0x2ab9c5e40df8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c5e3f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c5e3f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x2ab9c5e59540" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x2ab9c5e59540"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c5e59990"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c5e59b18"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c5e59ca0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c5e59e28"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c5e47020"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c5e471a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x2ab9c5e55b80" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x2ab9c5e55b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c5e54020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c5e541a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x2ab9c5e56cf8" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x2ab9c5e56cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c5e550a0"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c5e55228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x2ab9c5e58e68" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x2ab9c5e58e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c5e561e8"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c5e56370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ab9c5ea9af8" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c5ea9af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ab9c5ea9e48"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ab9c5e99020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ab9c5e991a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2ab9c5e99330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ab9c5e994b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ab9c5e99640"/>
        <function-ref name="setChannel" scoped="" ref="0x2ab9c5e997c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ab9c5e99950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ab9c5e99ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ab9c5e99c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ab9c5e99de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ab9c5e98020"/>
        <function-ref name="sync" scoped="" ref="0x2ab9c5e981a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ab9c5e98430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ab9c5e985b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ab9c5ec0d28" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2ab9c5ec0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5ea68b8"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c5ea6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ab9c5e988b0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2ab9c5e988b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ab9c5e98c00"/>
        <function-ref name="rfOff" scoped="" ref="0x2ab9c5e98d88"/>
        <function-ref name="rxOn" scoped="" ref="0x2ab9c5ea7020"/>
        <function-ref name="startVReg" scoped="" ref="0x2ab9c5ea71a8"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ab9c5ea7330"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ab9c5ea74b8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ab9c5ea7640"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ab9c5ea77c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c5e9de00" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c5e9de00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c5e9a1a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c5e9a330"/>
        <function-ref name="request" scoped="" ref="0x2ab9c5e9a4b8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c5e9a640"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c5e9a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x2ab9c5ebb328" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c5ebb328"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ab9c5ebb678"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ab9c5ebb800"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ab9c5ebb988"/>
        <function-ref name="syncDone" scoped="" ref="0x2ab9c5ebbb10"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ab9c5ebbc98"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ab9c5ebbe20"/>
        <function-ref name="setChannel" scoped="" ref="0x2ab9c5eba020"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ab9c5eba1a8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ab9c5eba330"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ab9c5eba4b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ab9c5eba640"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ab9c5eba7c8"/>
        <function-ref name="sync" scoped="" ref="0x2ab9c5eba950"/>
        <function-ref name="getChannel" scoped="" ref="0x2ab9c5ebabd8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ab9c5ebad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x2ab9c5eefc48" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c5eefc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5eee020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5eee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x2ab9c5eb47f0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ab9c5eb47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ab9c5eb4b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x2ab9c5eb5060" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x2ab9c5eb5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c5ec9690"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c5eca738"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c5ec9088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c5ecabc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c5ec9b18"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5eb5db0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5eca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x2ab9c5ed3ab8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c5ed3ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5ed3e08"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5eef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2ab9c5ec71b0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2ab9c5ec71b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ec7500"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ec7688"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ec7810"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ec7998"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ec7b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ec7ca8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ec7e30"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ec6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x2ab9c5eb84d0" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x2ab9c5eb84d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5eb7088"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c5eb74d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x2ab9c5efb3f0" loc="126:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x2ab9c5efb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c5efb740"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c5efb8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x2ab9c5eee530" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ab9c5eee530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5eee880"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5eeea08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ab9c5eeeda0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c5eeeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5eed170"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5eed2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x2ab9c5ed4990" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c5ed4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5ed4ce0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5ed4e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ab9c5ed91b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ab9c5ed91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ab9c5ed9500"/>
        <function-ref name="changed" scoped="" ref="0x2ab9c5ed9688"/>
        <function-ref name="amGroup" scoped="" ref="0x2ab9c5ed9810"/>
        <function-ref name="setAddress" scoped="" ref="0x2ab9c5ed9998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ab9c5ec8020" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ab9c5ec8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ec8370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ec84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ec8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ec8808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ec8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ec8b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ec8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ec8e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x2ab9c5eec3c0" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c5eec3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c5eec910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x2ab9c5ec6378" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2ab9c5ec6378"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c5ec66c8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c5ec6850"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c5ec69d8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c5ec6b60"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ec6ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c5ec6e70"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ec4020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c5ec41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c5ebc020" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c5ebc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5ebc370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ab9c5eef3d0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c5eef3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5eef720"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5eef8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x2ab9c5eecca0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c5eecca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c5eeb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ab9c5eeb3b0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ab9c5eeb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c5eeb700"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c5eeb888"/>
        <function-ref name="request" scoped="" ref="0x2ab9c5eeba10"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c5eebb98"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c5eebd20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x2ab9c5ee8e50" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x2ab9c5ee8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c5ee71e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c5ee7370"/>
        <function-ref name="request" scoped="" ref="0x2ab9c5ee74f8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c5ee7680"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c5ee7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x2ab9c5eb9080" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x2ab9c5eb9080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x2ab9c5eb93d0"/>
        <function-ref name="rfOff" scoped="" ref="0x2ab9c5eb9558"/>
        <function-ref name="rxOn" scoped="" ref="0x2ab9c5eb96e0"/>
        <function-ref name="startVReg" scoped="" ref="0x2ab9c5eb9868"/>
        <function-ref name="stopVReg" scoped="" ref="0x2ab9c5eb99f0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x2ab9c5eb9b78"/>
        <function-ref name="stopOscillator" scoped="" ref="0x2ab9c5eb9d00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x2ab9c5eb8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x2ab9c5ed3230" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c5ed3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5ed3580"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5ed3708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x2ab9c5ed4120" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c5ed4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5ed4470"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5ed45f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x2ab9c5eea518" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ab9c5eea518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c5eea868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c5ee7ac0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c5ee7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c5ee7e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c5ee6020"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c5ee61a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c5ee6330"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c5ee64b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5ee6640"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c5ee67c8"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c5ee6de8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5ee6950"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c5ee6ad8"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c5ee6c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x2ab9c5efc598" loc="125:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x2ab9c5efc598"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c5efc8e8"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c5efca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c5ebc650" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c5ebc650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c5ebc9a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c5ebcb28"/>
        <function-ref name="request" scoped="" ref="0x2ab9c5ebccb0"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c5ebce38"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c5ebb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x2ab9c5ee0a60" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ab9c5ee0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5ee0db0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5edd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x2ab9c5ee0128" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c5ee0128"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c5ee0578"/>
        <function-ref name="write" scoped="" ref="0x2ab9c5ee0700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x2ab9c5edeb78" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2ab9c5edeb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c5ec3020"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c5ec31a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ab9c5ec3330"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ab9c5ec34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x2ab9c5ee8140" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x2ab9c5ee8140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c5ee8490"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c5ee8618"/>
        <function-ref name="request" scoped="" ref="0x2ab9c5ee87a0"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c5ee8928"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c5ee8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x2ab9c5eeabf0" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c5eeabf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c5eec020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c5f5e3c0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c5f5e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c5f5e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x2ab9c5f5ed38" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x2ab9c5f5ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c5f7a410"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c5f5c4a8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c5f5cdb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c5f5c930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c5f7a898"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5f5dac0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5f5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab9c5f779e8" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c5f779e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c61bc088"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61980f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c6198a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6198580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c61bc510"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6199768"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6199c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c61bc928" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c61bc928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c61bcc78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab9c7436de8" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c7436de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c7432628"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c7433580"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c7432020"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c7433a08"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c7432ab0"/>
        <function-ref name="start" scoped="" ref="0x2ab9c7434be8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c74330f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab9c742e528" loc="30:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c742e528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c742cc88"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c742dd08"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c742c680"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c742c1f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c742b150"/>
        <function-ref name="start" scoped="" ref="0x2ab9c742d3a8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c742d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab9c5f930c0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5f930c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab9c5f93410"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ab9c5f93598"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab9c5f93720"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ab9c5f938a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab9c5f93a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab9c5f93bb8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ab9c5f93d40"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ab9c5f92020"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ab9c5f921a8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ab9c5f92330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ab9c5fa3b68" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ab9c5fa3b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ab9c5fa1db8"/>
        <function-ref name="test" scoped="" ref="0x2ab9c5fa14a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5faa728"/>
        <function-ref name="captured" scoped="" ref="0x2ab9c5fa90c0"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c5fa9598"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c5fa1930"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5faabb0"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5fa9a20"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5fa1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ab9c5f9f020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab9c5f9f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c5fb77a8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c5f9e560"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5f9fba0"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c5f9e9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c5fb7c30"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5f9e088"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5f9ee70"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5fb7320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c5f81020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c5f81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c5f950f8"/>
        <function-ref name="test" scoped="" ref="0x2ab9c5f977a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5f81ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c5f95580"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c5f95a58"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c5f809e8"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c5f80560"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c5f97c30"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5f80088"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5f80e70"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5f97320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab9c5fc9950" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5fc9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab9c5fc9ca0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab9c5fc9e28"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab9c5fad020"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab9c5fad1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab9c5fad330"/>
        <function-ref name="setControl" scoped="" ref="0x2ab9c5fad4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ab9c5fbf470" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ab9c5fbf470"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ab9c5fbf7c0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab9c5fbf948"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ab9c5fbfad0"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab9c5fbfc58"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab9c5fbfde0"/>
        <function-ref name="setAssr" scoped="" ref="0x2ab9c5fc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ab9c5fad980" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab9c5fad980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c5fc6270"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c5fc7020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5fac560"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c5fc74a8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c5fc66f8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5fac9e8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5fc7930"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5fc7db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c5fb6d90" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c5fb6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c5fb0e58"/>
        <function-ref name="test" scoped="" ref="0x2ab9c5fb0548"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5fb2940"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c5faf310"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c5faf7e8"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c5fb1778"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c5fb12f0"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c5fb09d0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5fb2dc8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5fb1c00"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5fb00c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab9c5fd9558" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c5fd9558"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab9c5fd98a8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab9c5fd9a30"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab9c5fd9bb8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab9c5fd9d40"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab9c5fd7020"/>
        <function-ref name="setControl" scoped="" ref="0x2ab9c5fd71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2ab9c5fd4790" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2ab9c5fd4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2ab9c5fd4ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2ab9c5fd2020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ab9c5fd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ab9c5fd2370"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab9c5fd24f8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ab9c5fd2680"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab9c5fd2808"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab9c5fd2990"/>
        <function-ref name="setAssr" scoped="" ref="0x2ab9c5fd2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2ab9c5fd7670" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab9c5fd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c5fd5e20"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c5fd6b80"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5fd6220"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c5fd5088"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c5fd4310"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5fd66a8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5fd5510"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5fd5998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c5fbc400" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c5fbc400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c5fda580"/>
        <function-ref name="test" scoped="" ref="0x2ab9c5fdbc20"/>
        <function-ref name="get" scoped="" ref="0x2ab9c5fdc020"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c5fdaa08"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c5fd9020"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c5fdce08"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c5fdc980"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c5fda0f8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c5fdc4a8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c5fdb310"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c5fdb798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2ab9c6040568" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c6040568"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab9c60408b8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x2ab9c6040a40"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab9c6040bc8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x2ab9c6040d50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab9c603f020"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab9c603f1a8"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x2ab9c603f330"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x2ab9c603f4b8"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x2ab9c603f640"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x2ab9c603f7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x2ab9c6051020" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x2ab9c6051020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab9c6051370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab9c60514f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab9c6051680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab9c6051808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab9c6051990"/>
        <function-ref name="setControl" scoped="" ref="0x2ab9c6051b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2ab9c603a540" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2ab9c603a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c6038db8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6039a58"/>
        <function-ref name="get" scoped="" ref="0x2ab9c60390f8"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c6038020"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c6036270"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6039580"/>
        <function-ref name="start" scoped="" ref="0x2ab9c60384a8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6038930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ab9c603fca0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ab9c603fca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ab9c603ce20"/>
        <function-ref name="test" scoped="" ref="0x2ab9c603c510"/>
        <function-ref name="get" scoped="" ref="0x2ab9c603e858"/>
        <function-ref name="captured" scoped="" ref="0x2ab9c603d238"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c603d710"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c603c998"/>
        <function-ref name="set" scoped="" ref="0x2ab9c603ece0"/>
        <function-ref name="start" scoped="" ref="0x2ab9c603db98"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c603c088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2ab9c60368e8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2ab9c60368e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c6033088"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6035df0"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6035490"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c60342b0"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c6033510"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6035918"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6034738"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6034bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2ab9c6033b88" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2ab9c6033b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c60534a8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c60540f8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6055760"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c6054580"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c6053930"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6055be8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6054a08"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6053020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6022490" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6022490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c6042580"/>
        <function-ref name="test" scoped="" ref="0x2ab9c6043c30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6021088"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c6042a08"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c6040020"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c6021e70"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c60219e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c60420f8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6021510"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6043320"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c60437a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c60e6190" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c60e6190"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ab9c59e9388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ab9c59e9388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c60e64e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ab9c60e68b0" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c60e68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c60d7998"/>
        <function-ref name="test" scoped="" ref="0x2ab9c60d7088"/>
        <function-ref name="get" scoped="" ref="0x2ab9c60da490"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c60d7e20"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c60d6350"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c60d82b0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c60dadf0"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c60d7510"/>
        <function-ref name="set" scoped="" ref="0x2ab9c60da918"/>
        <function-ref name="start" scoped="" ref="0x2ab9c60d8738"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c60d8bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab9c7498750" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c7498750"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2ab9c59e9020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2ab9c59e9020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c7495020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c7496020"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c7496930"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c74964a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c74954a8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c7497578"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c7497a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2ab9c7490a80" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2ab9c7490a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c748c270"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c748d020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c748e658"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c748d4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c748c6f8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c748eae0"/>
        <function-ref name="start" scoped="" ref="0x2ab9c748d930"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c748ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2ab9c74959c8" loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2ab9c74959c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c7491b80"/>
        <function-ref name="test" scoped="" ref="0x2ab9c7491270"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7493598"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c7490088"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c7490560"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c74924a8"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c7492020"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c74916f8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c7493a20"/>
        <function-ref name="start" scoped="" ref="0x2ab9c7492930"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c7492db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab9c612dd70" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c612dd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6131af8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c61304a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c6130020"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c6130930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab9c612bad0" loc="24:/opt/tinyos-2.1.2/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c612bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6128860"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c61261f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c6128ce8"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c6126680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab9c6123a98" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c6123a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6139828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c6138190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c6139cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c6138618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ab9c6138b78" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6138b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c6134c20"/>
        <function-ref name="test" scoped="" ref="0x2ab9c6134310"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6137728"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c615b0f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c615b5d0"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c6135548"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c61350c0"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c6134798"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6137bb0"/>
        <function-ref name="start" scoped="" ref="0x2ab9c61359d0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6135e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2ab9c61622b0" loc="63:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2ab9c61622b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6161088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c6161998"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c6161510"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c6161e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab9c61650e0" loc="62:/opt/tinyos-2.1.2/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c61650e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6165e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c6164798"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c6164310"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c6164c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab9c74a82f0" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c74a82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c74a5928"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c74a69e8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c74a5320"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c74a6e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c74a5db0"/>
        <function-ref name="start" scoped="" ref="0x2ab9c74a6088"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c74a6560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x2ab9c74a2688" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x2ab9c74a2688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="TOne" ref="0x2ab9c5aa5720"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c749fcc0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c74a0d60"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c749f6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c749f230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c749e190"/>
        <function-ref name="start" scoped="" ref="0x2ab9c74a0400"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c74a08d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ab9c74a4410" loc="68:/opt/tinyos-2.1.2/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c74a4410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c74a3190"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c74a3aa0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c74a3618"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c74a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c619aa58" loc="18:/opt/tinyos-2.1.2/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c619aa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c619ada8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x2ab9c61b6020" loc="87:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2ab9c61b6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c61b6370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c61b64f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c61b6680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c61b6808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61b6990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c61b6b18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61b6ca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c61b6e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x2ab9c61b5198" loc="88:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2ab9c61b5198"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c61b54e8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c61b5670"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c61b57f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c61b5980"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61b5b08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c61b5c90"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61b5e18"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c61b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2ab9c61b4338" loc="89:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2ab9c61b4338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c61b4688"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c61b4810"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c61b4998"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c61b4b20"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61b4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c61b4e30"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61b3020"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c61b31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x2ab9c61b8de0" loc="86:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ab9c61b8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c61b7170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c61b72f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c61b7480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c61b7608"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61b7790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c61b7918"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61b7aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c61b7c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x2ab9c61b2648" loc="91:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x2ab9c61b2648"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c61b2998"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c61b2b20"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c61b2ca8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c61b2e30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61b1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c61b11a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61b1330"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c61b14b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2ab9c5f5fc88" loc="85:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2ab9c5f5fc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c61b8020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c61b81a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c61b8330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c61b84b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61b8640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c61b87c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61b8950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c61b8ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x2ab9c61b34b0" loc="90:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2ab9c61b34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c61b3800"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c61b3988"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c61b3b10"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c61b3c98"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61b3e20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c61b2020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61b21a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c61b2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x2ab9c61ccd68" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2ab9c61ccd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ab9c61d00f0"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61d0278"/>
        <function-ref name="captured" scoped="" ref="0x2ab9c61d0400"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ab9c61d0588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x2ab9c61d0958" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x2ab9c61d0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c61d0ca8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61d0e30"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ab9c61cf020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ab9c61cf1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x2ab9c61cf588" loc="41:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ab9c61cf588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c61cf8d8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61cfa60"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ab9c61cfbe8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ab9c61cfd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2ab9c61caa38" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2ab9c61caa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ab9c61cad88"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61c9020"/>
        <function-ref name="captured" scoped="" ref="0x2ab9c61c91a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ab9c61c9330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x2ab9c61c9700" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x2ab9c61c9700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2ab9c61e0930"/>
        <function-ref name="test" scoped="" ref="0x2ab9c61e0020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c61e33a8"/>
        <function-ref name="captured" scoped="" ref="0x2ab9c61e3d08"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c61e1238"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c61e04a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c61e3830"/>
        <function-ref name="start" scoped="" ref="0x2ab9c61e16c0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c61e1b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x2ab9c61dcd78" loc="9:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x2ab9c61dcd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61f40f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61f4278"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61f4400"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61f4588"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61f4710"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61f4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x2ab9c61dc2c8" loc="8:/opt/tinyos-2.1.2/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x2ab9c61dc2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c61dc618"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61dc7a0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ab9c61dc928"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ab9c61dcab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x2ab9c61ebb38" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x2ab9c61ebb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61ea020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61ea1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61ea330"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61ea4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61ea640"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61ea7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x2ab9c61f0c88" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x2ab9c61f0c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61ef020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61ef1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61ef330"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61ef4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61ef640"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61ef7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x2ab9c61edb38" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x2ab9c61edb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61ec020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61ec1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61ec330"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61ec4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61ec640"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61ec7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x2ab9c61eab38" loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x2ab9c61eab38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6213020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c62131a8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c6213330"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c62134b8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c6213640"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c62137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x2ab9c61efb38" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x2ab9c61efb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61ee020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61ee1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61ee330"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61ee4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61ee640"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61ee7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x2ab9c61ecb38" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x2ab9c61ecb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61eb020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61eb1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61eb330"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61eb4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61eb640"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61eb7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x2ab9c61f3db0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x2ab9c61f3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61f0170"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61f02f8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61f0480"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61f0608"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61f0790"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61f0918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x2ab9c61eeb38" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x2ab9c61eeb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c61ed020"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c61ed1a8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c61ed330"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c61ed4b8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c61ed640"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c61ed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x2ab9c620b758" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x2ab9c620b758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x2ab9c620f020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x2ab9c620f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x2ab9c620e758" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x2ab9c620e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x2ab9c620a020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x2ab9c620a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x2ab9c620f758" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x2ab9c620f758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620faa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x2ab9c620b020" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x2ab9c620b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x2ab9c620d850" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x2ab9c620d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x2ab9c620e020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x2ab9c620e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c620e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c6219258" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c6219258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c62195a8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6219730"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c62198b8"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c6219a40"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c6219bc8"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c6219d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c622f060" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c622f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c622f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c622dcf8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c622dcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c622b0a0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c622b228"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c622b3b0"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c622b538"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c622b6c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c622b848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c622bb10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c622bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c622be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c62537e8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c62537e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6253b38"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6253cc0"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c6253e48"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c6252020"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c62521a8"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c6252330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c62525f8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c62525f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c6252948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c624f3e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c624f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c624f730"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c624f8b8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c624fa40"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c624fbc8"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c624fd50"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c624e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c624e2e8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c624e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c624e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c624a180" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c624a180"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c624a4d0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c624a658"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c624a7e0"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c624a968"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c624aaf0"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c624ac78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c6249020" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6249020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c6249370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c6246020" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c6246020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6246370"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c62464f8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c6246680"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c6246808"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c6246990"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c6246b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c6246de0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6246de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c6245170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c6243cd8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c6243cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c62420a0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6242228"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c62423b0"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c6242538"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c62426c0"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c6242848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c6242b10" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6242b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c6242e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x2ab9c623e9d8" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x2ab9c623e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c623ed28"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6269020"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c62691a8"/>
        <function-ref name="edge" scoped="" ref="0x2ab9c6269330"/>
        <function-ref name="enable" scoped="" ref="0x2ab9c62694b8"/>
        <function-ref name="getValue" scoped="" ref="0x2ab9c6269640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x2ab9c6269908" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x2ab9c6269908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c6269c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x2ab9c625d8e0" loc="51:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x2ab9c625d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c625dc30"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c625ddb8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c625c020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c625c1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c625c330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c625c4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c625c640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c625c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x2ab9c6260cf0" loc="47:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2ab9c6260cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c625d0a0"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c625d228"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ab9c625d3b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ab9c625d538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x2ab9c625a278" loc="69:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x2ab9c625a278"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c625a5c8"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c625a750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ab9c64c0c90" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c64c0c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64bf3e8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bf570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ab9c6494438" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ab9c6494438"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6494788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ab9c64c4dd8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c64c4dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c2170"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c22f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ab9c64be7c0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c64be7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64beb10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ab9c64bd020" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ab9c64bd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64bd370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bd4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ab9c64b27c0" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c64b27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b2b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ab9c64b47c0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ab9c64b47c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b4b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b4c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ab9c64926b8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c64926b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6492a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ab9c64b57c0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c64b57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b5b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ab9c64c2d60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ab9c64c2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c10d8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c1260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ab9c64c1cc8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c64c1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c00a0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c0228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ab9c64b9020" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ab9c64b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b9370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ab9c64bd7c0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c64bd7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64bdb10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bdc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ab9c6496e78" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6496e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c64951f8"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c6495380"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c6495508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ab9c6490020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c6490020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6490370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ab9c6490638" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ab9c6490638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6490a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ab9c6490d50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c6490d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64c50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ab9c64b4020" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c64b4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b4370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b44f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ab9c6491368" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c6491368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64916b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ab9c64c1528" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c64c1528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c1878"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ab9c64c25c0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c64c25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c2910"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c2a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ab9c6495de8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c6495de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6494170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ab9c64b2020" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c64b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b2370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ab9c64b3020" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ab9c64b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b3370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b34f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ab9c64b97c0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ab9c64b97c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b9b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ab9c64b5020" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c64b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b5370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b54f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ab9c64bb7c0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c64bb7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64bbb10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bbc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ab9c64b1020" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c64b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c64b1770"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c64b18f8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b1a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c64b1c08"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c64b1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ab9c64957d0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ab9c64957d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6495b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ab9c64c4638" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ab9c64c4638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c4988"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ab9c64c04f0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c64c04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c0840"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c09c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ab9c64bb020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c64bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64bb370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bb4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ab9c64bf838" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c64bf838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64bfb88"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ab9c6494a50" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ab9c6494a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6494da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ab9c64be020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c64be020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64be370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64be4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c6496280" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c6496280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c64965d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c6496758"/>
        <function-ref name="request" scoped="" ref="0x2ab9c64968e0"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6496a68"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6496bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ab9c64c53a0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c64c53a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64c56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ab9c64c4020" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ab9c64c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64c4370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ab9c64b77c0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ab9c64b77c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b7b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b7c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ab9c64b7020" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c64b7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b7370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b74f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ab9c6491980" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c6491980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6491cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ab9c64b87c0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c64b87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b8b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b8c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ab9c64b37c0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ab9c64b37c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b3b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b3c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ab9c64b8020" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c64b8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64b8370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b84f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ab9c64920a0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ab9c64920a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64923f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ab9c64ba7c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ab9c64ba7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64bab10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64bac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ab9c6492cd0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c6492cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64910a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ab9c64ba020" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c64ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64ba370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64ba4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ab9c64c59b8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ab9c64c59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64c5d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ab9c64b00a0" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c64b00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c64b03f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c64b0578"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64b0700"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c64b0888"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c64b0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ab9c629e3c8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2ab9c629e3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c629e718"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c629e8a0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c629ea28"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c629ebb0"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c629ed38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ab9c629f4c8" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c629f4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c629f818"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c629f9a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c629fb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ab9c629c5e0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2ab9c629c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c629c930"/>
        <function-ref name="write" scoped="" ref="0x2ab9c629cab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ab9c629b348" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2ab9c629b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c629b698"/>
        <function-ref name="write" scoped="" ref="0x2ab9c629b820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c62a2808" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c62a2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c62a2b58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c62a2ce0"/>
        <function-ref name="request" scoped="" ref="0x2ab9c62a2e68"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c629f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c629f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ab9c629a1c8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2ab9c629a1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c629a518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x2ab9c62b1860" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c62b1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c62b1bb0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c62b1d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x2ab9c62c04d0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x2ab9c62c04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c62c0820"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c62c09a8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c62c0b30"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c62c0cb8"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c62c0e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ab9c62974e8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c62974e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c6297838"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c62979c0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c6297b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x2ab9c62b9470" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ab9c62b9470"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ab9c62b97c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x2ab9c62bb0e0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x2ab9c62bb0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c62bb430"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c62bb5b8"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c62bb740"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c62bb8c8"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c62bba50"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c62bbbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ab9c62bd8e8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ab9c62bd8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c62bdc38"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c62bddc0"/>
        <function-ref name="request" scoped="" ref="0x2ab9c62bc020"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c62bc1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c62bc330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x2ab9c62bf680" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x2ab9c62bf680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c62bf9d0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c62bfb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x2ab9c62be3c8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x2ab9c62be3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c62be718"/>
        <function-ref name="write" scoped="" ref="0x2ab9c62be8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c62bbe50" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c62bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c62ba1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c62ba370"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c62ba4f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c62ba680"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c62ba808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c62ba990"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c62bab18"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c62b21a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c62baca0"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c62bae28"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c62b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c6296300" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c6296300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6296650"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c62967d8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6296960"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6296ae8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6296c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x2ab9c62aeb80" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x2ab9c62aeb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c62ac020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c62ac1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x2ab9c62bd1c8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x2ab9c62bd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c62bd518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ab9c630d978" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ab9c630d978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c630dcc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c630de50"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c630c020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c630c1a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c630c330"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c630c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ab9c6308790" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ab9c6308790"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c6308ae0"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c6308c68"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c6308df0"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c6307020"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c63071a8"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c6307330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6332438" loc="66:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6332438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6332788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ab9c6331020" loc="67:/opt/tinyos-2.1.2/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ab9c6331020"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c6331370"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c63314f8"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c6331680"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c6331808"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c6331990"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c6331b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ab9c64812a8" loc="43:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c64812a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c64815f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6481780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ab9c6482c18" loc="42:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6482c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ab9c6481020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6483960" loc="39:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6483960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6483cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c6482020" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c6482020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6482370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c64824f8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6482680"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6482808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6482990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ab9c633ccc0" loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c633ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c63410a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6341228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ab9c6345a20" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6345a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ab9c6345d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6345400" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6345400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6345750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ab9c633c1f0" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ab9c633c1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ab9c633c540"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ab9c633c6c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2ab9c633c850"/>
        <function-ref name="write" scoped="" ref="0x2ab9c633c9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c63419f8" loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c63419f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6341d48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c6340020"/>
        <function-ref name="request" scoped="" ref="0x2ab9c63401a8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6340330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c63404b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2ab9c6386b58" loc="296:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2ab9c6386b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6385020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c63851a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2ab9c6337020" loc="94:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2ab9c6337020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6337370"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c63374f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2ab9c6379208" loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2ab9c6379208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6379558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c63796e0"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6379868"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c63799f0"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6379b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2ab9c6339d80" loc="92:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2ab9c6339d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2ab9c6338170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c63397a0" loc="91:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c63397a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6339af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2ab9c6364020" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2ab9c6364020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ab9c6364370"/>
        <function-ref name="sleep" scoped="" ref="0x2ab9c637a7c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ab9c6364680"/>
        <function-ref name="dataReady" scoped="" ref="0x2ab9c637a950"/>
        <function-ref name="initMaster" scoped="" ref="0x2ab9c6364990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ab9c6364b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ab9c6364ca0"/>
        <function-ref name="read" scoped="" ref="0x2ab9c6364e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ab9c6363020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ab9c63631a8"/>
        <function-ref name="setClock" scoped="" ref="0x2ab9c6363330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ab9c63634b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ab9c6363640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ab9c63638c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ab9c6363a50"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6363bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ab9c6363d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ab9c637a020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ab9c637a1a8"/>
        <function-ref name="getClock" scoped="" ref="0x2ab9c637a330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ab9c637a4b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ab9c63644f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ab9c6364808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ab9c637a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2ab9c6338428" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2ab9c6338428"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2ab9c6338778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2ab9c6338900"/>
        <function-ref name="splitRead" scoped="" ref="0x2ab9c6338a88"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6338c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c6337c88" loc="95:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c6337c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6335020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c63351a8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6335330"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c63354b8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6335640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2ab9c63755d0" loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab9c63755d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ab9c6375920"/>
        <function-ref name="userId" scoped="" ref="0x2ab9c6375aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2ab9c6375d78" loc="101:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2ab9c6375d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ab9c63770f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2ab9c63bb020" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2ab9c63bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ab9c63bb370"/>
        <function-ref name="sleep" scoped="" ref="0x2ab9c63b97c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ab9c63bb680"/>
        <function-ref name="dataReady" scoped="" ref="0x2ab9c63b9950"/>
        <function-ref name="initMaster" scoped="" ref="0x2ab9c63bb990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ab9c63bbb18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ab9c63bbca0"/>
        <function-ref name="read" scoped="" ref="0x2ab9c63bbe28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ab9c63ba020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ab9c63ba1a8"/>
        <function-ref name="setClock" scoped="" ref="0x2ab9c63ba330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ab9c63ba4b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ab9c63ba640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ab9c63ba8c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ab9c63baa50"/>
        <function-ref name="write" scoped="" ref="0x2ab9c63babd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ab9c63bad60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ab9c63b9020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ab9c63b91a8"/>
        <function-ref name="getClock" scoped="" ref="0x2ab9c63b9330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ab9c63b94b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ab9c63bb4f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ab9c63bb808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ab9c63b9640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2ab9c63dd190" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2ab9c63dd190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c63dd4e0"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c63dd668"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c63dd7f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c63dd978"/>
        <function-ref name="get" scoped="" ref="0x2ab9c63ddb00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c63ddc88"/>
        <function-ref name="set" scoped="" ref="0x2ab9c63dde10"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c63dc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2ab9c63b2de0" loc="79:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2ab9c63b2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c63b1170"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c63b12f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c63b1480"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c63b1608"/>
        <function-ref name="get" scoped="" ref="0x2ab9c63b1790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c63b1918"/>
        <function-ref name="set" scoped="" ref="0x2ab9c63b1aa0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c63b1c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2ab9c63aec70" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2ab9c63aec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c63b2020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c63b21a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c63b2330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c63b24b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c63b2640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c63b27c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c63b2950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c63b2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2ab9c63ae438" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2ab9c63ae438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c63ae788"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c63ae910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2ab9c63dc350" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2ab9c63dc350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2ab9c63dc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2ab9c63b8dc0" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2ab9c63b8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2ab9c63b5170"/>
        <function-ref name="sleep" scoped="" ref="0x2ab9c63b3640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2ab9c63b5480"/>
        <function-ref name="dataReady" scoped="" ref="0x2ab9c63b37c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2ab9c63b5790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2ab9c63b5918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2ab9c63b5aa0"/>
        <function-ref name="read" scoped="" ref="0x2ab9c63b5c28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2ab9c63b5db0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2ab9c63b4020"/>
        <function-ref name="setClock" scoped="" ref="0x2ab9c63b41a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2ab9c63b4330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2ab9c63b44b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2ab9c63b4740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2ab9c63b48c8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c63b4a50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2ab9c63b4bd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2ab9c63b4d60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2ab9c63b3020"/>
        <function-ref name="getClock" scoped="" ref="0x2ab9c63b31a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2ab9c63b3330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2ab9c63b52f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2ab9c63b5608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2ab9c63b34b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2ab9c63ad020" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2ab9c63ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c63ad370"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c63ad4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c63ad680"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c63ad808"/>
        <function-ref name="get" scoped="" ref="0x2ab9c63ad990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c63adb18"/>
        <function-ref name="set" scoped="" ref="0x2ab9c63adca0"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c63ade28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ab9c6467020" loc="86:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ab9c6467020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ab9c6467390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab9c6467518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ab9c6465020" loc="89:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab9c6465020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ab9c6465390"/>
        <function-ref name="configure" scoped="" ref="0x2ab9c6465518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c6468200" loc="85:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c6468200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6468570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c64686f8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6468880"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6468a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6468b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ab9c6467760" loc="87:/opt/tinyos-2.1.2/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab9c6467760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ab9c6467ab0"/>
        <function-ref name="userId" scoped="" ref="0x2ab9c6467c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c7523620" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c7523620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c7523970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ab9c7523bf8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ab9c7523bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ab9c7522020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ab9c75221a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ab9c7522330"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab9c75224b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2ab9c7520820" loc="52:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2ab9c7520820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2ab9c7520b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2ab9c7520d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2ab9c75a88c0" loc="56:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2ab9c75a88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2ab9c75a8c30"/>
        <function-ref name="configure" scoped="" ref="0x2ab9c75a8db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ab9c75a70a0" loc="57:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ab9c75a70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ab9c75a73f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ab9c75a7578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ab9c75a7700"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab9c75a7888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c7521a28" loc="51:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c7521a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c7521d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c7520020"/>
        <function-ref name="request" scoped="" ref="0x2ab9c75201a8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c7520330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c75204b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2ab9c75a8020" loc="53:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2ab9c75a8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2ab9c75a8370"/>
        <function-ref name="userId" scoped="" ref="0x2ab9c75a84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2ab9c75a7b50" loc="69:/opt/tinyos-2.1.2/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2ab9c75a7b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c75a6020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c75a61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2ab9c648f4a8" loc="45:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2ab9c648f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c648f7f8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c648f980"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c648fb08"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c648fc90"/>
        <function-ref name="get" scoped="" ref="0x2ab9c648fe18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c648e020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c648e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c648e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c645f870" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c645f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c645fbc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c645fd48"/>
        <function-ref name="request" scoped="" ref="0x2ab9c645c020"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c645c1a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c645c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x2ab9c645c700" loc="44:/opt/tinyos-2.1.2/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x2ab9c645c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c645ca50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c645cbd8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c645cd60"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c648f020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c648f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ab9c64cf7c0" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c64cf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cfd10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64cd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ab9c64d9cd0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ab9c64d9cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d80a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ab9c64d27c0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c64d27c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64d2b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64d2c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ab9c64cc2e8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c64cc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cc638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64cc7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ab9c64cca88" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ab9c64cca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64ccdd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ab9c64f62e8" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c64f62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64f6638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ab9c64f92e8" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ab9c64f92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64f9638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ab9c64d7020" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c64d7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d7370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ab9c64fa2e8" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c64fa2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64fa638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64fa7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ab9c64d17c0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ab9c64d17c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64d1b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64d1c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ab9c64d07c0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c64d07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64d0b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64d0c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ab9c64c9a88" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ab9c64c9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c9dd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ab9c64cb2e8" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c64cb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cb638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64cb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ab9c64da740" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c64da740"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c64daa90"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c64dac18"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c64dada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ab9c64d6900" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c64d6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d6c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ab9c64d5020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ab9c64d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ab9c64d5738" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c64d5738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ab9c64faa88" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c64faa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64fadd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ab9c64d7c50" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c64d7c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ab9c64d0020" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c64d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64d0370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64d04f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ab9c64d1020" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c64d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64d1370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64d14f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ab9c64d96b8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c64d96b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d9a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ab9c64f8a88" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c64f8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64f8dd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ab9c64f9a88" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ab9c64f9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64f9dd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ab9c64c82e8" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ab9c64c82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c8638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ab9c64fba88" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c64fba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64fbdd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ab9c64ca2e8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c64ca2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64ca638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ab9c64f6a88" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c64f6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c64f55e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c64f5770"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f58f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c64f5a80"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c64f5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ab9c64d90a0" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ab9c64d90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d93f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ab9c64d2020" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ab9c64d2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64d2370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64d24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ab9c64cf020" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c64cf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cf370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64cf4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ab9c64cba88" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c64cba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cbdd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64ca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ab9c64cd2e8" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c64cd2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cd638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64cd7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ab9c64d8368" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ab9c64d8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d86b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ab9c64cda88" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c64cda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cddd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64cc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c64dca48" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c64dca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c64dcd98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c64da020"/>
        <function-ref name="request" scoped="" ref="0x2ab9c64da1a8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c64da330"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c64da4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ab9c64d5d50" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c64d5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ab9c64d39b8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ab9c64d39b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d3d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ab9c64fb2e8" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ab9c64fb2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64fb638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64fb7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ab9c64c6a88" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c64c6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c6dd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ab9c64d62e8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c64d62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d6638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ab9c64c62e8" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c64c62e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c6638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c67c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ab9c64f82e8" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ab9c64f82e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64f8638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ab9c64c8a88" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c64c8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c8dd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ab9c64d8980" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ab9c64d8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ab9c64c92e8" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ab9c64c92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64c9638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c97c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ab9c64d7638" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c64d7638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d7988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ab9c64caa88" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c64caa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64cadd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ab9c64d33a0" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ab9c64d33a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64d36f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ab9c64f4020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c64f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c64f4370"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c64f44f8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64f4680"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c64f4808"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c64f4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ab9c64e2c90" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c64e2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e13e8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e1570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ab9c64ec3a0" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ab9c64ec3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64ec6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ab9c64e6dd8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c64e6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e5170"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e52f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ab9c65167c0" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c65167c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6516b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6516c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ab9c6515020" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ab9c6515020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6515370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65154f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ab9c650a7c0" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c650a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650ab10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650ac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ab9c650d7c0" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ab9c650d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650db10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ab9c64eb638" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c64eb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64eb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ab9c650e7c0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c650e7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650eb10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ab9c64e5d60" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ab9c64e5d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e30d8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e3260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ab9c64e3cc8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c64e3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e20a0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e2228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ab9c6511020" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ab9c6511020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6511370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65114f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ab9c65157c0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c65157c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6515b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6515c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ab9c64eeda0" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c64eeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c64ed170"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c64ed2f8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c64ed480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ab9c64e8020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c64e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e8370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ab9c64e8638" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ab9c64e8638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e8a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ab9c64e8d50" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c64e8d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e70d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ab9c650d020" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c650d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650d370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ab9c64e92e8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c64e92e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e9638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ab9c64e3528" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c64e3528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e3878"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e3a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ab9c64e55c0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c64e55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e5910"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e5a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ab9c64edd60" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c64edd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64ec0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ab9c650a020" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c650a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650a370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ab9c650b020" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ab9c650b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650b370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ab9c65117c0" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ab9c65117c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6511b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6511c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ab9c650e020" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c650e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650e370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ab9c65147c0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c65147c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6514b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6514c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ab9c6509020" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c6509020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c6509770"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c65098f8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6509a80"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c6509c08"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c6509d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ab9c64ed748" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ab9c64ed748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64eda98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ab9c64e6638" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ab9c64e6638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e6988"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ab9c64e24f0" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c64e24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e2840"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e29c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ab9c6514020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c6514020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6514370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65144f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ab9c64e1838" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c64e1838"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c64e1b88"/>
        <function-ref name="write" scoped="" ref="0x2ab9c64e1d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ab9c64ec9b8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ab9c64ec9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64ecd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ab9c6516020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c6516020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6516370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65164f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c64ee1a8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c64ee1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c64ee4f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c64ee680"/>
        <function-ref name="request" scoped="" ref="0x2ab9c64ee808"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c64ee990"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c64eeb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ab9c64e73a0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c64e73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e76f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ab9c64e6020" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ab9c64e6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ab9c650f7c0" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ab9c650f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650fb10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650fc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ab9c650f020" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c650f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650f370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650f4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ab9c64e9900" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c64e9900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ab9c65107c0" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c65107c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6510b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6510c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ab9c650b7c0" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ab9c650b7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c650bb10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c650bc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ab9c6510020" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c6510020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6510370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65104f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ab9c64eb020" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ab9c64eb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64eb370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ab9c65127c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ab9c65127c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6512b10"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6512c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ab9c64ebc50" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c64ebc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ab9c6512020" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c6512020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6512370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65124f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ab9c64e79b8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ab9c64e79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c64e7d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ab9c65080a0" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c65080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c65083f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c6508578"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6508700"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c6508888"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c6508a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2ab9c65002b8" loc="54:/opt/tinyos-2.1.2/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ab9c65002b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ab9c6500608"/>
        <function-ref name="changed" scoped="" ref="0x2ab9c6500790"/>
        <function-ref name="amGroup" scoped="" ref="0x2ab9c6500918"/>
        <function-ref name="setAddress" scoped="" ref="0x2ab9c6500aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x2ab9c6502d10" loc="40:/opt/tinyos-2.1.2/tos/platforms/micaz/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x2ab9c6502d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x2ab9c65250a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ab9c654d140" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c654d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c654d490"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c654d618"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c654d7a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c654d928"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c654dab0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c654dc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ab9c654ccb8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ab9c654ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ab9c654b0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x2ab9c654e480" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x2ab9c654e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c654e7d0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c654e958"/>
        <function-ref name="modify" scoped="" ref="0x2ab9c654eae0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c654ec68"/>
        <function-ref name="resend" scoped="" ref="0x2ab9c654edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6518c48" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6518c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c654e020"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c654e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ab9c654b458" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2ab9c654b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ab9c654b7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ab9c6560948" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c6560948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c6560c98"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c6560e20"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c655f020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c655f1a8"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c655f330"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c655f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ab9c6558460" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ab9c6558460"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c6557900"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c6555020"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c6557220"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6555700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ab9c657bde0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c657bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c657a170"/>
        <function-ref name="write" scoped="" ref="0x2ab9c657a2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ab9c657a650" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ab9c657a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c657a9a0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c657ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x2ab9c655f8c0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x2ab9c655f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ab9c655fc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x2ab9c657d478" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c657d478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c657d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x2ab9c6583d60" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x2ab9c6583d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2ab9c65530d8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c6553260"/>
        <function-ref name="captured" scoped="" ref="0x2ab9c65533e8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2ab9c6553570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x2ab9c655e9d8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x2ab9c655e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c655a088"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c655c0f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c655ca08"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c655c580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c655a510"/>
        <function-ref name="start" scoped="" ref="0x2ab9c655d768"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c655dc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ab9c655a9a8" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c655a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c655acf8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c655ae80"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c6559030"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c65591b8"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c6559340"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c65594c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x2ab9c657f538" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c657f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c657f888"/>
        <function-ref name="write" scoped="" ref="0x2ab9c657fa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x2ab9c657fda8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c657fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c657e170"/>
        <function-ref name="write" scoped="" ref="0x2ab9c657e2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x2ab9c6573750" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2ab9c6573750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6573aa0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ab9c6573c28"/>
        <function-ref name="sfd" scoped="" ref="0x2ab9c6573db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6561b70" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6561b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6560020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c65601a8"/>
        <function-ref name="modify" scoped="" ref="0x2ab9c6560330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c65604b8"/>
        <function-ref name="resend" scoped="" ref="0x2ab9c6560640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x2ab9c6581cb0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6581cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c65800a0"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c6580228"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c65803b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x2ab9c657db68" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c657db68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c657c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ab9c6552c98" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ab9c6552c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c6584020"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c65841a8"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c6584330"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c65844b8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6584640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c65847c8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6584950"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c6584ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6562b80" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6562b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6561020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ab9c65597f8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c65597f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6559b48"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c6559cd0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c6559e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x2ab9c65831d8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ab9c65831d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6583528"/>
        <function-ref name="isSet" scoped="" ref="0x2ab9c65836b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6583838"/>
        <function-ref name="set" scoped="" ref="0x2ab9c65839c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x2ab9c657c3d0" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c657c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c657c920"/>
        <function-ref name="write" scoped="" ref="0x2ab9c657caa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ab9c6581020" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ab9c6581020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6581370"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c65814f8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6581680"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6581808"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6581990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x2ab9c65538b8" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x2ab9c65538b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c6553d08"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c6552020"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c65521a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c6552330"/>
        <function-ref name="get" scoped="" ref="0x2ab9c65524b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c6552640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c65527c8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c6552950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ab9c657ae80" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ab9c657ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65781f8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6578380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x2ab9c65786f0" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c65786f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6578a40"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6578bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ab9c657e670" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ab9c657e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c657e9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x2ab9c6584e20" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x2ab9c6584e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c65821a8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c6582330"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c65824b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c6582640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c65827c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c6582950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6582ad8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c6582c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c65760c0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c65760c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c6576410"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c6576598"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c6576720"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c65768a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c6576a30"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6576bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c6576d40"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c65754b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6575020"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c65751a8"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c6575330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ab9c657b558" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c657b558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c657b8a8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c657ba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6561310" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6561310"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c6561660"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c65617e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x2ab9c6580720" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c6580720"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c6580a70"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c6580bf8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6580d80"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c657f020"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c657f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x2ab9c657ed40" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ab9c657ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c657d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x2ab9c657ce30" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ab9c657ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c657b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x2ab9c655e060" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x2ab9c655e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ab9c655e3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ab9c65fb470" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c65fb470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fb9c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fbb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ab9c66059b8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ab9c66059b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6605d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ab9c65fe470" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c65fe470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fe7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fe948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ab9c6633d98" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c6633d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6632170"/>
        <function-ref name="write" scoped="" ref="0x2ab9c66322f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ab9c66325c0" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ab9c66325c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6632910"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6632a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ab9c6628c10" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c6628c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6626020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c66261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ab9c662ac10" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ab9c662ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6629020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c66291a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ab9c6604c50" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c6604c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6603020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ab9c662bc10" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c662bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662a020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ab9c65fd470" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ab9c65fd470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fd7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fd948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ab9c65fc470" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c65fc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fc7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fc948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ab9c662f470" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ab9c662f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662f7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ab9c6632d60" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c6632d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c66310d8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6631260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ab9c6607430" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6607430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c6607780"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c6607908"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c6607a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ab9c6602638" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c6602638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6602988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ab9c6602c50" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ab9c6602c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c66010d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ab9c66013a0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c66013a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c66016f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ab9c662a470" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c662a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662a7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ab9c6603900" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c6603900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6603c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ab9c65fdc10" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c65fdc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fc020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fc1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ab9c65fec10" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c65fec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fd020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fd1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ab9c66053a0" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c66053a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c66056f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ab9c6628470" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c6628470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c66287c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6628948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ab9c6629470" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ab9c6629470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c66297c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6629948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ab9c662fc10" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ab9c662fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662e020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ab9c662b470" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c662b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662b7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ab9c6631cc8" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c6631cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c66300a0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6630228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ab9c6626470" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c6626470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c6626bc0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c6626d48"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6625020"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c66251a8"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c6625330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ab9c6607d58" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ab9c6607d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c66050d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ab9c65ffc50" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ab9c65ffc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fe020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ab9c65fcc10" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c65fcc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c65fb020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c65fb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ab9c6631528" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c6631528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6631878"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6631a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ab9c65fbe10" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c65fbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c66331a8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6633330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ab9c6604020" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ab9c6604020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6604370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ab9c66335f8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c66335f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6633948"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6633ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c66087d0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c66087d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6608b20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c6608ca8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6608e30"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6607020"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c66071a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ab9c66019b8" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c66019b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6601d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ab9c65ff638" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ab9c65ff638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c65ff988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ab9c662cc10" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ab9c662cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662b020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ab9c662c470" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c662c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662c7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662c948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ab9c6602020" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c6602020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6602370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ab9c662ec10" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c662ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662c020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ab9c6629c10" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ab9c6629c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6628020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c66281a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ab9c662e470" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c662e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662e7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ab9c6604638" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ab9c6604638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6604988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ab9c6630c90" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ab9c6630c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c662f020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c662f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ab9c66032e8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c66032e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6603638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ab9c66304f0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c66304f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6630840"/>
        <function-ref name="write" scoped="" ref="0x2ab9c66309c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ab9c65ff020" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ab9c65ff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c65ff370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ab9c66255f8" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c66255f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c6625948"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c6625ad0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6625c58"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c6625de0"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c6624020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ab9c6619868" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2ab9c6619868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6619bb8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ab9c6619d40"/>
        <function-ref name="sfd" scoped="" ref="0x2ab9c6618020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c66182f0" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c66182f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6618640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ab9c6618a48" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2ab9c6618a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ab9c6618d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6619080" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6619080"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c66193d0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6619558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x2ab9c664c998" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x2ab9c664c998"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c664cce8"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c664ce70"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c664b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c664b1a8"/>
        <function-ref name="get" scoped="" ref="0x2ab9c664b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c664b4b8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c664b640"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c664b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ab9c6644cb8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c6644cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ab9c66430a0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ab9c6643228"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ab9c66433b0"/>
        <function-ref name="syncDone" scoped="" ref="0x2ab9c6643538"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ab9c66436c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ab9c6643848"/>
        <function-ref name="setChannel" scoped="" ref="0x2ab9c66439d0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ab9c6643b58"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ab9c6643ce0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ab9c6643e68"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ab9c6642020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ab9c66421a8"/>
        <function-ref name="sync" scoped="" ref="0x2ab9c6642330"/>
        <function-ref name="getChannel" scoped="" ref="0x2ab9c66425b8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ab9c6642740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x2ab9c6669020" loc="148:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x2ab9c6669020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6669370"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c66694f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2ab9c6642d08" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2ab9c6642d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c66401f0"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c66408d0"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c6641ac0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c663f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x2ab9c664bb28" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x2ab9c664bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c664be78"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c664a030"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c664a1b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c664a340"/>
        <function-ref name="get" scoped="" ref="0x2ab9c664a4c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c664a650"/>
        <function-ref name="set" scoped="" ref="0x2ab9c664a7d8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c664a960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x2ab9c663d8a8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c663d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c663dbf8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c663dd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x2ab9c663c130" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ab9c663c130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c663c480"/>
        <function-ref name="write" scoped="" ref="0x2ab9c663c608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x2ab9c663b208" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c663b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c663b558"/>
        <function-ref name="write" scoped="" ref="0x2ab9c663b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ab9c66453a8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66453a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c66456f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c6645880"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c6645a08"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c6645b90"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c6645d18"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c6644020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x2ab9c664fe48" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x2ab9c664fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c664e1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x2ab9c664e348"/>
        <function-ref name="sfd" scoped="" ref="0x2ab9c664e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x2ab9c6647520" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ab9c6647520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6647870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x2ab9c664d6b8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x2ab9c664d6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2ab9c664da08"/>
        <function-ref name="isInput" scoped="" ref="0x2ab9c664db90"/>
        <function-ref name="toggle" scoped="" ref="0x2ab9c664dd18"/>
        <function-ref name="isOutput" scoped="" ref="0x2ab9c664c020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c664c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2ab9c664c330"/>
        <function-ref name="set" scoped="" ref="0x2ab9c664c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2ab9c664c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x2ab9c663ba70" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c663ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c663bdc0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c663a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c664f020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c664f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c664f370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ab9c6644350" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c6644350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c66446a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c6644828"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c66449b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c664e7a0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c664e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c664eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2ab9c6649900" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2ab9c6649900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6649c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c6649dd8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6648020"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c66481a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6648330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x2ab9c663c960" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ab9c663c960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c663ccb0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c663ce38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x2ab9c66486a0" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c66486a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c66489f0"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c6648b78"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6648d00"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c6647020"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c66471a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x2ab9c663a398" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ab9c663a398"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c663a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x2ab9c664d020" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x2ab9c664d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x2ab9c664d370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c663aba0" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c663aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c6639020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c66391a8"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c6639330"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c66394b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c6639640"/>
        <function-ref name="get" scoped="" ref="0x2ab9c66397c8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c6639950"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c6638020"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6639ad8"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c6639c60"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c6639de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x2ab9c663d020" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c663d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c663d370"/>
        <function-ref name="write" scoped="" ref="0x2ab9c663d4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x2ab9c663f8e0" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c663f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c663fc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x2ab9c664ad40" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x2ab9c664ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2ab9c66490d8"/>
        <function-ref name="disable" scoped="" ref="0x2ab9c6649260"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x2ab9c66493e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x2ab9c6649570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x2ab9c6647c10" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c6647c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c66450a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c664f660" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c664f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c664f9b0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c664fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ab9c66c06b0" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c66c06b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ab9c66c0a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ab9c66c44a8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66c44a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c66c47f8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c66c4980"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c66c4b08"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c66c4c90"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c66c4e18"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c66c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ab9c66bf130" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c66bf130"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c66be588"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c66bec68"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c66bfe80"/>
        <function-ref name="set" scoped="" ref="0x2ab9c66bd380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ab9c66c1d08" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66c1d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c66c00a0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c66c0228"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c66c03b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ab9c66b9ac8" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ab9c66b9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c66b9e18"/>
        <function-ref name="isSet" scoped="" ref="0x2ab9c66b7020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c66b71a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c66b7330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ab9c66bb020" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ab9c66bb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c66ba478"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c66bab58"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c66bbd70"/>
        <function-ref name="set" scoped="" ref="0x2ab9c66b9278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c66c13b8" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c66c13b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c66c1708"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c66c1890"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c66c1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2ab9c66b2630" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c66b2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ab9c66b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x2ab9c66b42e8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c66b42e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c66b4638"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c66b47c0"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c66b4948"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c66b4ad0"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c66b4c58"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c66b4de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ab9c66e6618" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c66e6618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c66e6968"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c66e6af0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c66e6c78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c66e6e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c66e5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x2ab9c66b1060" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x2ab9c66b1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c66b04b8"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c66b0b98"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c66b1db0"/>
        <function-ref name="set" scoped="" ref="0x2ab9c66ae2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x2ab9c66b3b60" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c66b3b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c66b2020"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c66b21a8"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c66b2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2ab9c66e7ac8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2ab9c66e7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c66e7e18"/>
        <function-ref name="isSet" scoped="" ref="0x2ab9c66e6020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c66e61a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c66e6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x2ab9c66e28b0" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x2ab9c66e28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c66e4490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2ab9c66e4b20" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2ab9c66e4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c66e3728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2ab9c66ad020" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2ab9c66ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2ab9c66ac478"/>
        <function-ref name="clear" scoped="" ref="0x2ab9c66acb58"/>
        <function-ref name="isValid" scoped="" ref="0x2ab9c66add70"/>
        <function-ref name="set" scoped="" ref="0x2ab9c66e7278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c66b3210" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c66b3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c66b3560"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c66b36e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c66b3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ab9c6711528" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ab9c6711528"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c67100f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ab9c6710720" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c6710720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6fd70"/>
            <typename><typedef-ref name="T32khz" ref="0x2ab9c5a6e178"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6744578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c6742020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c6744a00"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c67424a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ab9c673dd78" loc="46:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c673dd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6738088"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c673b6c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6739470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6739020"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6738928"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c67384d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c673bb18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c673c8f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6739a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c673cd90"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c673b278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ab9c6736020" loc="47:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ab9c6736020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6736ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c673d080" loc="45:/opt/tinyos-2.1.2/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c673d080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c673d3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2ab9c672d338" loc="29:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2ab9c672d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c672c0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c672c9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c672c548"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c672ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6734618" loc="27:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6734618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6734968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2ab9c6731020" loc="28:/opt/tinyos-2.1.2/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2ab9c6731020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c672e690"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c67306f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c672e088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6730b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c672eb18"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6731d70"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6730270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab9c67c2020" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c67c2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c67c0690"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c67c16f8"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c67c0088"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c67c1b80"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c67c0b18"/>
        <function-ref name="start" scoped="" ref="0x2ab9c67c2d70"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c67c1270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c67c37d8" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c67c37d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2ab9c59e9388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2ab9c59e9388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c67c3b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab9c67be128" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c67be128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c67bee78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c67bd7b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c67bd330"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c67bdc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2ab9c765e020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2ab9c765e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x2ab9c765e370"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2ab9c765e4f8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2ab9c765e680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2ab9c765e808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2ab9c765e990"/>
        <function-ref name="setControl" scoped="" ref="0x2ab9c765eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2ab9c75efda8" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c75efda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c7667470"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c7668510"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c7668e20"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c7668998"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c76678f8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c75eeb38"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c7668088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c75ef600" loc="25:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c75ef600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c75ef950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2ab9c7666020" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c7666020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c7666d70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c76656b8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c7665230"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c7665b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2ab9c76590a0" loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2ab9c76590a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x2ab9c76593f0"/>
        <function-ref name="compareBusy" scoped="" ref="0x2ab9c7659578"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x2ab9c7659700"/>
        <function-ref name="countBusy" scoped="" ref="0x2ab9c7659888"/>
        <function-ref name="getAssr" scoped="" ref="0x2ab9c7659a10"/>
        <function-ref name="setAssr" scoped="" ref="0x2ab9c7659b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2ab9c765d020" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2ab9c765d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2ab9c765b7a8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c765c560"/>
        <function-ref name="get" scoped="" ref="0x2ab9c765dba0"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c765c9e8"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c765bc30"/>
        <function-ref name="set" scoped="" ref="0x2ab9c765c088"/>
        <function-ref name="start" scoped="" ref="0x2ab9c765ce70"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c765b320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2ab9c7663168" loc="30:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c7663168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2ab9c7660270"/>
        <function-ref name="test" scoped="" ref="0x2ab9c7661930"/>
        <function-ref name="get" scoped="" ref="0x2ab9c7663ce8"/>
        <function-ref name="setScale" scoped="" ref="0x2ab9c76606f8"/>
        <function-ref name="getScale" scoped="" ref="0x2ab9c7660bd0"/>
        <function-ref name="reset" scoped="" ref="0x2ab9c7662b58"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c76626d0"/>
        <function-ref name="isOn" scoped="" ref="0x2ab9c7661db8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c76621f8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c7661020"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c76614a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2ab9c67cd5e8" loc="74:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2ab9c67cd5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c67cd938"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c67cdac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2ab9c67d1648" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2ab9c67d1648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c67cecc0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c67d0d50"/>
        <function-ref name="startAt" scoped="" ref="0x2ab9c67ce6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c67ce230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2ab9c67cd190"/>
        <function-ref name="start" scoped="" ref="0x2ab9c67d03f0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c67d08c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c67d6290" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c67d6290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c67d25f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c67d5ba8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c67d48c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c67d4470"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c67d1020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c67d2a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c67d4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c67d6dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c67d2020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c67d52b8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c67d5758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2ab9c6845618" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2ab9c6845618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6845968"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6845af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2ab9c68085a0" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2ab9c68085a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c68468f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6848020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6848d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c68488c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c68451c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6846d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6848470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6849118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6846320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c68495b8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6849a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c680e0c8" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c680e0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c680a610"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c680da48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c680b900"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c680b490"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6808020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c680aa80"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c680b020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c680ec30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c680a020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c680d118"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c680d5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2ab9c6843c38" loc="48:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2ab9c6843c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6841820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2ab9c6841e48" loc="49:/opt/tinyos-2.1.2/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2ab9c6841e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6840be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2ab9c683f548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2ab9c683f0c0"/>
        <function-ref name="overflow" scoped="" ref="0x2ab9c683f9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c683a420" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c683a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c68696c8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c686bdb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c686aad8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c686a688"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6867020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6869b18"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c686a238"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c686b020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c68690f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c686b4c0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c686b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2ab9c68317d8" loc="49:/opt/tinyos-2.1.2/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2ab9c68317d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c682da18"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c682e158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c682ee48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c682e9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c682c2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c682de68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c682e5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c682f370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c682d448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c682f810"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c682fcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x2ab9c6858a88" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x2ab9c6858a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6857020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68571a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x2ab9c6862100" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x2ab9c6862100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6862450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x2ab9c685ca88" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x2ab9c685ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c685cdd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c685b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x2ab9c6856470" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x2ab9c6856470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c68567c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6856948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x2ab9c6856c10" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x2ab9c6856c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6855020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x2ab9c684a470" loc="94:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x2ab9c684a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684a7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x2ab9c684d470" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x2ab9c684d470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684d7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x2ab9c68613a0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x2ab9c68613a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c68616f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x2ab9c684e470" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x2ab9c684e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684e7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x2ab9c685ba88" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x2ab9c685ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c685bdd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6859020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x2ab9c6859a88" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x2ab9c6859a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6859dd8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6858020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x2ab9c6852c10" loc="79:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x2ab9c6852c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6851020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68511a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x2ab9c6855470" loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x2ab9c6855470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c68557c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6855948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x2ab9c6864a18" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x2ab9c6864a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x2ab9c6864d68"/>
        <function-ref name="abortRelease" scoped="" ref="0x2ab9c6863020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x2ab9c68631a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x2ab9c685fc50" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x2ab9c685fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x2ab9c685e2e8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x2ab9c685e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685e738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x2ab9c685ea00" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x2ab9c685ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685ed50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x2ab9c684ec10" loc="89:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x2ab9c684ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684d020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x2ab9c685f020" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x2ab9c685f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685f370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x2ab9c68592e8" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x2ab9c68592e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6859638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68597c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x2ab9c685b2e8" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x2ab9c685b2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c685b638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c685b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x2ab9c6863a88" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x2ab9c6863a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6863dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x2ab9c684bc10" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x2ab9c684bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684a020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x2ab9c684dc10" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY1" scoped="" ref="0x2ab9c684dc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684b020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x2ab9c6851470" loc="80:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x2ab9c6851470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c68517c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6851948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x2ab9c684fc10" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x2ab9c684fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684e020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x2ab9c6854470" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x2ab9c6854470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c68547c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6854948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x2ab9c684ac10" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x2ab9c684ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c688d5e8"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c688d770"/>
        <function-ref name="write" scoped="" ref="0x2ab9c688d8f8"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c688da80"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c688dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x2ab9c6863470" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x2ab9c6863470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c68637c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x2ab9c685c2e8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x2ab9c685c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c685c638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c685c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x2ab9c68582e8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x2ab9c68582e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6858638"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68587c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x2ab9c6855c10" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x2ab9c6855c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6854020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x2ab9c6857470" loc="70:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x2ab9c6857470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c68577c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6857948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x2ab9c6862718" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x2ab9c6862718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6862a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x2ab9c6857c10" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x2ab9c6857c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6856020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68561a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c6865db8" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c6865db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c6864170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c68642f8"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6864480"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6864608"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6864790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x2ab9c685d060" loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x2ab9c685d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685d3b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x2ab9c685dc90" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x2ab9c685dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x2ab9c684f470" loc="86:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x2ab9c684f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684f7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684f948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x2ab9c6850c10" loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x2ab9c6850c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684f020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x2ab9c685f638" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x2ab9c685f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x2ab9c6850470" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x2ab9c6850470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c68507c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6850948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x2ab9c684b470" loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x2ab9c684b470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c684b7c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c684b948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x2ab9c6851c10" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x2ab9c6851c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6850020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x2ab9c6862d30" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x2ab9c6862d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c68610d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x2ab9c6852470" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x2ab9c6852470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c68527c0"/>
        <function-ref name="write" scoped="" ref="0x2ab9c6852948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x2ab9c68619b8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x2ab9c68619b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c6861d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x2ab9c6854c10" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x2ab9c6854c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x2ab9c6852020"/>
        <function-ref name="write" scoped="" ref="0x2ab9c68521a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x2ab9c685d678" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x2ab9c685d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x2ab9c685d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x2ab9c688c020" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x2ab9c688c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x2ab9c688c370"/>
        <function-ref name="writeDone" scoped="" ref="0x2ab9c688c4f8"/>
        <function-ref name="write" scoped="" ref="0x2ab9c688c680"/>
        <function-ref name="beginRead" scoped="" ref="0x2ab9c688c808"/>
        <function-ref name="readDone" scoped="" ref="0x2ab9c688c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ab9c68b0b98" loc="46:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c68b0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c68af020"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c68af1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ab9c68aeb10" loc="45:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ab9c68aeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c68b06f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c686cdb0" loc="44:/opt/tinyos-2.1.2/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c686cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c68b1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2ab9c68aaa08" loc="48:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c68aaa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c68aad58"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c68a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2ab9c68ab9f0" loc="47:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2ab9c68ab9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c68aa560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c68ab198" loc="46:/opt/tinyos-2.1.2/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c68ab198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c68ab4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ab9c68b2338" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ab9c68b2338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c68b2688"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c68b2810"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c68b2998"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c68b2b20"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c68b2ca8"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c68b2e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c6894a40" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c6894a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6894d90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6893020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c68931a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6893330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c68934b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6897d08" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6897d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c68940a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6894228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c68943b0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6894538"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c68946c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c68d4750" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c68d4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c68d4aa0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c68d4c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c68d4db0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c68d3020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c68d31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c68d5438" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c68d5438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c68d5788"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c68d5910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c68d5a98"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c68d5c20"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c68d5da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ab9c68d22a8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c68d22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c68d25f8"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c68d2780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c68d4080" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c68d4080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c68d43d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ab9c68d2a70" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c68d2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c68d2dc0"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c68d1020"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c68d11a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x2ab9c68d3428" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ab9c68d3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c68d3778"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c68d3900"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c68d3a88"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c68d3c10"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c68d3d98"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c68d2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ab9c68d6978" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ab9c68d6978"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c68d6cc8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c68d6e50"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c68c1020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c68c11a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c68c1330"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c68c14b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c68ba560" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c68ba560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c68ba8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c68bd750" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c68bd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c68bdaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ab9c68bde18" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ab9c68bde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c68ba1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c68b6d30" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c68b6d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c68b50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c68b6628" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c68b6628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c68b6978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c68b9958" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c68b9958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c68b9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ab9c68b53c8" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c68b53c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c68b5718"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c68b58a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c68b5a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x2ab9c68b6060" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x2ab9c68b6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c68b63b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c6915020" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6915020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6915370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c6915670" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c6915670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c69159c0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6915b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6915cd0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6915e58"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6914020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6919a40" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6919a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6919d90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6918020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c69181a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6918330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c69184b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ab9c6918db8" loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c6918db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6917170"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c69172f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6917480"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6917608"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6917790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6918748" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6918748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6918a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c68bbe20" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c68bbe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c69191a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c6919330"/>
        <function-ref name="request" scoped="" ref="0x2ab9c69194b8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6919640"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c69197c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ab9c6917ae8" loc="69:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c6917ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6917e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ab9c69161a8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2ab9c69161a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c69164f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6916680"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6916808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6916990"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6916b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c690b528" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c690b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c690b878"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c690ba00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c690bb88"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c690bd10"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c690a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c690a358" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c690a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c690a6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x2ab9c6923ac0" loc="180:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantTask" scoped="" ref="0x2ab9c6923ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6923e10"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6922020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ab9c690a970" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c690a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c690acc0"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c690ae48"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c6909020"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c69091a8"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c6909330"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c69094b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x2ab9c690d490" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveSend" scoped="" ref="0x2ab9c690d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c690d7e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c690d968"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c690daf0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c690dc78"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c690de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2ab9c69081c0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ab9c69081c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ab9c6908510"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ab9c6908698"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ab9c6908820"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab9c69089a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ab9c69097a8" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c69097a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6909af8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c6909c80"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c6909e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2ab9c690edc8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2ab9c690edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c690d170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2ab9c690f428" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2ab9c690f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c690f778"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c690f900"/>
        <function-ref name="request" scoped="" ref="0x2ab9c690fa88"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c690fc10"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c690fd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2ab9c690e118" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2ab9c690e118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c690e468"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c690e5f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c690e778"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c690e900"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c690ea88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x2ab9c690c188" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveReceive" scoped="" ref="0x2ab9c690c188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c690c4d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x2ab9c690c808" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x2ab9c690c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c690cb58"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c690cce0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c690ce68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c690b020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c690b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c694bc28" loc="44:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c694bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c694a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2ab9c694a2a8" loc="45:/opt/tinyos-2.1.2/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2ab9c694a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2ab9c694a5f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x2ab9c694a780"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2ab9c694a908"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab9c694aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2ab9c6940dc8" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2ab9c6940dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c6987170"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c69872f8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6987480"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6987608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c6986838" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c6986838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6986b88"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6986d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6985020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c69851a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6985330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c6985668" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6985668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c69859b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6941080" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6941080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c69413d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6941558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c69416e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6941868"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c69419f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ab9c6940318" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c6940318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ab9c6940668"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ab9c69407f0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ab9c6940978"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ab9c6940b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x2ab9c6987928" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x2ab9c6987928"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c6987c78"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c6987e00"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c6986020"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c69861a8"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c6986330"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c69864b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2ab9c6985d28" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2ab9c6985d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c69840a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c6984228"/>
        <function-ref name="start" scoped="" ref="0x2ab9c69843b0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6984538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6941c80" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6941c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6940020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2ab9c6981170" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2ab9c6981170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2ab9c69814c0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2ab9c6981648"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2ab9c69817d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2ab9c6981958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x2ab9c6983d50" loc="67:/opt/tinyos-2.1.2/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x2ab9c6983d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x2ab9c69790d8"/>
        <function-ref name="toIdle" scoped="" ref="0x2ab9c6979260"/>
        <function-ref name="isState" scoped="" ref="0x2ab9c69793e8"/>
        <function-ref name="isIdle" scoped="" ref="0x2ab9c6979570"/>
        <function-ref name="requestState" scoped="" ref="0x2ab9c69796f8"/>
        <function-ref name="forceState" scoped="" ref="0x2ab9c6979880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c6973020" loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c6973020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6973370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c69734f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6973680"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6973808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6973990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c69775c8" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c69775c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6977918"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6977aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6977c28"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6977db0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6974020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ab9c69742d0" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ab9c69742d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ab9c6974620"/>
        <function-ref name="setRetries" scoped="" ref="0x2ab9c69747a8"/>
        <function-ref name="getRetries" scoped="" ref="0x2ab9c6974930"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ab9c6974ab8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ab9c6974c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ab9c696f3c8" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c696f3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c696f718"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c696f8a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c696fa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2ab9c6972540" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2ab9c6972540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2ab9c6972890"/>
        <function-ref name="setRetries" scoped="" ref="0x2ab9c6972a18"/>
        <function-ref name="getRetries" scoped="" ref="0x2ab9c6972ba0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2ab9c6972d28"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2ab9c696f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c6998cc8" loc="59:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6998cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c69970a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c6998020" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c6998020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6998370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c69984f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6998680"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6998808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6998990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x2ab9c6996ab0" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x2ab9c6996ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x2ab9c6996e00"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x2ab9c6995020"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x2ab9c69951a8"/>
        <function-ref name="syncDone" scoped="" ref="0x2ab9c6995330"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x2ab9c69954b8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x2ab9c6995640"/>
        <function-ref name="setChannel" scoped="" ref="0x2ab9c69957c8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x2ab9c6995950"/>
        <function-ref name="setPanAddr" scoped="" ref="0x2ab9c6995ad8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x2ab9c6995c60"/>
        <function-ref name="getExtAddr" scoped="" ref="0x2ab9c6995de8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x2ab9c6994020"/>
        <function-ref name="sync" scoped="" ref="0x2ab9c69941a8"/>
        <function-ref name="getChannel" scoped="" ref="0x2ab9c6994430"/>
        <function-ref name="getPanAddr" scoped="" ref="0x2ab9c69945b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x2ab9c699a020" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x2ab9c699a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c699a370"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c699a4f8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c699a680"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c699a808"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c699a990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c699ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2ab9c699b400" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2ab9c699b400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2ab9c699b750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x2ab9c69936a0" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x2ab9c69936a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x2ab9c69939f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x2ab9c6993b78"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x2ab9c6993d00"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x2ab9c6992020"/>
        <function-ref name="setCca" scoped="" ref="0x2ab9c69921a8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x2ab9c6992330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c699c2a8" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c699c2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c699c5f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c699c780"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c699c908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c699ca90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c699cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c69a1980" loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c69a1980"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c69a1cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c69a1e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c69a0020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c69a01a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c69a0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ab9c699e628" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ab9c699e628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c699e978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x2ab9c6997368" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x2ab9c6997368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x2ab9c69976b8"/>
        <function-ref name="setNetwork" scoped="" ref="0x2ab9c6997840"/>
        <function-ref name="getRssi" scoped="" ref="0x2ab9c69979c8"/>
        <function-ref name="getNetwork" scoped="" ref="0x2ab9c6997b50"/>
        <function-ref name="getPower" scoped="" ref="0x2ab9c6997cd8"/>
        <function-ref name="getLqi" scoped="" ref="0x2ab9c6997e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2ab9c69948d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2ab9c69948d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2ab9c6994d20"/>
        <function-ref name="changed" scoped="" ref="0x2ab9c6993020"/>
        <function-ref name="amGroup" scoped="" ref="0x2ab9c69931a8"/>
        <function-ref name="setAddress" scoped="" ref="0x2ab9c6993330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x2ab9c6996188" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x2ab9c6996188"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c69964d8"/>
        <function-ref name="getHeader" scoped="" ref="0x2ab9c6996660"/>
        <function-ref name="getMetadata" scoped="" ref="0x2ab9c69967e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c69a0ab0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c69a0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c69a0e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c69912a8" loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c69912a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c69915f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c6991780"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c6991908"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c6991a90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c6991c18"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6991da0"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c6990020"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c6990640"/>
        <function-ref name="set" scoped="" ref="0x2ab9c69901a8"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c6990330"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c69904b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c699ec18" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c699ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c699d020"/>
        <function-ref name="source" scoped="" ref="0x2ab9c699d1a8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c699d330"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c699d4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c699d640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c699d7c8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c699d950"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c699dad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c699dc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c699dde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c699c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x2ab9c6992698" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioResource" scoped="" ref="0x2ab9c6992698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2ab9c69929e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2ab9c6992b70"/>
        <function-ref name="request" scoped="" ref="0x2ab9c6992cf8"/>
        <function-ref name="granted" scoped="" ref="0x2ab9c6992e80"/>
        <function-ref name="isOwner" scoped="" ref="0x2ab9c6991030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c7100020" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="ModuleTestAppC.Sender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c7100020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c7100370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c71004f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c7100680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7100808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c7100990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6a30438" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="ModuleTestAppC.Sender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6a30438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6a30788"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6a30910"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6a30a98"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6a30c20"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6a30da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c76b5080" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="ModuleTestAppC.Sender.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c76b5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c76b53d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c76b5558"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c76b56e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c76b5868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c76b59f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c76b6498" loc="37:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="ModuleTestAppC.Sender.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c76b6498"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c76b67e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c76b6970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c76b6af8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c76b6c80"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c76b6e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2ab9c6a52a48" loc="59:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2ab9c6a52a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2ab9c6a52d98"/>
        <function-ref name="setRoot" scoped="" ref="0x2ab9c6a55020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2ab9c6a551a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2ab9c6a63bd8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2ab9c6a63bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c6a1c020"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c6a1c1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6a1c330"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c6a1c4b8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c6a1c640"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c6a1c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x2ab9c6a48640" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6a48640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x2ab9c6a48990"/>
        <function-ref name="logEventMsg" scoped="" ref="0x2ab9c6a48b18"/>
        <function-ref name="logEventSimple" scoped="" ref="0x2ab9c6a48ca0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x2ab9c6a48e28"/>
        <function-ref name="logEventDbg" scoped="" ref="0x2ab9c6a50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2ab9c6a21020" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2ab9c6a21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2ab9c6a21370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6a215f8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6a215f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6a21948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6a21ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6a21c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6a21de0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6a1e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ab9c6a22020" loc="50:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ab9c6a22020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6a22370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6a251c8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6a251c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6a25518"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6a256a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6a25828"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6a259b0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6a25b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x2ab9c6a56568" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6a56568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x2ab9c6a568b8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x2ab9c6a56a40"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c6a56bc8"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x2ab9c6a56d50"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6a60020"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x2ab9c6a601a8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x2ab9c6a60330"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c6a604b8"/>
        <function-ref name="parentChanged" scoped="" ref="0x2ab9c6a60640"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c6a607c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x2ab9c6a60950"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x2ab9c6a60ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MatrixUnicastNameFreeRouting" ref="0x2ab9c6a55510" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6a55510"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x2ab9c6a55860"/>
        <function-ref name="directionToSend" scoped="" ref="0x2ab9c6a559e8"/>
        <function-ref name="nextHop" scoped="" ref="0x2ab9c6a55b70"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c6a55cf8"/>
        <function-ref name="nextHopTemporary" scoped="" ref="0x2ab9c6a55e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6a24398" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6a24398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6a246e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x2ab9c6a522b8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6a522b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x2ab9c6a52608"/>
        <function-ref name="setClientCongested" scoped="" ref="0x2ab9c6a52790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x2ab9c6a1ca70" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6a1ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c6a1cdc0"/>
        <function-ref name="option" scoped="" ref="0x2ab9c6a1b020"/>
        <function-ref name="setIpOrigin" scoped="" ref="0x2ab9c6a1b1a8"/>
        <function-ref name="setEtx" scoped="" ref="0x2ab9c6a1b330"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c6a1b4b8"/>
        <function-ref name="clearOption" scoped="" ref="0x2ab9c6a1b640"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6a1b7c8"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c6a1b950"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6a1bad8"/>
        <function-ref name="setOption" scoped="" ref="0x2ab9c6a1bc60"/>
        <function-ref name="getIpOrigin" scoped="" ref="0x2ab9c6a1bde8"/>
        <function-ref name="getIp" scoped="" ref="0x2ab9c6a62020"/>
        <function-ref name="getThl" scoped="" ref="0x2ab9c6a621a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c6a62430"/>
        <function-ref name="matchInstance" scoped="" ref="0x2ab9c6a625b8"/>
        <function-ref name="matchPacket" scoped="" ref="0x2ab9c6a62740"/>
        <function-ref name="setIp" scoped="" ref="0x2ab9c6a628c8"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c6a62a50"/>
        <function-ref name="setThl" scoped="" ref="0x2ab9c6a62bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6a28530" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a28530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c6a28880"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6a28a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x2ab9c6a51410" loc="65:/opt/tinyos-2.1.2/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6a51410"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x2ab9c6a51860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2ab9c6a87c08" loc="92:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2ab9c6a87c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2ab9c6a86020"/>
        <function-ref name="setRoot" scoped="" ref="0x2ab9c6a861a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2ab9c6a86330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2ab9c6a41498" loc="86:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2ab9c6a41498"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c6a417e8"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c6a41970"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6a41af8"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c6a41c80"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c6a41e08"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c6a8c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x2ab9c6a7f2b8" loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6a7f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x2ab9c6a7f608"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x2ab9c6a7f790"/>
        <function-ref name="txNoAck" scoped="" ref="0x2ab9c6a7f918"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x2ab9c6a7faa0"/>
        <function-ref name="evicted" scoped="" ref="0x2ab9c6a7fc28"/>
        <function-ref name="clearDLQ" scoped="" ref="0x2ab9c6a7fdb0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x2ab9c6a87020"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2ab9c6a871a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x2ab9c6a7c020" loc="100:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6a7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x2ab9c6a7c370"/>
        <function-ref name="logEventMsg" scoped="" ref="0x2ab9c6a7c4f8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x2ab9c6a7c680"/>
        <function-ref name="logEventRoute" scoped="" ref="0x2ab9c6a7c808"/>
        <function-ref name="logEventDbg" scoped="" ref="0x2ab9c6a7c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2ab9c6a421c8" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2ab9c6a421c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2ab9c6a42518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6a427a0" loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6a427a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6a42af0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6a42c78"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6a42e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6a41020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6a411a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ab9c6a43668" loc="82:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ab9c6a43668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6a439b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6a46938" loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6a46938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6a46c88"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6a46e10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6a45020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6a451a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6a45330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MatrixInfo" ref="0x2ab9c6a79528" loc="95:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixInfo" scoped="" ref="0x2ab9c6a79528"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="numNeighborsTemporary" scoped="" ref="0x2ab9c6a79878"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c6a79a00"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c6a79b88"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c6a79d10"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c6a7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x2ab9c6a8a748" loc="89:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6a8a748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x2ab9c6a8aa98"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x2ab9c6a8ac20"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c6a8ada8"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x2ab9c6a89020"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6a891a8"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x2ab9c6a89330"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x2ab9c6a894b8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c6a89640"/>
        <function-ref name="parentChanged" scoped="" ref="0x2ab9c6a897c8"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c6a89950"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x2ab9c6a89ad8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x2ab9c6a89c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MatrixUnicastNameFreeRouting" ref="0x2ab9c6a86698" loc="94:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6a86698"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x2ab9c6a86ae8"/>
        <function-ref name="directionToSend" scoped="" ref="0x2ab9c6a86c70"/>
        <function-ref name="nextHop" scoped="" ref="0x2ab9c6a86df8"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c6a7e020"/>
        <function-ref name="nextHopTemporary" scoped="" ref="0x2ab9c6a7e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6a45b00" loc="81:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6a45b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6a45e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x2ab9c6a87478" loc="91:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6a87478"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x2ab9c6a877c8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x2ab9c6a87950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x2ab9c6a8c2c8" loc="87:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6a8c2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c6a8c618"/>
        <function-ref name="option" scoped="" ref="0x2ab9c6a8c7a0"/>
        <function-ref name="setIpOrigin" scoped="" ref="0x2ab9c6a8c928"/>
        <function-ref name="setEtx" scoped="" ref="0x2ab9c6a8cab0"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c6a8cc38"/>
        <function-ref name="clearOption" scoped="" ref="0x2ab9c6a8cdc0"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6a8b020"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c6a8b1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6a8b330"/>
        <function-ref name="setOption" scoped="" ref="0x2ab9c6a8b4b8"/>
        <function-ref name="getIpOrigin" scoped="" ref="0x2ab9c6a8b640"/>
        <function-ref name="getIp" scoped="" ref="0x2ab9c6a8b7c8"/>
        <function-ref name="getThl" scoped="" ref="0x2ab9c6a8b950"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c6a8bbd8"/>
        <function-ref name="matchInstance" scoped="" ref="0x2ab9c6a8bd60"/>
        <function-ref name="matchPacket" scoped="" ref="0x2ab9c6a8a020"/>
        <function-ref name="setIp" scoped="" ref="0x2ab9c6a8a1a8"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c6a8a330"/>
        <function-ref name="setThl" scoped="" ref="0x2ab9c6a8a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6a50c08" loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6a50c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c6a46020"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6a461a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x2ab9c6a7d880" loc="99:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6a7d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x2ab9c6a7dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c6c33940" loc="142:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6c33940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6c33c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2ab9c6c31d20" loc="145:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2ab9c6c31d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2ab9c6c300a0"/>
        <function-ref name="setRoot" scoped="" ref="0x2ab9c6c30228"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2ab9c6c303b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2ab9c6bf87e0" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2ab9c6bf87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6bf8b30"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6bf8cb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6bf8e40"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6bf7020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6bf71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x2ab9c6c2b3f0" loc="156:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6c2b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x2ab9c6c2b740"/>
        <function-ref name="logEventMsg" scoped="" ref="0x2ab9c6c2b8c8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x2ab9c6c2ba50"/>
        <function-ref name="logEventRoute" scoped="" ref="0x2ab9c6c2bbd8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x2ab9c6c2bd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x2ab9c6bfde20" loc="116:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x2ab9c6bfde20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c6bfc1a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c6bfc330"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6bfc4b8"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c6bfc640"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c6bfc7c8"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c6bfc950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x2ab9c6bf1020" loc="129:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6bf1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x2ab9c6bf1370"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x2ab9c6bf14f8"/>
        <function-ref name="txNoAck" scoped="" ref="0x2ab9c6bf1680"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x2ab9c6bf1808"/>
        <function-ref name="evicted" scoped="" ref="0x2ab9c6bf1990"/>
        <function-ref name="clearDLQ" scoped="" ref="0x2ab9c6bf1b18"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x2ab9c6bf1ca0"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2ab9c6bf1e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x2ab9c6c35020" loc="140:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x2ab9c6c35020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
              <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2ab9c6c35b68"/>
        <function-ref name="flush" scoped="" ref="0x2ab9c6c33528"/>
        <function-ref name="lookup" scoped="" ref="0x2ab9c6c33088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x2ab9c6bfeb58" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x2ab9c6bfeb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x2ab9c6bfd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6bfd268" loc="115:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6bfd268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6bfd5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6bfd740"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6bfd8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6bfda50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6bfdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2ab9c6bfe480" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2ab9c6bfe480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6bfe7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBroadCastTask" ref="0x2ab9c6c28470" loc="701:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBroadCastTask" scoped="" ref="0x2ab9c6c28470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6c287c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6c28948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ab9c6c2cb98" loc="149:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c6c2cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c6c2b020"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c6c2b1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6bff020" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6bff020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6bff390"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6bff518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6bff6a0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6bff828"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6bff9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x2ab9c6bf7de0" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x2ab9c6bf7de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6bf2238"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6bf5910"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6bf4648"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6bf41f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6bf2ad8"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6bf2688"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6bf5d60"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6bf6ae0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6bf4c18"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6bf5020"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6bf54c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2ab9c6c2a020" loc="162:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2ab9c6c2a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c6c2a370"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c6c2a4f8"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6c2a680"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6c2a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MatrixInfo" ref="0x2ab9c6c29700" loc="166:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixInfo" scoped="" ref="0x2ab9c6c29700"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="numNeighborsTemporary" scoped="" ref="0x2ab9c6c29a50"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c6c29bd8"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c6c29d60"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c6c28020"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c6c281a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x2ab9c6c41a08" loc="137:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x2ab9c6c41a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2ab9c6a6e498"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x2ab9c6a6e950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2ab9c6c3e2d8"/>
        <function-ref name="enqueue" scoped="" ref="0x2ab9c6c3d020"/>
        <function-ref name="element" scoped="" ref="0x2ab9c6c3d650"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c6c40e18"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab9c6c3e938"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c6c40578"/>
        <function-ref name="size" scoped="" ref="0x2ab9c6c409c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x2ab9c6c325b8" loc="144:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6c325b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x2ab9c6c32908"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x2ab9c6c32a90"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c6c32c18"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x2ab9c6c32da0"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6c31020"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x2ab9c6c311a8"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x2ab9c6c31330"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c6c314b8"/>
        <function-ref name="parentChanged" scoped="" ref="0x2ab9c6c31640"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c6c317c8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x2ab9c6c31950"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x2ab9c6c31ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MatrixUnicastNameFreeRouting" ref="0x2ab9c6c2aa50" loc="165:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c6c2aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x2ab9c6c2ada0"/>
        <function-ref name="directionToSend" scoped="" ref="0x2ab9c6c29020"/>
        <function-ref name="nextHop" scoped="" ref="0x2ab9c6c291a8"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c6c29330"/>
        <function-ref name="nextHopTemporary" scoped="" ref="0x2ab9c6c294b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ab9c6bf0b50" loc="131:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ab9c6bf0b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6c41020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6c411a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6c41330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6c414b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6c41640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2ab9c6c28c10" loc="247:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2ab9c6c28c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6c27020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6c271a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6c00160" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6c00160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6c004b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6bffd18" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6bffd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6bfe0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x2ab9c6bf8020" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6bf8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x2ab9c6bf8370"/>
        <function-ref name="setClientCongested" scoped="" ref="0x2ab9c6bf84f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x2ab9c6bf00e0" loc="130:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x2ab9c6bf00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x2ab9c6bf0430"/>
        <function-ref name="routeFound" scoped="" ref="0x2ab9c6bf05b8"/>
        <function-ref name="nextHop" scoped="" ref="0x2ab9c6bf0740"/>
        <function-ref name="noRoute" scoped="" ref="0x2ab9c6bf08c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c6c2d578" loc="148:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c6c2d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c6c2d8c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c6c2da50"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c6c2dbd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c6c2dd60"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c6c2c020"/>
        <function-ref name="get" scoped="" ref="0x2ab9c6c2c1a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c6c2c330"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c6c2c950"/>
        <function-ref name="set" scoped="" ref="0x2ab9c6c2c640"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c6c2c4b8"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c6c2c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ab9c6bf73f0" loc="127:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c6bf73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c6bf7740"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c6bf78c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c6bf7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x2ab9c6bfcb98" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c6bfcb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c6bfa020"/>
        <function-ref name="option" scoped="" ref="0x2ab9c6bfa1a8"/>
        <function-ref name="setIpOrigin" scoped="" ref="0x2ab9c6bfa330"/>
        <function-ref name="setEtx" scoped="" ref="0x2ab9c6bfa4b8"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c6bfa640"/>
        <function-ref name="clearOption" scoped="" ref="0x2ab9c6bfa7c8"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6bfa950"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c6bfaad8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6bfac60"/>
        <function-ref name="setOption" scoped="" ref="0x2ab9c6bfade8"/>
        <function-ref name="getIpOrigin" scoped="" ref="0x2ab9c6bf9020"/>
        <function-ref name="getIp" scoped="" ref="0x2ab9c6bf91a8"/>
        <function-ref name="getThl" scoped="" ref="0x2ab9c6bf9330"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c6bf95b8"/>
        <function-ref name="matchInstance" scoped="" ref="0x2ab9c6bf9740"/>
        <function-ref name="matchPacket" scoped="" ref="0x2ab9c6bf98c8"/>
        <function-ref name="setIp" scoped="" ref="0x2ab9c6bf9a50"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c6bf9bd8"/>
        <function-ref name="setThl" scoped="" ref="0x2ab9c6bf9d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x2ab9c6c3ddd0" loc="138:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x2ab9c6c3ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2ab9c6a6e498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x2ab9c6a6e950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6c3add0"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c6c3a2d8"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c6c3b9e0"/>
        <function-ref name="put" scoped="" ref="0x2ab9c6c3a728"/>
        <function-ref name="size" scoped="" ref="0x2ab9c6c3be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c6c2f020" loc="147:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6c2f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6c2f370"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6c2f4f8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6c2f680"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6c2f808"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6c2f990"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6c2fb18"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6c2fca0"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6c2fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6c2d020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6c2d1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6c2d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6c006f8" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6c006f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c6c00a48"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6c00bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x2ab9c6c32020" loc="143:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x2ab9c6c32020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6c32370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x2ab9c6c39630" loc="139:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x2ab9c6c39630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
            <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6c366c8"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c6c37a88"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c6c371e8"/>
        <function-ref name="put" scoped="" ref="0x2ab9c6c36020"/>
        <function-ref name="size" scoped="" ref="0x2ab9c6c37638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x2ab9c6c30718" loc="146:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x2ab9c6c30718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x2ab9c6c30c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2ab9c6c1db58" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2ab9c6c1db58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
            <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6c4bb18"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c6c4b020"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c6c4c6f0"/>
        <function-ref name="put" scoped="" ref="0x2ab9c6c4b470"/>
        <function-ref name="size" scoped="" ref="0x2ab9c6c4cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2ab9c77fd020" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2ab9c77fd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
            <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c77fa020"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c77fc470"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c77fdb68"/>
        <function-ref name="put" scoped="" ref="0x2ab9c77fc8c0"/>
        <function-ref name="size" scoped="" ref="0x2ab9c77fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c77fe8a8" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c77fe8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c77febf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2ab9c6c48c28" loc="42:/opt/tinyos-2.1.2/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2ab9c6c48c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2ab9c6a6e498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x2ab9c6a6e950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c6c45bb8"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c6c450c0"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c6c477e8"/>
        <function-ref name="put" scoped="" ref="0x2ab9c6c45510"/>
        <function-ref name="size" scoped="" ref="0x2ab9c6c47c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x2ab9c77eb370" loc="56:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x2ab9c77eb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2ab9c6a6e498"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x2ab9c6a6e950"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2ab9c77e83e8"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c77ea8c0"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c77ea020"/>
        <function-ref name="put" scoped="" ref="0x2ab9c77ead10"/>
        <function-ref name="size" scoped="" ref="0x2ab9c77ea470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c77ecc68" loc="55:/opt/tinyos-2.1.2/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c77ecc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c77eb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x2ab9c6c95478" loc="43:/opt/tinyos-2.1.2/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2ab9c6c95478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x2ab9c6a6e498"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x2ab9c6a6e950"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x2ab9c6c7cd10"/>
        <function-ref name="enqueue" scoped="" ref="0x2ab9c6c7aa30"/>
        <function-ref name="element" scoped="" ref="0x2ab9c6c79088"/>
        <function-ref name="maxSize" scoped="" ref="0x2ab9c6c7c8c0"/>
        <function-ref name="dequeue" scoped="" ref="0x2ab9c6c7a3d0"/>
        <function-ref name="empty" scoped="" ref="0x2ab9c6c7c020"/>
        <function-ref name="size" scoped="" ref="0x2ab9c6c7c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x2ab9c6c9cdb0" loc="39:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x2ab9c6c9cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
              <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2ab9c6c9b930"/>
        <function-ref name="flush" scoped="" ref="0x2ab9c6c9a2b8"/>
        <function-ref name="lookup" scoped="" ref="0x2ab9c6c9bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x2ab9c7850020" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x2ab9c7850020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
              <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x2ab9c7850b68"/>
        <function-ref name="flush" scoped="" ref="0x2ab9c784f528"/>
        <function-ref name="lookup" scoped="" ref="0x2ab9c784f088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c78528f8" loc="45:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c78528f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c7852c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x2ab9c784f960" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x2ab9c784f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2ab9c784fcb0"/>
        <function-ref name="option" scoped="" ref="0x2ab9c784fe38"/>
        <function-ref name="setIpOrigin" scoped="" ref="0x2ab9c784e020"/>
        <function-ref name="setEtx" scoped="" ref="0x2ab9c784e1a8"/>
        <function-ref name="setOrigin" scoped="" ref="0x2ab9c784e330"/>
        <function-ref name="clearOption" scoped="" ref="0x2ab9c784e4b8"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c784e640"/>
        <function-ref name="getOrigin" scoped="" ref="0x2ab9c784e7c8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c784e950"/>
        <function-ref name="setOption" scoped="" ref="0x2ab9c784ead8"/>
        <function-ref name="getIpOrigin" scoped="" ref="0x2ab9c784ec60"/>
        <function-ref name="getIp" scoped="" ref="0x2ab9c784ede8"/>
        <function-ref name="getThl" scoped="" ref="0x2ab9c784d020"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2ab9c784d2a8"/>
        <function-ref name="matchInstance" scoped="" ref="0x2ab9c784d430"/>
        <function-ref name="matchPacket" scoped="" ref="0x2ab9c784d5b8"/>
        <function-ref name="setIp" scoped="" ref="0x2ab9c784d740"/>
        <function-ref name="getType" scoped="" ref="0x2ab9c784d8c8"/>
        <function-ref name="setThl" scoped="" ref="0x2ab9c784da50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6c99c60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6c99c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6ceae78"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6c965a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6cea2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6c96e48"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6ce9748"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6ce92f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6c969f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6c977e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6cea8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6c97c88"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6c96158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6ce6128" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6ce6128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6ce35f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6ce5a48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6ce48c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6ce4470"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6ce1020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6ce3a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6ce4020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6ce6c70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6ce3020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6ce5158"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6ce55f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2ab9c6ccd668" loc="57:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2ab9c6ccd668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6ccd9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x2ab9c6cd6be0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6cd6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x2ab9c6cd5020"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x2ab9c6cd51a8"/>
        <function-ref name="txNoAck" scoped="" ref="0x2ab9c6cd5330"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x2ab9c6cd54b8"/>
        <function-ref name="evicted" scoped="" ref="0x2ab9c6cd5640"/>
        <function-ref name="clearDLQ" scoped="" ref="0x2ab9c6cd57c8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x2ab9c6cd5950"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2ab9c6cd5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6cd4360" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6cd4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6cd46b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6cd4838"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6cd49c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6cd4b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6cd4cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ab9c6cd2678" loc="54:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c6cd2678"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6cd29c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6cd2b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6cd2cd8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6cd2e60"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6cd1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6cd7978" loc="45:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6cd7978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6cd7cc8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6cd7e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6cd6020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6cd61a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6cd6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ab9c6ccc328" loc="59:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c6ccc328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c6ccc778"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c6ccc900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2ab9c6cce968" loc="56:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2ab9c6cce968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6ccecb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6ccee40"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6ccd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6ccd1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6ccd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6cd5d50" loc="48:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6cd5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6cd40d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x2ab9c6cd1370" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x2ab9c6cd1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6cd16c0"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6cd1848"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6cd19d0"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6cd1b58"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6cd1ce0"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6cd1e68"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6cce020"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6cce1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6cce330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6cce4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6cce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6cd65c0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6cd65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6cd6910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x2ab9c6cd2020" loc="50:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x2ab9c6cd2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x2ab9c6cd2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6cd71a8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6cd71a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c6cd74f8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6cd7680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x2ab9c6ccdcb8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2ab9c6ccdcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2ab9c6ccc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c6e01080" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c6e01080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6e013d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6e01558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6e016e0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6e01868"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6e019f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6e01c38" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6e01c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6e00020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6e001a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6e00330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6e004b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6e00640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6e00888" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6e00888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6e00bd8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6e00d60"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6dff020"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6dff1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6dff330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6dff4b8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6dff640"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6dff7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6dff950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6dffad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6dffc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c6dfe020" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c6dfe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c6dfe370"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c6dfe4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c6dfe680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c78a70e0" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c78a70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c78a7430"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c78a75b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c78a7740"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c78a78c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c78a7a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c78a7c98" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c78a7c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c78a6020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c78a61a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c78a6330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c78a64b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c78a6640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c78a6888" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c78a6888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c78a6bd8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c78a6d60"/>
        <function-ref name="address" scoped="" ref="0x2ab9c78a5020"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c78a51a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c78a5330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c78a54b8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c78a5640"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c78a57c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c78a5950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c78a5ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c78a5c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c78a4020" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c78a4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c78a4370"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c78a44f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c78a4680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c789b120" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c789b120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c789b470"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c789b5f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c789b780"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c789b908"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c789ba90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ab9c789bd38" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c789bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c789a0d8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c789a260"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c789a3e8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c789a570"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c789a6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c789a940" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c789a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c789ac90"/>
        <function-ref name="source" scoped="" ref="0x2ab9c789ae18"/>
        <function-ref name="address" scoped="" ref="0x2ab9c7899020"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c78991a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c7899330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c78994b8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c7899640"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c78997c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c7899950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c7899ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c7899c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6daa9a8" loc="43:/opt/tinyos-2.1.2/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6daa9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6daacf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6daae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6da7030"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6da71b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6da7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2ab9c6e15a08" loc="48:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c6e15a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6e15d78"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6e14020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6e141a8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6e14330"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6e144b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2ab9c6e16b98" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c6e16b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6e15020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6e151a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6e15330"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6e154b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6e15640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2ab9c6e13d20" loc="50:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6e13d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6e120a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6e12228"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6e123b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6e12538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6e126c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2ab9c6e12988" loc="169:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2ab9c6e12988"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6e12cd8"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6e12e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2ab9c6e11160" loc="126:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2ab9c6e11160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6e114b0"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6e11638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c6e14700" loc="49:/opt/tinyos-2.1.2/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6e14700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6e14a50"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6e14bd8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6e14d60"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6e13020"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6e131a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6e13330"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6e134b8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6e13640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6e137c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6e13950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6e13ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6df6760" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6df6760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6df6ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6df6c38"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6df6dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6df4020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6df41a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6df61c8" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6df61c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6df6518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6df43f0" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6df43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6df4740"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6df48c8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6df4a50"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6df4bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6df4d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6e4d020"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6e4d1a8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6e4d330"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6e4d4b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6e4d640"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6e4d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6e45760" loc="47:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6e45760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6e45ab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6e45c38"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6e45dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6e44020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6e441a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6e451c8" loc="46:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6e451c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6e45518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6e443f0" loc="48:/opt/tinyos-2.1.2/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6e443f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6e44740"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6e448c8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6e44a50"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6e44bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6e44d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6e43020"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6e431a8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6e43330"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6e434b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6e43640"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6e437c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x2ab9c6f19700" loc="110:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2ab9c6f19700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2ab9c6f19a50"/>
        <function-ref name="setRoot" scoped="" ref="0x2ab9c6f19bd8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2ab9c6f19d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x2ab9c6f615c0" loc="271:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x2ab9c6f615c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6f61910"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6f61a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x2ab9c6f64470" loc="125:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x2ab9c6f64470"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x2ab9c6f647c0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x2ab9c6f64948"/>
        <function-ref name="logEventSimple" scoped="" ref="0x2ab9c6f64ad0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x2ab9c6f64c58"/>
        <function-ref name="logEventDbg" scoped="" ref="0x2ab9c6f64de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x2ab9c6f13840" loc="119:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x2ab9c6f13840"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x2ab9c6f13b90"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x2ab9c6f13d18"/>
        <function-ref name="txNoAck" scoped="" ref="0x2ab9c6f12020"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x2ab9c6f121a8"/>
        <function-ref name="evicted" scoped="" ref="0x2ab9c6f12330"/>
        <function-ref name="clearDLQ" scoped="" ref="0x2ab9c6f124b8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x2ab9c6f12640"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x2ab9c6f127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x2ab9c6f17e20" loc="113:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x2ab9c6f17e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x2ab9c6f161a8"/>
        <function-ref name="setEtx" scoped="" ref="0x2ab9c6f16330"/>
        <function-ref name="clearOption" scoped="" ref="0x2ab9c6f164b8"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6f16640"/>
        <function-ref name="setOption" scoped="" ref="0x2ab9c6f167c8"/>
        <function-ref name="setParent" scoped="" ref="0x2ab9c6f16950"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c6f16ad8"/>
        <function-ref name="getOption" scoped="" ref="0x2ab9c6f16c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2ab9c6f100a0" loc="121:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2ab9c6f100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c6f103f0"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c6f10578"/>
        <function-ref name="start" scoped="" ref="0x2ab9c6f10700"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f10888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ab9c6f65d00" loc="124:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c6f65d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c6f640a0"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c6f64228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x2ab9c6f18020" loc="111:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c6f18020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x2ab9c6f18370"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x2ab9c6f184f8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c6f18680"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x2ab9c6f18808"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c6f18990"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x2ab9c6f18b18"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x2ab9c6f18ca0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c6f18e28"/>
        <function-ref name="parentChanged" scoped="" ref="0x2ab9c6f17020"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c6f171a8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x2ab9c6f17330"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x2ab9c6f174b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x2ab9c6f63d98" loc="393:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x2ab9c6f63d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c6f61170"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c6f612f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c6f15020" loc="114:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c6f15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c6f15370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x2ab9c6f15658" loc="117:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2ab9c6f15658"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6f159a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f15b30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f15cb8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6f15e40"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6f13020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x2ab9c6f10c18" loc="122:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x2ab9c6f10c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f0ce78"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f0e5a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f0c2d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f0ee48"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f0b748"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f0b2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f0e9f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f0f7e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f0c8a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f0fc88"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f0e158"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x2ab9c6f0bc68" loc="123:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x2ab9c6f0bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f65088"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f096c8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f07470"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f07020"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f65928"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f654d8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f09b18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f0a8f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f07a40"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f0ad90"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f09278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x2ab9c6f63060" loc="126:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x2ab9c6f63060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x2ab9c6f633b0"/>
        <function-ref name="setClientCongested" scoped="" ref="0x2ab9c6f63538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x2ab9c6f63780" loc="128:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x2ab9c6f63780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x2ab9c6f63ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x2ab9c6f132a8" loc="118:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2ab9c6f132a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6f135f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c6f12a10" loc="120:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f12a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6f12d60"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6f11020"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6f111a8"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6f11330"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6f114b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6f11640"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6f117c8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6f11950"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6f11ad8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6f11c60"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6f11de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c6f17700" loc="112:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c6f17700"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c6f17a50"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f17bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x2ab9c6f1ab78" loc="109:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x2ab9c6f1ab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x2ab9c6f19020"/>
        <function-ref name="routeFound" scoped="" ref="0x2ab9c6f191a8"/>
        <function-ref name="nextHop" scoped="" ref="0x2ab9c6f19330"/>
        <function-ref name="noRoute" scoped="" ref="0x2ab9c6f194b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6f59a60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6f59a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f56d60"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f57470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f561c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f57d10"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f54648"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f541f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f578c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f58620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f56790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f58ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c6f4f7a8" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f4f7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6f4faf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f4fc80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f4fe08"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6f4e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6f4e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6f4e3f0" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6f4e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6f4e740"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6f4e8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f4ea50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f4ebd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6f4ed60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6f4d020" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f4d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6f4d370"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6f4d4f8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6f4d680"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6f4d808"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6f4d990"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6f4db18"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6f4dca0"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6f4de28"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6f4c020"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6f4c1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6f4c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c6f4c5b8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c6f4c5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c6f4c908"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c6f4ca90"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c6f4cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c7960b80" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c7960b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c795f020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c795f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c795f330"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c795f4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c795f640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c795f888" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c795f888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c795fbd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c795fd60"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c795e020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c795e1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c795e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c795e578" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c795e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c795e8c8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c795ea50"/>
        <function-ref name="address" scoped="" ref="0x2ab9c795ebd8"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c795ed60"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c795d020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c795d1a8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c795d330"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c795d4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c795d640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c795d7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c795d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c795dbd8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c795dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c795b020"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c795b1a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c795b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c7952020" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c7952020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c7952370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c79524f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7952680"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c7952808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c7952990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ab9c7952c38" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c7952c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c7951020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c79511a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7951330"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c79514b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c7951640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c7951888" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7951888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c7951bd8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c7951d60"/>
        <function-ref name="address" scoped="" ref="0x2ab9c7950020"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c79501a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c7950330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c79504b8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c7950640"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c79507c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c7950950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c7950ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c7950c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6f495b8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6f495b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6f49908"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6f49a90"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f49c18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f49da0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6f48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6f49020" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6f49020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6f49370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6f48268" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f48268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6f485b8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6f48740"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6f488c8"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6f48a50"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6f48bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6f48d60"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6f47020"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6f471a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6f47330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6f474b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6f47640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6f44550" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.TimerOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6f44550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f40768"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f42e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f41b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f41728"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f3f088"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f40bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f412d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f420c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f40198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f42560"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f42a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6f3da60" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.TimerTwo"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6f3da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f3ad60"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f3b470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f3a1c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f3bd10"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f39648"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f391f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f3b8c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f3c620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f3a790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f3cac0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f3b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6f36020" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetryTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6f36020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f932b8"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f95978"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f946c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f94278"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f93b58"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f93708"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f95dc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f36b68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f94c98"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f95088"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f95528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6f905e8" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.TimertoSendBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6f905e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f8d8f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f8e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f8ed10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f8e8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f8b1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f8dd40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f8e470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f8f158"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f8d320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f8f5f8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f8fa98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c6f8ab48" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.UpdateTableTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c6f8ab48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c6f87d98"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c6f884d8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c6f871f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c6f88d78"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c6f85688"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c6f85238"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c6f88928"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c6f896f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c6f877c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c6f89b90"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c6f88088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c6f83390" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f83390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6f836e0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f83868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f839f0"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6f83b78"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6f83d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6f82020" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6f82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6f82370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6f824f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f82680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f82808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6f82990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6f82bd8" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f82bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6f81020"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6f811a8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6f81330"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6f814b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6f81640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6f817c8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6f81950"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6f81ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6f81c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6f81de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6f80020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c6f802a8" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c6f802a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c6f805f8"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c6f80780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c6f80908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c79ad398" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c79ad398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c79ad6e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c79ad870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c79ad9f8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c79adb80"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c79add08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c79ac020" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c79ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c79ac370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c79ac4f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c79ac680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c79ac808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c79ac990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c79acbd8" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c79acbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c79aa020"/>
        <function-ref name="source" scoped="" ref="0x2ab9c79aa1a8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c79aa330"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c79aa4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c79aa640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c79aa7c8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c79aa950"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c79aaad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c79aac60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c79aade8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c79a9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c79a92a8" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c79a92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c79a95f8"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c79a9780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c79a9908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c79a0be0" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendMessageControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c79a0be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c799f020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c799f1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c799f330"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c799f4b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c799f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ab9c799f8e8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendMessageControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c799f8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c799fc38"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c799fdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c799e020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c799e1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c799e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c799e578" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendMessageControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c799e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c799e8c8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c799ea50"/>
        <function-ref name="address" scoped="" ref="0x2ab9c799ebd8"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c799ed60"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c799d020"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c799d1a8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c799d330"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c799d4b8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c799d640"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c799d7c8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c799d950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6f7d060" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveMessageControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6f7d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6f7d3b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6f7d538"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f7d6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f7d848"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6f7d9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6f7ea98" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveMessageControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6f7ea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6f7ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6f7dc18" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveMessageControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f7dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6f7b020"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6f7b1a8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6f7b330"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6f7b4b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6f7b640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6f7b7c8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6f7b950"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6f7bad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6f7bc60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6f7bde8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6f7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c6f79e00" loc="49:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c6f79e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c6f781a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f78330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f784b8"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c6f78640"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c6f787c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6f78a10" loc="50:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6f78a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6f78d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6f77020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f771a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f77330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6f774b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6f77700" loc="51:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f77700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6f77a50"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6f77bd8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6f77d60"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6f76020"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6f761a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6f76330"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6f764b8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6f76640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6f767c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6f76950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6f76ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c6f76d60" loc="52:/opt/tinyos-2.1.2/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c6f76d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c6f750d8"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c6f75260"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c6f753e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c7983020" loc="49:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c7983020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c7983370"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c79834f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7983680"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c7983808"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c7983990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c7983bd8" loc="50:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c7983bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c7982020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c79821a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c7982330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c79824b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c7982640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c7982888" loc="51:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7982888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c7982bd8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c7982d60"/>
        <function-ref name="address" scoped="" ref="0x2ab9c7981020"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c79811a8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c7981330"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c79814b8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c7981640"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c79817c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c7981950"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c7981ad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c7981c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2ab9c7980020" loc="52:/opt/tinyos-2.1.2/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendMessageBeacon.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2ab9c7980020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c7980370"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c79804f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c7980680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2ab9c7977958" loc="44:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendMessageBeacon.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2ab9c7977958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c7977ca8"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c7977e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7976020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c79761a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c7976330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2ab9c79765d8" loc="46:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendMessageBeacon.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2ab9c79765d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c7976928"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c7976ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7976c38"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c7976dc0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c7974020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c7974268" loc="47:/opt/tinyos-2.1.2/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendMessageBeacon.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7974268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c79745b8"/>
        <function-ref name="source" scoped="" ref="0x2ab9c7974740"/>
        <function-ref name="address" scoped="" ref="0x2ab9c79748c8"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c7974a50"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c7974bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c7974d60"/>
        <function-ref name="type" scoped="" ref="0x2ab9c7973020"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c79731a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c7973330"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c79734b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c7973640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2ab9c6f73aa8" loc="46:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveMessageBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2ab9c6f73aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2ab9c6f73df8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2ab9c6f72020"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c6f721a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c6f72330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2ab9c6f724b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2ab9c6f73510" loc="45:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveMessageBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2ab9c6f73510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c6f73860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2ab9c6f72700" loc="47:/opt/tinyos-2.1.2/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveMessageBeacon"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c6f72700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c6f72a50"/>
        <function-ref name="source" scoped="" ref="0x2ab9c6f72bd8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c6f72d60"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c6f71020"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c6f711a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c6f71330"/>
        <function-ref name="type" scoped="" ref="0x2ab9c6f714b8"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c6f71640"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c6f717c8"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c6f71950"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c6f71ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x2ab9c7090b10" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x2ab9c7090b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x2ab9c7090e60"/>
        <function-ref name="setRoot" scoped="" ref="0x2ab9c708f020"/>
        <function-ref name="unsetRoot" scoped="" ref="0x2ab9c708f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlSend" ref="0x2ab9c7094880" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlSend" scoped="" ref="0x2ab9c7094880"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c7094bd0"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c7094d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7093020"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c70931a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c7093330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDistributionTask" ref="0x2ab9c70d8c10" loc="373:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDistributionTask" scoped="" ref="0x2ab9c70d8c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c70d7020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c70d71a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UpdateTimer" ref="0x2ab9c70e45a8" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UpdateTimer" scoped="" ref="0x2ab9c70e45a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c70e08f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c70e2020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c70e2d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c70e28c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c70df1c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c70e0d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c70e2470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c70e3118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c70e0320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c70e35b8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c70e3a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlReceive" ref="0x2ab9c70935b8" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlReceive" scoped="" ref="0x2ab9c70935b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c7093908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MatrixInfo" ref="0x2ab9c7099908" loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixInfo" scoped="" ref="0x2ab9c7099908"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="numNeighborsTemporary" scoped="" ref="0x2ab9c7099c58"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c7099de0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c7098020"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c70981a8"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c7098330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x2ab9c7097e80" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x2ab9c7097e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x2ab9c70961f8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x2ab9c7096380"/>
        <function-ref name="numNeighbors" scoped="" ref="0x2ab9c7096508"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x2ab9c7096690"/>
        <function-ref name="getEtx" scoped="" ref="0x2ab9c7096818"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x2ab9c70969a0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x2ab9c7096b28"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x2ab9c7096cb0"/>
        <function-ref name="parentChanged" scoped="" ref="0x2ab9c7096e38"/>
        <function-ref name="getParent" scoped="" ref="0x2ab9c7095020"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x2ab9c70951a8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x2ab9c7095330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MatrixUnicastNameFreeRouting" ref="0x2ab9c7097268" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MatrixUnicastNameFreeRouting" scoped="" ref="0x2ab9c7097268"/></type-interface>
      <instance>
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x2ab9c70975b8"/>
        <function-ref name="directionToSend" scoped="" ref="0x2ab9c7097740"/>
        <function-ref name="nextHop" scoped="" ref="0x2ab9c70978c8"/>
        <function-ref name="myIp" scoped="" ref="0x2ab9c7097a50"/>
        <function-ref name="nextHopTemporary" scoped="" ref="0x2ab9c7097bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x2ab9c708f430" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x2ab9c708f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2ab9c708f880"/>
        <function-ref name="stopDone" scoped="" ref="0x2ab9c708fa08"/>
        <function-ref name="start" scoped="" ref="0x2ab9c708fb90"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c708fd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2ab9c7098c98" loc="37:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2ab9c7098c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2ab9c7097020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x2ab9c70955b8" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x2ab9c70955b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2ab9c7095908"/>
        <function-ref name="getPayload" scoped="" ref="0x2ab9c7095a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2ab9c7095c18"/>
        <function-ref name="cancel" scoped="" ref="0x2ab9c7095da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2ab9c7094020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x2ab9c70e9540" loc="62:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x2ab9c70e9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c70e5768"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c70e8e50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c70e7b78"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c70e7728"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c70e4088"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c70e5bb8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c70e72d8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c70e80c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c70e5198"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c70e8560"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c70e8a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimerOne" ref="0x2ab9c708e0e0" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimerOne" scoped="" ref="0x2ab9c708e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c70ef320"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c708d9e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c708c728"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c708c2d8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c70efbc0"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c70ef770"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c708de38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c708ec28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c708ccf8"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c708d0f8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c708d598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x2ab9c70df6e0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x2ab9c70df6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c70dba18"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c70dd158"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c70dde48"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c70dd9f8"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c70da2e8"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c70dbe68"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c70dd5a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c70de370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c70db448"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c70de810"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c70decb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2ab9c70da6c0" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2ab9c70da6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2ab9c70daa10"/>
        <function-ref name="rand32" scoped="" ref="0x2ab9c70dab98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x2ab9c70d8470" loc="399:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x2ab9c70d8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c70d87c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c70d8948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2ab9c70dade0" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2ab9c70dade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2ab9c70d9170"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2ab9c70d92f8"/>
        <function-ref name="led1On" scoped="" ref="0x2ab9c70d9480"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2ab9c70d9608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2ab9c70d9790"/>
        <function-ref name="get" scoped="" ref="0x2ab9c70d9918"/>
        <function-ref name="led1Off" scoped="" ref="0x2ab9c70d9aa0"/>
        <function-ref name="led2On" scoped="" ref="0x2ab9c70d81a8"/>
        <function-ref name="set" scoped="" ref="0x2ab9c70d9db0"/>
        <function-ref name="led2Off" scoped="" ref="0x2ab9c70d9c28"/>
        <function-ref name="led0On" scoped="" ref="0x2ab9c70d8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimerTwo" ref="0x2ab9c70ee168" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimerTwo" scoped="" ref="0x2ab9c70ee168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c70ea5f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c70eda88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c70ec8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c70ec470"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c70e9020"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c70eaa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c70ec020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c70eecb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c70ea020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c70ed198"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c70ed638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2ab9c7090268" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2ab9c7090268"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2ab9c70905b8"/>
        <function-ref name="noAck" scoped="" ref="0x2ab9c7090740"/>
        <function-ref name="wasAcked" scoped="" ref="0x2ab9c70908c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAggregationTask" ref="0x2ab9c70d7470" loc="346:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAggregationTask" scoped="" ref="0x2ab9c70d7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c70d77c0"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c70d7948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x2ab9c70942a8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x2ab9c70942a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2ab9c70945f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x2ab9c7098578" loc="36:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x2ab9c7098578"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2ab9c70988c8"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c7098a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2ab9c7093b50" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2ab9c7093b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2ab9c7091020"/>
        <function-ref name="source" scoped="" ref="0x2ab9c70911a8"/>
        <function-ref name="address" scoped="" ref="0x2ab9c7091330"/>
        <function-ref name="destination" scoped="" ref="0x2ab9c70914b8"/>
        <function-ref name="setSource" scoped="" ref="0x2ab9c7091640"/>
        <function-ref name="setDestination" scoped="" ref="0x2ab9c70917c8"/>
        <function-ref name="type" scoped="" ref="0x2ab9c7091950"/>
        <function-ref name="setType" scoped="" ref="0x2ab9c7091ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2ab9c7091c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2ab9c7091de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2ab9c7090020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateTemporaryTableTask" ref="0x2ab9c70d7c10" loc="331:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixRoutingEngineP.nc">
      <component-ref qname="CtpP.Matrix"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateTemporaryTableTask" scoped="" ref="0x2ab9c70d7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2ab9c70d5020"/>
        <function-ref name="runTask" scoped="" ref="0x2ab9c70d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x2ab9c76b0da8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="ModuleTestAppC.Sender.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x2ab9c76b0da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x2ab9c76af170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c70fe620" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ModuleTestAppC.timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c70fe620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c70fa8f0"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c70fc020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c70fcd10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c70fc8c0"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c70f91c0"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c70fad40"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c70fc470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c70fd198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c70fa320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c70fd638"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c70fdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2ab9c70f8aa0" loc="45:/opt/tinyos-2.1.2/tos/system/TimerMilliC.nc">
      <component-ref qname="ModuleTestAppC.timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2ab9c70f8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2ab9c5a6f608"/>
            <typename><typedef-ref name="TMilli" ref="0x2ab9c5a6f960"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2ab9c70f4d60"/>
        <function-ref name="fired" scoped="" ref="0x2ab9c70f6470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2ab9c70f41c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2ab9c70f6d10"/>
        <function-ref name="getdt" scoped="" ref="0x2ab9c70f3648"/>
        <function-ref name="gett0" scoped="" ref="0x2ab9c70f31f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2ab9c70f68c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2ab9c70f7620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2ab9c70f4790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2ab9c70f7ac0"/>
        <function-ref name="stop" scoped="" ref="0x2ab9c70f6020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x2ab9c5b01020" loc="43:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x2ab9c5af4258" loc="41:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x2ab9c5af4918" loc="42:/opt/tinyos-2.1.2/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2ab9c5aea580" loc="60:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2ab9c5ae7748" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ab9c5ae74d8" loc="113:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2ab9c5ae6c00" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ab9c5ae6990" loc="138:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab9c5aecb20" loc="104:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c5ae6020" loc="130:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x2ab9c5b50020" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b52a68" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5b52d78" loc="75:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ab9c5b4b2d8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b4ccc8" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5b4b020" loc="125:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ab9c5b4c4c0" loc="112:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ab9c5b4f290" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b4f020" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ab9c5b4e670" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b4e0c8" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ab9c5b4e3f0" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2ab9c5b8e0d8" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2ab9c5b918f0" loc="46:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MatrixUnicastNameFreeRouting" loc="30:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
      <function command="" provided="0" name="hasRoute" ref="0x2ab9c5b8de28" loc="38:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="directionToSend" ref="0x2ab9c5b8c780" loc="39:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x2ab9c5b8c510" loc="39:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x2ab9c5b8b108" loc="40:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x2ab9c5b8ce18" loc="40:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="myIp" ref="0x2ab9c5b8d678" loc="37:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
        <documentation loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHopTemporary" ref="0x2ab9c5b8ba70" loc="41:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
        <interfacedef-ref qname="MatrixUnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ip" ref="0x2ab9c5b8b800" loc="41:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixUnicastNameFreeRouting.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ab9c5b007d0" loc="95:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c5aff020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ab9c5b57170" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
              <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5af3840" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ab9c5af3b68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5af3e78" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2ab9c5aef738" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2ab9c5aefe70" loc="67:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2ab9c5aee608" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2ab9c5afa480" loc="83:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2ab9c5af9a98" loc="100:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab9c5af8258" loc="117:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2ab9c5aeed20" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab9c5af8d58" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2ab9c5af8ae8" loc="134:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2ab9c5aef020" loc="56:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2ab9c5afabf0" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2ab9c5af9360" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2ab9c59f2608" loc="67:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2ab9c59f2df8" loc="75:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2ab9c5b79030" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b6ba58" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x2ab9c5b6bd80" loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x2ab9c5b669d0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b66400" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x2ab9c5b66750" loc="52:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIpOrigin" ref="0x2ab9c5b6d2a0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b6fc98" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ip" ref="0x2ab9c5b6d020" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x2ab9c5b715c0" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b71020" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x2ab9c5b71340" loc="58:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x2ab9c5b6c880" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b6c2c8" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ab9c5b6c600" loc="67:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x2ab9c5b67cd8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b676e8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x2ab9c5b67a58" loc="49:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x2ab9c5b63960" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b636f0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x2ab9c5b6dc08" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b6d998" loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ab9c5b785a8" loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b78020" loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x2ab9c5b78328" loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x2ab9c5b67020" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b689a0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x2ab9c5b68d10" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIpOrigin" ref="0x2ab9c5b6f5f0" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b6f380" loc="63:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIp" ref="0x2ab9c5b70020" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b71c88" loc="60:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x2ab9c5b64338" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b640c8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2ab9c5b6b370" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b6b100" loc="69:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x2ab9c5b772a0" loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x2ab9c5b78c90" loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x2ab9c5b77020" loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x2ab9c5b75020" loc="76:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x2ab9c5b77970" loc="76:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x2ab9c5b77cc8" loc="76:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIp" ref="0x2ab9c5b70c28" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b70690" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ip" ref="0x2ab9c5b709a8" loc="61:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x2ab9c5b79968" loc="72:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b796f8" loc="72:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x2ab9c5b63020" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5b649b0" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x2ab9c5b64cc0" loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c5b56e58" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c5b56e58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ab9c5b7c918" loc="136:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab9c5b80258" loc="83:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2ab9c5b7d020" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab9c5b7e910" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ab9c5b7ec28" loc="114:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2ab9c5b7e1d8" loc="98:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2ab9c5b7b878" loc="151:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2ab9c5b7b070" loc="144:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ab9c5b809d0" loc="92:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2ab9c5b82968" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab9c5b826f8" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2ab9c5b7c020" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab9c5b7d950" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2ab9c5b7dc68" loc="129:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2ab9c5b813c8" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab9c5b81158" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c5b81b70" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ab9c5bbd7a0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2ab9c5bc8810" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2ab9c5bc85a0" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2ab9c5bca020" loc="31:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2ab9c5bcaa18" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c5bca7a8" loc="39:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2ab9c5bc94d0" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c5bc9260" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2ab9c5bc9d18" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2ab9c5bdbdc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2ab9c5bda4c8" loc="45:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2ab9c5bdb070" loc="42:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2ab9c5bea290" loc="47:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab9c5bdb710" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2ab9c5bdab80" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab9c5bdc328" loc="40:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2ab9c5bdc998" loc="41:/opt/tinyos-2.1.2/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2ab9c59e4968" loc="57:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2ab9c59f0878" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2ab9c59f00d8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2ab9c5aaaca0" loc="76:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.2/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2ab9c5acd328" loc="62:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2ab9c5a4f940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2ab9c5ac3e60" loc="52:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ab9c5da8040" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2ab9c5dab718" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ab9c5daba78" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5dabd88" loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ab9c5dbb3c0" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5da4dc8" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5dbb108" loc="135:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ab9c5da45c0" loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ab9c5da7338" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5da70c8" loc="96:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ab9c5da67a0" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5da61f8" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ab9c5da6520" loc="110:/opt/tinyos-2.1.2/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ab9c5db6670" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5db6400" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2ab9c5db5670" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5db5400" loc="78:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2ab9c5db07c0" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5db01f8" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5db0508" loc="126:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2ab9c5db18f8" loc="106:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2ab9c5db3a38" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5db34a8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5db37b8" loc="94:/opt/tinyos-2.1.2/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c5dcbe58" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c5dcbe58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ab9c5dc90c8" loc="35:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5dc90c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2ab9c5de1d50" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5dc90c8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5de1ae0" loc="63:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2ab9c5ddf020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5de2ca8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2ab9c5dc9be8" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5dc9978" loc="49:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab9c5dde2a0" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5dc90c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5ddfc48" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2ab9c5dde020" loc="78:/opt/tinyos-2.1.2/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5dc90c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2ab9c5deed88" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5dee7a0" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2ab9c5deeb08" loc="65:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2ab9c5deb020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5decc48" loc="71:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2ab9c5dee020" loc="57:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2ab9c5def5c0" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2ab9c5def350" loc="52:/opt/tinyos-2.1.2/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2ab9c5dcf520" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5dcf2b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2ab9c5dce630" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5dce3c0" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2ab9c5dcc700" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5dcc490" loc="85:/opt/tinyos-2.1.2/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2ab9c5dd4b08" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ab9c5b414c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dd4898" loc="177:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2ab9c5dc3b80" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dc3910" loc="88:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2ab9c5dc6110" loc="68:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2ab9c5dc6b68" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dc68f8" loc="78:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2ab9c5dc1450" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dc4e60" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ab9c5dc11d0" loc="121:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2ab9c5dc4020" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dc2900" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ab9c5dc2c38" loc="103:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2ab9c5dbe768" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dbe4f8" loc="147:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ab9c5dbc9d8" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dbc458" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2ab9c5dbc758" loc="162:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2ab9c5b41110"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2ab9c5dbf600" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dbf390" loc="136:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2ab9c5dd5020" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ab9c5b414c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2ab9c5dd3920" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2ab9c5dd3c50" loc="187:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ab9c5b414c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2ab9c5dd5d88" loc="195:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.1.2/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ab9c5b414c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x2ab9c5e18290" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e18020" loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x2ab9c5e1a578" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e1a308" loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x2ab9c5e03d30" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ab9c5e03ac0" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x2ab9c5e03290" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x2ab9c5e03020" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x2ab9c5e02728" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x2ab9c5e024b8" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x2ab9c5e193b0" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e19140" loc="88:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2ab9c5e26830" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2ab9c5e26250" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ab9c5e265b0" loc="59:/opt/tinyos-2.1.2/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x2ab9c5e0d2a0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e0ecc0" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x2ab9c5e0d020" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x2ab9c5e095f0" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e09020" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x2ab9c5e09370" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x2ab9c5e0dd00" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x2ab9c5102908"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e0da90" loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x2ab9c5e0a5e0" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e0a370" loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x2ab9c5e0e538" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e0e2c8" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x2ab9c5e0b7d8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e0b568" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2ab9c5e10290" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e10020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2ab9c5e14480" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e04e70" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2ab9c5e14200" loc="46:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2ab9c5e11290" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e11020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2ab9c5e137e0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e131f8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2ab9c5e13560" loc="53:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2ab9c5e0f290" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e0f020" loc="71:/opt/tinyos-2.1.2/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2ab9c5df5df8" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5df5b88" loc="47:/opt/tinyos-2.1.2/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2ab9c5e1d1d8" loc="120:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2ab9c5e1e2a8" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2ab9c5e21988" loc="88:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2ab9c5e1ea30" loc="102:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2ab9c5e1dbc0" loc="128:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.1.2/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ab9c5e50838" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e502a0" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x2ab9c5e505b8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ab9c5e4fa58" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x2ab9c5e4b0c8" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ab9c5e4d318" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x2ab9c5e4daf0" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c5e4de00" loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ab9c5e4eb00" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x2ab9c5e4e558" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2ab9c5e4e880" loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x2ab9c5e4f290" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x2ab9c5e4f020" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x2ab9c5e45ad8" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e45830" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x2ab9c5e450a8" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x2ab9c5afb020"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x2ab9c5b088a8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e46d90" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x2ab9c5e5fce8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x2ab9c5b073c0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x2ab9c5b06b80"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c5e5fa00" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x2ab9c5e3a7e8" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x2ab9c5e38778" loc="97:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x2ab9c5e38020" loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x2ab9c5e3c020" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x2ab9c5e3a020" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x2ab9c5e39020" loc="76:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x2ab9c5e397d0" loc="83:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x2ab9c5e3c818" loc="56:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x2ab9c5e59178" loc="71:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x2ab9c5e5b798" loc="56:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x2ab9c5e5a9b0" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x2ab9c5e5a740" loc="66:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x2ab9c5e5a020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x2ab9c5e5d508" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ab9c5e5d298" loc="45:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x2ab9c5e5b020" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x2ab9c5e5dcc0" loc="51:/opt/tinyos-2.1.2/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x2ab9c5eaa680" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x2ab9c5eaa0c8" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x2ab9c5eaa400" loc="106:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x2ab9c5eab178" loc="93:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x2ab9c5eac840" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x2ab9c5eac200" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x2ab9c5eac5c0" loc="87:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x2ab9c5eb10a8" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2ab9c5eb3e00" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x2ab9c5eab980" loc="98:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x2ab9c5eaf990" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ab9c5eaf720" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2ab9c5eb0108" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2ab9c5eb1e40" loc="61:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x2ab9c5ea9828" loc="117:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x2ab9c5eaea30" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x2ab9c5eae7c0" loc="78:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x2ab9c5ea9070" loc="112:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x2ab9c5eb0828" loc="66:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ab9c5de9340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ab9c5de9a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x2ab9c5eaf020" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x2ab9c5eb36d0" loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2ab9c5eb1790" loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x2ab9c5eae110" loc="77:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x2ab9c5ec12a0" loc="49:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ab9c5ec12a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x2ab9c5ec1ad8" loc="55:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ab9c5ec07c8" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ab9c5ec12a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x2ab9c5ec0248" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x2ab9c5ec0548" loc="63:/opt/tinyos-2.1.2/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x2ab9c5ec12a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ab9c5ed2290" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ab9c5afe238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c5ed2020" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ab9c5ed2ce8" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ab9c5afe238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c5ed2a78" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x2ab9c5eb44d0" loc="48:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x2ab9c5de9340"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x2ab9c5de9a68"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c5eb6668" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c5eb6668"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ab9c5eb6898" loc="56:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2ab9c5ecb178" loc="109:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab9c5ecd328" loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2ab9c5ecc810" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2ab9c5ecc270" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
          </variable>
          <variable name="dt" ref="0x2ab9c5ecc590" loc="103:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2ab9c5ecda98" loc="88:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2ab9c5ecb8f8" loc="116:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab9c5ecf378" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2ab9c5ecf108" loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5eb6898"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c5ecfb48" loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.1.2/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2ab9c5edb020" loc="50:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2ab9c5edbe70" loc="60:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2ab9c5edb780" loc="55:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2ab9c5b414c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2ab9c5edc730" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ab9c5b414c0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2ab9c5edc178" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2ab9c5b414c0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2ab9c5edc4b0" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x2ab9c5eea0d8" loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ab9c5afe238"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x2ab9c5ed75e0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ab9c5afe238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ab9c5ed86b0" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ab9c5ed7020" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ab9c5ed7350" loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ab9c5ed6c60" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ab9c5afe238"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x2ab9c5ed7e30" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x2ab9c5ed66a0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ab9c5ed69d0" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ab9c5ede770" loc="68:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ab9c5ede020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x2ab9c5edf868" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x2ab9c5edf020" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ab9c5f8c378" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5aa8928"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ab9c5aa8d30"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x2ab9c5f8e020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a93478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ab9c5a93880"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ab9c5f90cf8" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a93478"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ab9c5a93880"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ab9c5f8d1d8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a9e578"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ab9c5a9e980"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x2ab9c5f94ab0" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a8fda8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ab9c5a8e228"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ab9c5f8db98" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a9e578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ab9c5a9e980"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ab9c5f8d928" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a9e578"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x2ab9c5a9e980"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ab9c5f8cd38" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5aa8928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ab9c5aa8d30"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ab9c5f8cac8" loc="59:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5aa8928"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x2ab9c5aa8d30"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x2ab9c5f91ad8" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a91890"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ab9c5a91c98"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x2ab9c5f91328" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a93478"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x2ab9c5a93880"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x2ab9c5f90570" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a8fda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ab9c5a8e228"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ab9c5f90300" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a8fda8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x2ab9c5a8e228"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x2ab9c5f8e9f0" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a91890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ab9c5a91c98"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ab9c5f8e780" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a91890"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x2ab9c5a91c98"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ab9c5f92b60" loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5f92b60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2ab9c5fa3648" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2ab9c5fa33d8" loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ab9c5fa4568" loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab9c5fa8438" loc="47:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5f92b60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ab9c5fa7748" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5f92b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab9c5fa74d8" loc="60:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5f92b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ab9c5fa6020" loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ab9c5fa4cb8" loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab9c5fa8d70" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5f92b60"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab9c5fa8b00" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5f92b60"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab9c5fa6718" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c5fa6e00" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2ab9c5fa0820" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5fa0820"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2ab9c5fbae20" loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab9c5f9c1d8" loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab9c5f9d110" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5fa0820"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ab9c5f9c8e0" loc="62:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ab9c5fb95c0" loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab9c5f9da58" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5fa0820"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab9c5f9d7e8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c5fa0820"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab9c5fba020" loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c5fba708" loc="68:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2ab9c5f7f458" loc="55:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab9c5f7f458"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2ab9c5f9a900" loc="98:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2ab9c5f7ba40" loc="87:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2ab9c5f7fcf8" loc="61:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab9c5f7f458"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2ab9c5f98290" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2ab9c5f98020" loc="104:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2ab9c5f98a10" loc="110:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2ab9c5f7c500" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ab9c5f7dda8" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2ab9c5f9a1d8" loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab9c5f7d688" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab9c5f7f458"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2ab9c5f7d418" loc="67:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2ab9c5f7f458"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2ab9c5f7cbf8" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c5f7b328" loc="81:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x2ab9c5fab7c8" loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a7ca08"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab9c5a7ce10"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2ab9c5fcac10" loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a89100"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab9c5a89508"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2ab9c5fcba38" loc="49:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a81980"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab9c5a81d88"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2ab9c5fca470" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a81980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab9c5a81d88"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2ab9c5fca200" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a81980"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x2ab9c5a81d88"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2ab9c5fc95f8" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a89100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab9c5a89508"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2ab9c5fc9388" loc="54:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a89100"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x2ab9c5a89508"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x2ab9c5fcb290" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a7ca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab9c5a7ce10"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2ab9c5fcb020" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a7ca08"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x2ab9c5a7ce10"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x2ab9c5fc0020" loc="38:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x2ab9c5fc07e0" loc="44:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x2ab9c5fc17f0" loc="32:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2ab9c5fbf020" loc="50:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2ab9c5fc2550" loc="21:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a83118"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab9c5a83520"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2ab9c5fc1020" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a83118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab9c5a83520"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2ab9c5fc2c90" loc="27:/opt/tinyos-2.1.2/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2ab9c5a83118"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x2ab9c5a83520"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c612f3f8" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c612f3f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2ab9c612f628" loc="57:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c612f628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ab9c612e020" loc="64:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2ab9c612f628"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2ab9c612d070" loc="76:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2ab9c612e838" loc="71:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2ab9c612d760" loc="82:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.1.2/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2ab9c61ce818" loc="54:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ab9c61cc9c8" loc="66:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2ab9c61cc290" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ab9c61cc020" loc="61:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2ab9c61ce030" loc="53:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="41:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2ab9c61d6418" loc="56:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2ab9c61d5d58" loc="75:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2ab9c61d8d00" loc="51:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x2ab9c61d55a0" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="65:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x2ab9c61d5330" loc="70:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x2ab9c61d8608" loc="46:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x2ab9c61d6b58" loc="63:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="58:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="43:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x2ab9c620d4e0" loc="48:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x2ab9c62708e8" loc="24:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x2ab9c626f110" loc="31:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x2ab9c626f8e0" loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x2ab9c62aa998" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c62aa3e8" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ab9c62aa718" loc="62:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x2ab9c62a5948" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c62a5060" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ab9c62a5390" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ab9c62a56b8" loc="91:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ab9c62a6348" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ab9c5afe238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c62a7d20" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ab9c62a60c8" loc="82:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x2ab9c62ab678" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x2ab9c5afe238"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c62ab0c8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ab9c62ab3f8" loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x2ab9c62a7030" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c62a8720" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2ab9c62a8a50" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ab9c62a8d78" loc="71:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2ab9c62b62b0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ab9c62b7840" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ab9c62b7ba0" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c62b6020" loc="70:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2ab9c62b5648" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2ab9c62b49b0" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2ab9c62b4d10" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c62b5060" loc="82:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2ab9c62b53a8" loc="83:/opt/tinyos-2.1.2/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2ab9c62b9108" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2ab9c62bce68" loc="45:/opt/tinyos-2.1.2/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2ab9c633f020" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c6342c50" loc="62:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2ab9c633d338" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c633d0c8" loc="74:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2ab9c633f820" loc="68:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ab9c633dd40" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c633dad0" loc="81:/opt/tinyos-2.1.2/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2ab9c6359020" loc="86:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2ab9c6351a60" loc="126:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2ab9c6354538" loc="117:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2ab9c634f458" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2ab9c634f1e8" loc="128:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2ab9c635b880" loc="83:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2ab9c6352108" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2ab9c6353e18" loc="122:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2ab9c6357d50" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2ab9c6357ae0" loc="113:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2ab9c6358020" loc="97:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2ab9c637bb98" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2ab9c637b928" loc="141:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2ab9c63564d0" loc="114:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2ab9c634e4b0" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2ab9c634e240" loc="131:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2ab9c634d360" loc="136:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2ab9c6351338" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2ab9c63510c8" loc="125:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2ab9c637b258" loc="140:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2ab9c6353020" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2ab9c6354c18" loc="119:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2ab9c6358978" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c6358708" loc="103:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2ab9c6356de0" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2ab9c6356b70" loc="116:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2ab9c6352918" loc="123:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2ab9c634fb60" loc="129:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2ab9c634eba0" loc="132:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2ab9c634daa8" loc="138:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2ab9c6353738" loc="120:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2ab9c6359738" loc="89:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2ab9c6357338" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2ab9c63570c8" loc="109:/opt/tinyos-2.1.2/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2ab9c63789f0" loc="90:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2ab9c6375258" loc="98:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2ab9c63b0748" loc="95:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2ab9c63ae020" loc="105:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.1.2/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2ab9c64257d0" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2ab9c64240d8" loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2ab9c6420020" loc="65:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2ab9c64216f8" loc="59:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2ab9c6418c80" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab9c641e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ab9c6418a10" loc="79:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab9c641e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2ab9c641de10" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2ab9c64198f0" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab9c641e020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2ab9c6419680" loc="62:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2ab9c641e020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ab9c64181d8" loc="70:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.1.2/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2ab9c641e020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x2ab9c654c8c8" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x2ab9c6573400" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ab9c6574a68" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x2ab9c6573180" loc="63:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x2ab9c6574328" loc="55:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x2ab9c6577b30" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2ab9c65778c0" loc="49:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x2ab9c6550ae8" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6550878" loc="58:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2ab9c6554b50" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c65548e0" loc="50:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2ab9c6585938" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c65856c8" loc="72:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2ab9c6586a20" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c65867b0" loc="65:/opt/tinyos-2.1.2/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2ab9c66e5a58" loc="53:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2ab9c66e5a58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ab9c66e2328" loc="61:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2ab9c5104608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2ab9c68b19b8" loc="53:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ab9c68b19b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2ab9c68ae4c8" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ab9c68b19b8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2ab9c68ae258" loc="64:/opt/tinyos-2.1.2/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2ab9c68b19b8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2ab9c6a63940" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6a63398" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x2ab9c6a636c0" loc="50:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x2ab9c6a1ac70" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6a1a6b8" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ab9c6a1a9f0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2ab9c6a652e0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6a66cb0" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x2ab9c6a65060" loc="47:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x2ab9c6a1a020" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6a1ec68" loc="43:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2ab9c6a65c80" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6a65a10" loc="49:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x2ab9c6a66630" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6a663c0" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x2ab9c6a4eaf0" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ab9c6a4e880" loc="61:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x2ab9c6a49020" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ab9c6a4a358" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2ab9c6a4a678" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x2ab9c6a4a9c0" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x2ab9c6a4acf8" loc="73:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x2ab9c6a4d7d8" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ab9c6a4d238" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x2ab9c6a4d558" loc="64:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x2ab9c6a483a8" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ab9c6a49708" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x2ab9c6a49a50" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x2ab9c6a49d98" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x2ab9c6a48108" loc="79:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x2ab9c6a4cc50" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x2ab9c6a4c020" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x2ab9c6a4c350" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x2ab9c6a4c680" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x2ab9c6a4c9b0" loc="67:/opt/tinyos-2.1.2/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x2ab9c6a1f8e8" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6a1f020" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ab9c6a1f348" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c6a1f658" loc="31:/opt/tinyos-2.1.2/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x2ab9c6a59590" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c6a59320" loc="96:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x2ab9c6a5cd50" loc="83:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x2ab9c6a5abd0" loc="95:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x2ab9c6a5ecf0" loc="71:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x2ab9c6a5e460" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x2ab9c6a5e1f0" loc="64:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x2ab9c6a5c560" loc="78:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x2ab9c6a5bab0" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c6a5b4f8" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x2ab9c6a5b830" loc="88:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x2ab9c6a57960" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c6a576f0" loc="98:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="parentChanged" ref="0x2ab9c6a562d0" loc="100:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newParent" ref="0x2ab9c6a56060" loc="100:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x2ab9c6a619e8" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x2ab9c6a61778" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x2ab9c6a57020" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c6a59ca8" loc="97:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x2ab9c6a5a4a0" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c6a5a230" loc="93:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x2ab9c6a5f650" loc="7:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x2ab9c6a52020" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x2ab9c6a5fd38" loc="14:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x2ab9c6a54c08" loc="46:/opt/tinyos-2.1.2/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x2ab9c5b53088"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x2ab9c6a82338" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a820c8" loc="62:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x2ab9c6a83020" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a85d00" loc="55:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x2ab9c6a82c90" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a82a20" loc="66:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x2ab9c6a855f0" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a85380" loc="52:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2ab9c6a7f020" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a81cd0" loc="72:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x2ab9c6a81630" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a813c0" loc="69:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x2ab9c6a839b8" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a83748" loc="58:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x2ab9c6a88c18" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x2ab9c6a889a8" loc="49:/opt/tinyos-2.1.2/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MatrixInfo" loc="32:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
      <function command="" provided="0" name="numNeighborsTemporary" ref="0x2ab9c6a7a7b8" loc="77:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
        <interfacedef-ref qname="MatrixInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x2ab9c6a7a030" loc="75:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
        <documentation loc="70:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="MatrixInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x2ab9c6a79290" loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
        <interfacedef-ref qname="MatrixInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2ab9c6a79020" loc="79:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="myIp" ref="0x2ab9c6a7b7e0" loc="44:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
        <interfacedef-ref qname="MatrixInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x2ab9c6a7b020" loc="41:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
        <documentation loc="34:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MatrixInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x2ab9c6a7ed10" loc="41:/opt/tinyos-2.1.2/tos/lib/net/ctp/MatrixInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2ab9c6acbdc0" loc="44:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6acbdc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x2ab9c6ac6838" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6acbdc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2ab9c6ac65c8" loc="51:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6acbdc0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x2ab9c6ac59b8" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x2ab9c6ac5290" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6acbdc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x2ab9c6ac5020" loc="59:/opt/tinyos-2.1.2/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6acbdc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2ab9c6a97638" loc="43:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6a97638"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x2ab9c6a8f490" loc="73:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6a97638"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x2ab9c6a8ed78" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6a97638"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2ab9c6a8eb08" loc="90:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6a97638"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x2ab9c50fe488"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x2ab9c50fe488"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x2ab9c6ad9c38" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6a97638"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2ab9c6ad99c8" loc="101:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2ab9c6a91d48" loc="65:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2ab9c6a8e020" loc="81:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6a97638"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2ab9c6a97e60" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2ab9c6a915b8" loc="58:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x2ab9c6a96988" loc="49:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x2ab9c6a94030" loc="51:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x2ab9c6a961d8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x2ab9c6a94690" loc="52:/opt/tinyos-2.1.2/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x2ab9c6ad3068" loc="50:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6ad3068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2ab9c6acf020" loc="97:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6ad3068"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x2ab9c6ad28e8" loc="80:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x2ab9c6ad3890" loc="61:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x2ab9c6ad1338" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2ab9c59f51a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6ad3068"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x2ab9c6ad10c8" loc="89:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x2ab9c6ad3068"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x2ab9c6ad20d8" loc="72:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.1.2/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x2ab9c6cd0bf0" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6cd3e70" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2ab9c6cd0650" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2ab9c6cd0960" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2ab9c5103160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x2ab9c6e2dc88" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e2da18" loc="51:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x2ab9c6e285c0" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e28020" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x2ab9c6e28340" loc="57:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x2ab9c6e2d020" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e2e9e8" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x2ab9c6e2ed38" loc="48:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x2ab9c6e295b0" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2ab9c5103b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e29340" loc="56:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x2ab9c6e2e020" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e309d8" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x2ab9c6e30d28" loc="47:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x2ab9c6e2a8f8" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e2a340" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2ab9c6e2a678" loc="54:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x2ab9c6e2c950" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2ab9c5b41878"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e2c6e0" loc="53:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x2ab9c6e30020" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2ab9c59e29b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2ab9c6e318f8" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2ab9c5b44cf0"/>
                <typename><typedef-ref name="message_t" ref="0x2ab9c5b522e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x2ab9c6e31c48" loc="46:/opt/tinyos-2.1.2/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x2ab9c5b60188"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
